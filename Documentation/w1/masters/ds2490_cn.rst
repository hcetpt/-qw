===== 核心驱动 ds2490 =====

支持的芯片：

  * 基于 Maxim DS2490 的芯片

作者: Evgeniy Polyakov <johnpol@2ka.mipt.ru>

描述
-----------

Maxim/Dallas Semiconductor DS2490 是一种芯片，它允许构建 USB <-> W1 桥接器。DS9490(R) 是一种 USB <-> W1 总线主设备，该设备集成了 0x81 家族 ID 芯片和 DS2490 低级操作芯片。

注意事项与限制
- 弱上拉电流最小为 0.9mA，最大为 6.0mA。
- 5V 强上拉电流支持最小 5.9mA 和最大 30.4mA。（来自 DS2490.pdf）
- 硬件会在下一次总线（重置？）操作时检测到有设备连接到总线上，但只会打印一条消息，因为核心 W1 代码并未利用这些信息。连接一个设备通常会收到多个新设备的通知。
- 如果在 API 中添加了 `w1_reset_send`，可以减少 USB 总线事务的数量。名称仅作为建议。它将接受写缓冲区和读缓冲区（连同大小）作为参数。
ds2490 块 I/O 命令支持重置、写缓冲区、读缓冲区以及强上拉全部在一个命令中，而不是当前的 1 重置总线、2 写匹配 ROM 命令和从属 ROM ID、3 块写入和读取数据。写缓冲区需要将匹配 ROM 命令和从属 ROM ID 添加到请求写缓冲区的前面，这两个值对于驱动程序是已知的。
- 硬件支持标准、灵活和超速总线通信速度，但目前仅支持标准速度。
- 注册的 w1_bus_master 函数没有定义错误条件。如果正在进行总线搜索，并且移除了 ds2490，则在总线搜索完成之前可能会产生大量的错误输出。
- 硬件支持检测某些错误条件，例如短路、重置时的报警存在以及重置时的不存在，但驱动程序并未查询这些值。
DS2490 规范没有详细说明短批量读取的情况，但我的观察结果是：如果请求的字节数少于可用的字节数，批量读取将返回错误，并且硬件会清除整个批量输入缓冲区。可以通过读取最大缓冲区大小来避免遇到这种错误条件，但在缓冲区中的额外字节是驱动程序中的逻辑错误。代码应该匹配读取和写入以及数据大小。读取和写入是串行化的，并且状态验证在执行读取之前芯片处于空闲状态（并且数据可用），因此这种情况不应该发生。

在 x86_64 架构上运行 2.6.24 版本的 UHCI，使用 qemu 0.9.0 在 x86_64 2.6.22-rc6 系统上带有 OHCI 控制器的情况下，当 qemu 连接 DS2490 硬件后首次加载模块时，DS2490 在虚拟机中能正常运行，但如果卸载模块后再重新加载，则大部分情况下会出现批量输出或输入失败，通常是批量输入失败。qemu 设置了 50 毫秒的超时时间，即使状态显示有数据可用，批量输入也会超时。批量输出写入会显示成功完成，但是 DS2490 的状态寄存器会显示已写入 0 字节。从 DS2490 硬件上解除 qemu 并重新连接可以解决这个问题。在虚拟机和宿主机上的 usbmon 输出未能解释这个问题。我认为这可能是 qemu 或宿主机操作系统中的一个bug，更有可能是宿主机操作系统的bug。

2008年3月6日 David Fries <David@Fries.net>
