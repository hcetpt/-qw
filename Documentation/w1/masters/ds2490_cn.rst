标题：====================
内核驱动 ds2490
====================

支持的芯片：

  * 基于 Maxim DS2490 的芯片

作者：Evgeniy Polyakov <johnpol@2ka.mipt.ru>

描述
-----------

Maxim/Dallas Semiconductor DS2490 是一款芯片，
它允许构建 USB <-> W1 桥接器。
DS9490(R) 是一个 USB <-> W1 总线主设备，
它集成了 0x81 家族 ID 芯片和 DS2490
低级操作芯片。

注释与限制
- 弱上拉电流的最小值为 0.9mA，最大值为 6.0mA
- 支持 5V 强上拉，最小电流为 5.9mA，最大电流为 30.4 mA。（来自 DS2490.pdf）
- 硬件将在下一次总线（重置？）操作时检测到总线上有设备连接，但仅打印一条消息，因为核心 W1 代码不使用该信息。连接一个设备往往会产生多个新设备通知
- 如果在 API 中添加了 w1_reset_send，可以减少 USB 总线事务的数量。名称仅为建议。它将接受写缓冲区和读缓冲区（以及大小）作为参数。
Ds2490 块 I/O 命令支持重置、写缓冲区、读缓冲区和强上拉，所有这些都在一个命令中完成，而不是当前的 1 重置总线，2 写入匹配 ROM 命令和从机 ROM ID，3 块写入和读取数据。写缓冲区需要将匹配 ROM 命令和从机 ROM ID 添加到请求的写缓冲区的前面，这两个都为驱动程序所知
- 硬件支持正常、灵活和超速总线通信速度，但仅支持正常速度
- 注册的 w1_bus_master 函数没有定义错误条件。如果正在进行总线搜索，并且移除了 ds2490，它可以在总线搜索完成前产生大量错误输出
- 硬件支持检测某些错误条件，如短路、复位时的报警存在和复位时的不存在，但驱动程序没有查询这些值
- DS2490规范没有详细涵盖短批量读取的情况，但我的观察是，如果请求的字节数少于可用的字节数，批量读取将返回错误，并且硬件会清除整个批量输入缓冲区。有可能通过读取最大缓冲区大小来避免这个错误条件，但在缓冲区中的额外字节是驱动程序中的逻辑错误。代码应该匹配读写以及数据大小。读写是串行化的，并且在执行读取操作之前，状态确认芯片处于空闲状态（并且有数据可用），因此这种情况不应该发生。

- 在x86_64 2.6.24 UHCI下运行qemu 0.9.0，在x86_64 2.6.22-rc6下带有OHCI控制器，ds2490在虚拟机中首次加载模块后会正常运行，这是在qemu连接了ds2490硬件之后。但如果卸载模块，然后重新加载，大部分情况下，批量输出或输入之一，通常是批量输入会失败。qemu设置了一个50毫秒的超时时间，即使状态显示有数据可用，批量输入仍会超时。批量输出写入会显示成功完成，但是ds2490的状态寄存器会显示未写入任何字节。从ds2490硬件上分离qemu并重新连接会解决问题。在主机和虚拟机中的usbmon输出无法解释这个问题。我猜测这可能是qemu或主机操作系统中的bug，更可能是在主机操作系统中。
03-06-2008 David Fries <David@Fries.net>
