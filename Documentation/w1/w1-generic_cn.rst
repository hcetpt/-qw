======================
1-Wire (w1) 子系统简介
======================

1-Wire 总线是一种简单的主从式总线，通过单根信号线（加上地线，因此共两根线）进行通信。
设备通过开放的漏极输出将信号拉至地线以及采样信号线的逻辑电平来在总线上通信。
w1 子系统提供了管理 w1 主机和与从设备通信的框架。
所有 w1 从设备都必须连接到一个 w1 总线主机设备上。
示例 w1 主机设备包括：

    - DS9490 USB 设备
    - 基于 GPIO 的 1-Wire
    - DS2482（I²C 至 1-Wire 桥接器）
    - 模拟设备，例如 RS232 转换器、并口适配器等

w1 子系统的作用是什么？
------------------------------

当一个 w1 主机驱动程序向 w1 子系统注册时，会发生以下情况：

- 为该 w1 主机创建 sysfs 条目
- 定期搜索 w1 总线以查找新从设备

当在总线上发现设备时，w1 核心尝试加载其家族的驱动程序，并检查是否已加载。如果已加载，则家族驱动程序会绑定到从设备。
如果没有针对该家族的驱动程序，则分配默认驱动程序，该驱动程序允许执行几乎任何类型的运算。每个逻辑运算本质上是一次事务，可能包含若干个（两个或一个）低级运算。
让我们看看如何读取 EEPROM 内容：
1. 需要写入控制缓冲区，即包含命令字节和两个地址字节的缓冲区。在此步骤中，总线被重置，并使用 W1_SKIP_ROM 或 W1_MATCH_ROM 命令选择合适的设备。然后将提供的控制缓冲区写入到总线上。
2. 进行读取。这将触发读取 EEPROM 的响应。
在步骤 1 和 2 之间，可能会发生 w1 主线程重置总线进行搜索的情况，甚至从设备也可能被移除，但这种情况下会读取到 0xff，因为没有设备被选中。
W1 设备家族
------------------

从属设备由为 W1 设备家族编写的驱动程序处理。
家族驱动程序填充一个 `struct w1_family_ops` 结构（参见 w1_family.h）并注册到 W1 子系统中。
当前的家族驱动程序包括：

w1_therm
  - (ds18?20 温度传感器家族驱动程序)
    提供温度读取功能，该功能绑定到上述 `w1_family_ops` 结构中的 `->rbin()` 方法。
w1_smem
  - 简单 64 位内存单元的驱动程序，提供 ID 读取方法。
你可以通过读取适当的 sysfs 文件来调用上述方法。

W1 主控驱动需要实现什么？
-----------------------------------------------

W1 总线主控的驱动程序至少必须提供两个函数：
模拟设备必须提供设置输出信号电平（`write_bit`）和采样信号电平（`read_bit`）的能力；
支持 1-Wire 的原生设备必须提供写入和采样一个位（`touch_bit`）以及重置总线（`reset_bus`）的能力。
大多数硬件提供了更高级别的函数，用于卸载 W1 处理任务。
详情请参阅 `w1.h` 中 `struct w1_bus_master` 的定义。
### w1 主控 sysfs 接口
-------------------------

========================= =====================================================
<xx-xxxxxxxxxxxx>         已检测到设备的目录。格式为
                          家族-序列号
bus                       （标准）指向 w1 总线的符号链接
driver                    （标准）指向 w1 驱动的符号链接
w1_master_add             （读写）手动注册从属设备
w1_master_attempts        （只读）搜索尝试的次数
w1_master_max_slave_count （读写）一次可搜索的最大从属设备数
w1_master_name            （只读）设备名称（例如：w1_bus_masterX）
w1_master_pullup          （读写）5V 强上拉 0 启用，1 禁用
w1_master_remove          （读写）手动移除从属设备
w1_master_search          （读写）剩余的搜索次数，
                          -1=持续（默认）
w1_master_slave_count     （只读）已找到的从属设备数量
w1_master_slaves          （只读）从属设备的名称，每行一个
w1_master_timeout         （只读）两次搜索之间的延迟（秒）
w1_master_timeout_us      （只读）两次搜索之间的延迟（微秒）
========================= =====================================================

如果你有一个永远不会改变的 w1 总线（你不会添加或移除设备），你可以将模块参数 `search_count` 设置为一个小的正整数以减少初始搜索次数。或者可以将其设置为零，然后通过 `w1_master_add` 设备文件手动添加从属设备的序列号。通常只有在禁用了搜索的情况下，`w1_master_add` 和 `w1_master_remove` 文件才有意义，因为搜索会重新检测被手动移除且仍然存在的设备，并超时那些不在总线上但被手动添加的设备。

总线搜索会在固定的时间间隔进行，这个时间间隔由 `timeout` 和 `timeout_us` 模块参数之和指定（这两个参数都可以是 0），只要 `w1_master_search` 的值大于 0 或者等于 -1 就会一直进行搜索。每次搜索尝试都会使 `w1_master_search` 减少 1（直至 0），并使 `w1_master_attempts` 增加 1。

### w1 从属 sysfs 接口
------------------------

=================== ============================================================
bus                 （标准）指向 w1 总线的符号链接
driver              （标准）指向 w1 驱动的符号链接
name                设备名称，通常与目录名称相同
w1_slave            （可选）一个二进制文件，其含义取决于家族驱动程序
rw                  （可选）为没有适当家族驱动程序的从属设备创建。允许读写二进制数据
=================== ============================================================
