This Netlink specification describes the structure and functionality for configuring and querying network interfaces (links) using the `rtnetlink` protocol. Here's a detailed breakdown:

### License and Metadata
- **License**: The code is licensed under either GPL-2.0 with the Linux-syscall-note or BSD-3-Clause.
- **Name**: `rt-link`
- **Protocol**: `netlink-raw`
- **Protocol Number**: `0`

### Documentation
- **Link Configuration over rtnetlink**: This section provides a brief description of what the specification covers.

### Definitions
#### Flags: `ifinfo-flags`
- Defines various states and properties that can be applied to a network interface, such as `up`, `broadcast`, `loopback`, etc.

#### Enum: `vlan-protocols`
- Specifies VLAN protocols like `8021q` and `8021ad`.

#### Struct: `rtgenmsg`
- Contains the `family` field which specifies the address family.

#### Struct: `ifinfomsg`
- Represents the basic information of a network interface, including fields like `ifi-family`, `ifi-type`, `ifi-index`, `ifi-flags`, etc.

#### Struct: `ifla-bridge-id`
- Contains the bridge's priority and MAC address.

#### Struct: `ifla-cacheinfo`
- Includes details about the neighbor cache, such as maximum reassembly length, timestamp, reachable time, and retransmission time.

#### Struct: `rtnl-link-stats`
- Provides statistics for a link, such as received and transmitted packets, errors, dropped packets, and more.

#### Struct: `rtnl-link-stats64`
- Similar to `rtnl-link-stats` but uses 64-bit integers for better precision.

#### Struct: `rtnl-link-ifmap`
- Describes the memory mapping of a device, including memory start and end addresses, IRQ, DMA, and port number.

#### Struct: `ipv4-devconf`
- Contains IPv4-related configuration options, such as forwarding, multicast forwarding, proxy ARP, and more.

#### Struct: `ipv6-devconf`
- Contains IPv6-related configuration options, such as forwarding, hop limit, MTU, and more.

#### Struct: `ifla-icmp6-stats`
- Contains ICMPv6 statistics, such as incoming and outgoing messages, errors, and checksum errors.

#### Struct: `ifla-inet6-stats`
- Provides statistics related to IPv6, including packet counts, octet counts, and error counts.

#### Struct: `br-boolopt-multi`
- A simple structure containing two fields: `optval` and `optmask`.

#### Struct: `if_stats_msg`
- Contains the family, padding, interface index, and filter mask for filtering statistics.

#### Struct: `ifla-vlan-flags`
- Describes the flags for VLAN interfaces, including reorder header, GVRP, and others.

#### Flags: `vlan-flags`
- Defines various flags for VLAN interfaces, such as reorder header, GVRP, and others.

#### Struct: `ifla-vlan-qos-mapping`
- Maps VLAN priorities from one value to another.

#### Struct: `ifla-vf-mac`
- Describes the virtual function MAC address.

#### Struct: `ifla-vf-vlan`
- Describes VLAN settings for a virtual function.

#### Struct: `ifla-vf-tx-rate`
- Specifies the transmit rate for a virtual function.

#### Struct: `ifla-vf-spoofchk`
- Specifies whether spoof checking is enabled for a virtual function.

#### Struct: `ifla-vf-link-state`
- Describes the link state for a virtual function.

#### Enum: `ifla-vf-link-state-enum`
- Defines possible link states (`auto`, `enable`, `disable`).

#### Struct: `ifla-vf-rate`
- Specifies the minimum and maximum transmit rates for a virtual function.

#### Struct: `ifla-vf-rss-query-en`
- Specifies whether RSS query is enabled for a virtual function.

#### Struct: `ifla-vf-trust`
- Specifies whether traffic from a virtual function is trusted.

#### Struct: `ifla-vf-guid`
- Contains the GUID for a virtual function.

#### Struct: `ifla-vf-vlan-info`
- Describes VLAN information for a virtual function.

#### Flags: `rtext-filter`
- Defines filters for various link-related configurations, such as VF, BRVLAN, and others.

### Attribute Sets
- **link-attrs**: Defines attributes for links, such as address, broadcast, interface name, MTU, and more.

- **af-spec-attrs**: Specifies attributes for address families (`inet`, `inet6`, `mctp`).

- **vfinfo-list-attrs**: Defines attributes for virtual functions, including MAC address, VLAN settings, TX rate, and more.

- **vfinfo-attrs**: Specifies individual attributes for virtual functions, such as MAC address, VLAN settings, TX rate, and more.

- **vf-stats-attrs**: Defines statistics for virtual functions, including packet counts, byte counts, and dropped packets.

- **vf-vlan-attrs**: Specifies VLAN information for virtual functions.

- **vf-ports-attrs**, **port-self-attrs**: These sets contain no attributes.

- **linkinfo-attrs**: Defines attributes for link information, including kind, data, and slave data.

- **linkinfo-bond-attrs**: Specifies attributes for bonding interfaces, such as mode, active slave, and monitoring intervals.

- **bond-ad-info-attrs**: Contains additional information for AD (Aggregator Discovery) interfaces, such as aggregator ID, number of ports, and actor key.

- **bond-slave-attrs**: Specifies attributes for bond slaves, such as state, MII status, and link failure count.

- **linkinfo-bridge-attrs**: Defines attributes for bridge interfaces, such as forward delay, hello time, and maximum age.

- **linkinfo-brport-attrs**: Specifies attributes for bridge ports, such as state, priority, and mode.

- **linkinfo-gre-attrs**, **linkinfo-geneve-attrs**, **linkinfo-iptun-attrs**, **linkinfo-tun-attrs**, **linkinfo-vlan-attrs**, **linkinfo-vrf-attrs**: Define attributes for specific types of interfaces, such as GRE, Geneve, IP tunnels, TUN devices, VLANs, and VRFs.

- **xdp-attrs**: Specifies attributes for eXpress Data Path (XDP) programs, including file descriptor, attached flag, and program IDs.

- **ifla-attrs**, **ifla6-attrs**, **mctp-attrs**: Define attributes for IPv4, IPv6, and MCTP interfaces, respectively.

- **stats-attrs**: Specifies attributes for link statistics, including 64-bit link statistics and offloaded statistics.

- **link-offload-xstats**: Defines offloaded statistics, such as CPU hit and hardware-specific information.

- **hw-s-info-one**: Specifies attributes for hardware statistics, such as request and used values.

- **link-dpll-pin-attrs**: Defines attributes for DPLL pins, including the pin ID.

### Sub-Messages
- **linkinfo-data-msg**: Specifies the format for link information data based on the interface type (e.g., bond, bridge, GRE, etc.).

- **linkinfo-member-data-msg**: Specifies the format for member data based on the interface type (e.g., bridge, bond).

### Operations
- **newlink**: Creates a new link.
- **dellink**: Deletes an existing link.
- **getlink**: Gets or dumps information about a link.
- **setlink**: Sets information about a link.
- **getstats**: Gets or dumps link statistics.

### Multicast Groups
- **rtnlgrp-link**: Group for link-related events.
- **rtnlgrp-stats**: Group for statistics-related events.

This specification comprehensively defines the structures and operations necessary for managing and querying network interfaces using the `rtnetlink` protocol.
