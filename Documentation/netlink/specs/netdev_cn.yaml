# SPDX 许可证标识符: ((GPL-2.0 WITH Linux-syscall-note) 或 BSD-3-Clause)

名称: netdev

文档:
  netdev 配置通过通用 netlink 实现

定义:
  -
    类型: 标志
    名称: xdp-act
    渲染最大值: 真
    条目:
      -
        名称: basic
        文档:
          所有驱动程序支持的 XDP 功能集
          (XDP_ABORTED, XDP_DROP, XDP_PASS, XDP_TX)
      -
        名称: redirect
        文档:
          网络设备支持 XDP_REDIRECT
      -
        名称: ndo-xmit
        文档:
          此功能告知 netdev 是否实现了 ndo_xdp_xmit 回调
      -
        名称: xsk-zerocopy
        文档:
          此功能告知 netdev 是否支持零拷贝模式下的 AF_XDP
      -
        名称: hw-offload
        文档:
          此功能告知 netdev 是否支持 XDP 硬件卸载
      -
        名称: rx-sg
        文档:
          此功能告知 netdev 在驱动程序 napi 回调中是否实现了非线性 XDP 缓冲区支持
      -
        名称: ndo-xmit-sg
        文档:
          此功能告知 netdev 在 ndo_xdp_xmit 回调中是否实现了非线性 XDP 缓冲区支持

  -
    类型: 标志
    名称: xdp-rx-metadata
    条目:
      -
        名称: timestamp
        文档:
          设备能够通过 bpf_xdp_metadata_rx_timestamp() 暴露接收硬件时间戳
      -
        名称: hash
        文档:
          设备能够通过 bpf_xdp_metadata_rx_hash() 暴露接收数据包的哈希值
      -
        名称: vlan-tag
        文档:
          设备能够通过 bpf_xdp_metadata_rx_vlan_tag() 暴露接收数据包的 VLAN 标签

  -
    类型: 标志
    名称: xsk-flags
    条目:
      -
        名称: tx-timestamp
        文档:
          驱动程序支持对传出数据包进行硬件时间戳处理
翻译如下：

```
# 对于tx-checksum属性的描述：
name: tx-checksum
doc: 
  驱动程序支持L3校验和硬件卸载功能。

# 对于queue-type属性的描述：
name: queue-type
type: 枚举类型
entries: [接收队列(rx), 发送队列(tx)]

# 对于qstats-scope属性的描述：
name: qstats-scope
type: 标志位
entries: [队列(queue)]

# 属性集合：
attribute-sets:
  # 设备(dev)属性集：
  - 
    name: dev
    attributes:
      - 
        name: ifindex
        doc: 网络设备的ifindex
        type: 无符号32位整数(u32)
        checks:
          min: 1
      - 
        name: pad
        type: 填充(pad)
      - 
        name: xdp-features
        doc: 已启用的xdp-features位掩码
        type: 无符号64位整数(u64)
        enum: xdp-act
      - 
        name: xdp-zc-max-segs
        doc: ZC驱动支持的最大片段数量
        type: 无符号32位整数(u32)
        checks:
          min: 1
      - 
        name: xdp-rx-metadata-features
        doc: 支持的XDP接收元数据特性位掩码
        更多详情请参阅Documentation/networking/xdp-rx-metadata.rst
        type: 无符号64位整数(u64)
        enum: xdp-rx-metadata
      - 
        name: xsk-features
        doc: 已启用的AF_XDP特性位掩码
        type: 无符号64位整数(u64)
        enum: xsk-flags

  # 页面池(page-pool)属性集：
  -
    name: page-pool
    attributes:
      -
        name: id
        doc: 页面池实例的唯一ID
        type: 无符号整数(uint)
        checks:
          min: 1
          max: u32最大值
      -
        name: ifindex
        doc: |
          所属网络设备的ifindex。
          如果页面池分配给的网络设备已经被销毁，可能会报告为0（页面池可能比其所属的网络设备更持久，
          因为它们等待所有内存被归还）
        type: 无符号32位整数(u32)
        checks:
          min: 1
          max: s32最大值
      -
        name: napi-id
        doc: 使用此页面池实例的NAPI的ID
        type: 无符号整数(uint)
        checks:
          min: 1
          max: u32最大值
      -
        name: inflight
        type: 无符号整数(uint)
        doc: |
          指向该页面池的未决引用数量（已分配但尚未释放的页面）。
          已分配的页面可能被持有在网络套接字接收队列、驱动程序接收环、页面池回收环、页面池缓存等地方。
```
下面是给定内容的中文翻译：

- 
    名称: inflight-mem
    类型: uint
    文档: |
      正在飞行中的页面所占用的内存总量
- 
    名称: detach-time
    类型: uint
    文档: |
      页面池被驱动程序解除关联时的CLOCK_BOOTTIME秒数。一旦页面池被解除关联，就不能再用于分配内存。
页面池在真正消失前会等待所有从其分配的内存被释放。
"已解除关联"的页面池不能"重新关联"，它们只是在等待消失。
如果页面池尚未被解除关联，则此属性不存在，仍可用于分配新内存。
- 
    名称: page-pool-info
    属于: page-pool
    属性:
      - 
        名称: id
      - 
        名称: ifindex
  - 
    名称: page-pool-stats
    文档: |
      页面池统计信息，参见struct page_pool_stats结构的文档以获取关于各个统计信息的信息。
属性:
      - 
        名称: info
        文档: 页面池识别信息
        类型: nest
        嵌套属性: page-pool-info
      - 
        名称: alloc-fast
        类型: uint
        值: 8 # 预留一些属性ID，以防我们以后需要更多元数据
      - 
        名称: alloc-slow
        类型: uint
      - 
        名称: alloc-slow-high-order
        类型: uint
      - 
        名称: alloc-empty
        类型: uint
      - 
        名称: alloc-refill
        类型: uint
      - 
        名称: alloc-waive
        类型: uint
      - 
        名称: recycle-cached
        类型: uint
      - 
        名称: recycle-cache-full
        类型: uint
      - 
        名称: recycle-ring
        类型: uint
      - 
        名称: recycle-ring-full
        类型: uint
      - 
        名称: recycle-released-refcnt
        类型: uint

  - 
    名称: napi
    属性:
      - 
        名称: ifindex
        文档: NAPI实例所属网络设备的ifindex
        类型: u32
        检查:
          最小值: 1
      - 
        名称: id
        文档: NAPI实例的ID
        类型: u32
      - 
        名称: irq
        文档: 与napi关联的中断向量编号
        类型: u32
      - 
        名称: pid
        文档: NAPI线程的PID，如果NAPI配置为在多线程模式下运行。如果NAPI不在多线程模式下（即使用正常的软中断上下文），则该属性将不存在
        类型: u32
  - 
    名称: queue
    属性:
      - 
        名称: id
        文档: 队列索引；大多数队列类型像C数组一样进行索引，索引从0开始，到队列计数减1结束。队列索引在接口和队列类型范围内有效。
下面是提供的英文描述翻译成中文的结果：

类型: u32  
-  
  名称: ifindex  
  说明: 队列所属网络设备的 ifindex  

类型: u32  
  检查:  
    最小值: 1  

-  
  名称: type  
  说明: 队列类型，如接收(rx)、发送(tx)。每种队列类型定义了一个独立的ID空间。  
类型: u32  
  枚举: queue-type  

-  
  名称: napi-id  
  说明: 服务于该队列的 NAPI 实例的 ID。  
类型: u32  

-  
  名称: qstats  
  说明: |
    获取设备统计信息，这些统计信息针对设备或队列进行作用域划分。
    这些统计信息扩展了（并部分重复）在结构体 rtnl_link_stats64 中可用的统计信息。
    `scope` 属性的值决定了统计信息是如何聚合的。当为整个设备聚合时，
    统计信息代表自上一次显式重置设备以来发生的总事件数（即不是像改变队列数量这样的重新配置）。
    然而，当按队列报告时，统计信息可能不会加总到总的事件数，仅会为当前活跃的对象报告，
    并且很可能报告的是自上次重新配置以来发生的事件数。
属性:  
  -  
    名称: ifindex  
    说明: 统计信息所属网络设备的 ifindex  
  类型: u32  
    检查:  
      最小值: 1  

  -  
    名称: queue-type  
    说明: 队列类型(rx, tx)，用于 queue-id  
  类型: u32  
    枚举: queue-type  

  -  
    名称: queue-id  
    说明: 队列 ID，如果统计信息作用于单个队列实例。  
类型: u32
类型: u32
      -
        名称: scope
        说明: |
          应用于迭代统计信息的对象类型是什么
类型: 无符号整数
        枚举: qstats-scope
      -
        名称: rx-packets
        说明: |
          成功接收并传递给堆栈的线路数据包的数量
对于支持XDP的驱动程序，XDP被视为堆栈的第一层，
因此被XDP消耗的数据包仍然在这里计数
类型: 无符号整数
        值: 8 # 预留一些属性ID，以防我们以后需要更多的元数据
      -
        名称: rx-bytes
        说明: 成功接收的字节数，参见`rx-packets`
类型: 无符号整数
      -
        名称: tx-packets
        说明: |
          成功发送的线路数据包的数量。当数据包进入设备内存时（通常这意味着
          设备已经为该数据包发出了DMA完成指令）即视为成功发送
类型: 无符号整数
      -
        名称: tx-bytes
        说明: 成功发送的字节数，参见`tx-packets`
类型: 无符号整数
      -
        名称: rx-alloc-fail
        说明: |
          在接收数据路径上skb或缓冲区分配失败的次数
分配失败可能会导致数据包丢失，也可能不会，
这取决于驱动程序的实现和系统是否能快速恢复
类型: 无符号整数
      -
        名称: rx-hw-drops
        说明: |
          进入设备但从未离开设备的所有数据包的数量，
          包括但不限于：由于缺乏缓冲区空间、处理错误、显式或隐式策略以及
          数据包过滤器而丢弃的数据包
类型: 无符号整数
      -
        名称: rx-hw-drop-overruns
        说明: |
          由于瞬时资源不足（如缓冲区空间、主机描述符等）而丢弃的数据包数量
类型：无符号整型
- 
  名称：rx-csum-complete
  说明：被标记为CHECKSUM_COMPLETE的报文数量
类型：无符号整型
- 
  名称：rx-csum-unnecessary
  说明：被标记为CHECKSUM_UNNECESSARY的报文数量
类型：无符号整型
- 
  名称：rx-csum-none
  说明：设备未进行校验和计算的报文数量
类型：无符号整型
- 
  名称：rx-csum-bad
  说明： |
    校验和错误的报文数量。这些报文不会被丢弃，
    但仍然会被传递给协议栈
类型：无符号整型
- 
  名称：rx-hw-gro-packets
  说明： |
    被设备从小报文合并的报文数量
仅统计使用HW-GRO网卡特性合并的报文，
    LRO合并的报文不被统计
类型：无符号整型
- 
  名称：rx-hw-gro-bytes
  说明：参见`rx-hw-gro-packets`
类型：无符号整型
- 
  名称：rx-hw-gro-wire-packets
  说明： |
    使用HW-GRO特性合并为大报文的报文数量。
    LRO合并的报文不被统计
类型：无符号整型
- 
  名称：rx-hw-gro-wire-bytes
  说明：参见`rx-hw-gro-wire-packets`
类型：无符号整型
- 
  名称：rx-hw-drop-ratelimits
  说明： |
    因接收报文比特率超过设备速率限制而被设备丢弃的报文数量
类型：无符号整型
- 
  名称：tx-hw-drops
  文档： |
    到达设备但从未离开的报文数量，包括因处理错误等原因被丢弃的报文，
    以及受明确定义的策略和报文过滤标准影响的报文
类型：无符号整型
- 
  名称：tx-hw-drop-errors
  文档：因无效或格式错误而被丢弃的报文数量
类型：无符号整型
- 
  名称：tx-csum-none
  文档： |
    不需要设备计算校验和的报文数量
类型：无符号整型
- 
  名称：tx-needs-csum
  文档： |
    需要设备计算校验和的报文数量
类型：无符号整型
- 
  名称：tx-hw-gso-packets
  文档： |
    需要由设备分割成更小报文的报文数量
类型：无符号整型
- 
  名称：tx-hw-gso-bytes
  文档：参见 `tx-hw-gso-packets`
类型：无符号整型
- 
  名称：tx-hw-gso-wire-packets
  文档： |
    处理`tx-hw-gso-packets`生成的线路大小报文数量
类型：无符号整型
- 
  名称：tx-hw-gso-wire-bytes
  文档：参见 `tx-hw-gso-wire-packets`
类型：无符号整型
- 
  名称：tx-hw-drop-ratelimits
  文档： |
    因为发送报文比特率超过设备速率限制而被设备丢弃的报文数量
类型：无符号整型
- 
  名称：tx-stop
  文档： |
    驱动程序暂停接受来自堆栈到此队列的新发送报文的次数，
    原因是队列已满。
请注意，如果设备支持并启用了BQL，
    网络堆栈将避免一次性排队大量数据。
类型：无符号整型
      -
        名称：tx-wake
        文档： |
          驱动程序重新开始接受向此队列发送请求的次数

类型：无符号整型

操作：
  列表：
    -
      名称：dev-get
      文档：获取/转储关于网络设备的信息
属性集：dev
      执行：
        请求：
          属性：
            - ifindex
        回复：&dev-all
          属性：
            - ifindex
            - xdp-features
            - xdp-zc-max-segs
            - xdp-rx-metadata-features
            - xsk-features
      转储：
        回复：*dev-all
    -
      名称：dev-add-ntf
      文档：关于设备出现的通知
通知：dev-get
      多播组：mgmt
    -
      名称：dev-del-ntf
      文档：关于设备消失的通知
通知：dev-get
      多播组：mgmt
    -
      名称：dev-change-ntf
      文档：关于设备配置更改的通知
通知：dev-get
      多播组：mgmt
    -
      名称：page-pool-get
      文档： |
        获取/转储有关页面池的信息
（仅能列出与网络设备关联的页面池。）
      属性集：page-pool
      执行：
        请求：
          属性：
            - id
        回复：&pp-reply
          属性：
            - id
            - ifindex
            - napi-id
            - inflight
            - inflight-mem
            - detach-time
      转储：
        回复：*pp-reply
      配置条件：page-pool
    -
      名称：page-pool-add-ntf
      文档：关于页面池出现的通知
通知：page-pool-get
      多播组：page-pool
      配置条件：page-pool
    -
      名称：page-pool-del-ntf
      文档：关于页面池消失的通知
通知：page-pool-get
      多播组：page-pool
      配置条件：page-pool
    -
      名称：page-pool-change-ntf
      文档：关于页面池配置更改的通知
通知：page-pool-get
      多播组：page-pool
      配置条件：page-pool
    -
      名称：page-pool-stats-get
      文档：获取页面池统计信息
属性集：页面池统计
操作：
请求：
属性：
- 信息
回复：（引用为pp-stats-reply）
属性：
- 信息
- 快速分配
- 慢速分配
- 高阶慢速分配
- 空分配
- 重新填充分配
- 放弃分配
- 回收缓存
- 缓存满回收
- 回收环形缓冲区
- 环形缓冲区满回收
- 已释放引用计数回收
导出：
回复：*pp-stats-reply
配置条件：页面池统计
-
名称：队列获取
文档：从内核获取队列信息
仅报告已配置的队列（而非所有可用硬件队列）
属性集：队列
操作：
请求：
属性：
- 接口索引
- 类型
- ID
回复：（引用为queue-get-op）
属性：
- ID
- 类型
- NAPI-ID
- 接口索引
导出：
请求：
属性：
- 接口索引
回复：*queue-get-op
-
名称：NAPI获取
文档：获取系统上配置的NAPI实例信息
属性集：NAPI
操作：
请求：
属性：
- ID
回复：（引用为napi-get-op）
属性：
- ID
- 接口索引
- 中断请求
- 进程ID
导出：
请求：
属性：
- 接口索引
回复：*napi-get-op
-
名称：队列统计获取
文档：|
获取/导出详细的统计信息。报告哪些统计信息取决于设备、驱动程序以及驱动程序是否为每个队列存储软件计数器
属性集：队列统计
导出：
请求：
属性：
- 接口索引
- 范围
回复：
属性：
- 接口索引
- 队列类型
- 队列ID
- 接收数据包
- 接收字节
- 发送数据包
- 发送字节

多播组：
列表：
-
名称：管理
-
名称：页面池
