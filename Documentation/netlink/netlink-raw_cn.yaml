下面是给定 YAML 文档的中文翻译：

```yaml
# SPDX 许可声明标识符: ((GPL-2.0 WITH Linux-syscall-note) 或 BSD-3-Clause)
%YAML 1.2
---
$id: http://kernel.org/schemas/netlink/netlink-raw.yaml#
$schema: https://json-schema.org/draft-07/schema

# 公共定义
$defs:
  uint:
    类型: 整数
    最小值: 0
  len-or-define:
    类型: [ 字符串, 整数 ]
    正则表达式: ^[0-9A-Za-z_-]+( - 1)?$ 
    最小值: 0

# 规范模式
标题: 协议
描述: 原始 netlink 协议的规范
类型: 对象
必需: [ name, doc, attribute-sets, operations ]
不允许额外属性: True
属性:
  name:
    描述: netlink 家族的名称
    类型: 字符串
  doc:
    类型: 字符串
  protocol:
    描述: 模式兼容性级别
    枚举: [ netlink-raw ] # 精简
  # 开始 netlink-raw
  protonum:
    描述: 用于 netlink-raw 的协议编号
    类型: 整数
  # 结束 netlink-raw
  uapi-header:
    描述: uAPI 头文件的路径，默认为 linux/${family-name}.h
    类型: 字符串
  # 开始 genetlink-c
  c-family-name:
    描述: 家族名称的宏定义名称
    类型: 字符串
  c-version-name:
    描述: 家族版本的宏定义名称
    类型: 字符串
  max-by-define:
    描述: 通过宏而不是枚举值来指定属性和命令的数量
    类型: 布尔值
  cmd-max-name:
    描述: 列表中最后一个操作的宏定义名称
    类型: 字符串
  cmd-cnt-name:
    描述: 明确指定持有操作计数（最后一个操作 + 1）的常量名称
    类型: 字符串
  # 结束 genetlink-c
  # 开始 genetlink-legacy
  kernel-policy:
    描述: |
      定义内核中的输入策略是全局的、每个操作单独的还是按操作类型分割的
      默认是分割
    枚举: [ 分割, 每操作, 全局 ]
  # 结束 genetlink-legacy

  definitions:
    描述: 类型和常量定义（枚举、标志、宏等）的列表
```

请注意，这段翻译尽可能地保持了原始 YAML 文档的结构与格式。
以下是提供的 YAML 片段的中文翻译：

类型：数组
元素：
  类型：对象
  必需字段：[类型, 名称]
  不允许额外属性：否
  属性：
    名称：
      类型：字符串
    头文件：
      描述：对于与 C 兼容的语言，已定义该值的头文件
    类型：
      枚举：[const, enum, flags, struct] # Trim
    文档：
      类型：字符串
    # 对于 const
    值：
      描述：对于 const - 其值
    类型：[字符串, 整数]
    # 对于 enum 和 flags
    初始值：
      描述：对于 enum 或 flags 的第一个值的字面量初始化
    类型：[字符串, 整数]
    条目：
      描述：对于 enum 或 flags 的值数组
    类型：数组
      元素：
        任选其一：
          - 类型：字符串
          - 类型：对象
            必需字段：[名称]
            不允许额外属性：否
            属性：
              名称：
                类型：字符串
              值：
                类型：整数
              文档：
                类型：字符串
    渲染最大值：
      描述：为该枚举渲染最大成员
    类型：布尔
    # 开始 genetlink-c
    枚举名：
      描述：枚举的名称，如果为空则不使用名称
    类型：[字符串, "null"]
    名称前缀：
      描述：对于枚举，值的前缀，可选
    类型：字符串
    # 结束 genetlink-c
    # 开始 genetlink-legacy
    成员列表：
      描述：结构体成员列表。仅允许标量和字符串成员
    类型：数组
      元素：
        类型：对象
        必需字段：[名称, 类型]
        不允许额外属性：否
        属性：
          名称：
            类型：字符串
          类型：
            描述：|
              网络层属性类型。类型为 'binary' 或 'pad' 的成员还必须设置 '长度' 属性
            枚举：[u8, u16, u32, u64, s8, s16, s32, s64, 字符串, binary, pad]
          长度：
            引用：'#/$defs/len-or-define'
          字节序：
            枚举：[小端, 大端]
          文档：
            描述：结构体成员的文档说明
下面是提供的 YAML 片段的中文翻译：

类型: 字符串  
枚举:  
  描述: 用于属性的枚举类型的名称  
类型: 字符串  
枚举作为标志:  
  描述: |
    将枚举视为标志。在大多数情况下，枚举要么用作标志，要么用作值。
    有时，两种形式都是必要的，在这种情况下，头部包含枚举形式，
    而特定属性可能请求将值转换为位字段。
类型: 布尔  
显示提示: &display-hint  
  描述: |
    可选的格式指示器，仅用于选择正确的格式化机制以显示此类型的值。
枚举: [十六进制, MAC, FDDI, IPv4, IPv6, UUID]  
结构:  
  描述: 嵌套结构类型的名称  
类型: 字符串  
如果:  
  属性:  
    类型:  
      常量: 补充  
那么:  
  必需: [长度]  
如果:  
  属性:  
    类型:  
      常量: 二进制  
那么:  
  以下之一:  
    - 必需: [长度]  
    - 必需: [结构]  
# 结束 genetlink-legacy  

属性集:  
  描述: 定义此族中的属性空间  
类型: 数组  
项:  
  描述: 单个属性空间的定义  
类型: 对象  
  必需: [名称, 属性]  
  其他属性: False  
  属性:  
    名称:  
      描述: |
        在其他定义中引用此空间时使用的名称，在规范之外不使用  
类型: 字符串  
    名称前缀:  
      描述: |
        属性的 C 枚举名称的前缀。默认为族[名称]-集[名称]-a-  
      类型: 字符串  
    枚举名称:  
      描述: |
        属性的枚举类型的名称，如果为空则不使用名称  
类型: [字符串, "null"]  
    文档:  
      描述: 空间的文档
下面是提供的英文描述翻译成中文的结果：

类型：字符串
        子集：
          描述: |
            另一个空间的名称，当前空间是其逻辑部分。子空间可用于定义
            在嵌套中使用的有限属性组。
类型：字符串
        # 开始 genetlink-c
        属性计数名称:
          描述: 用于存储属性数量（最后一个属性+1）的常量的明确名称
类型：字符串
        最后属性名称:
          描述: 属性枚举中的最后成员的明确名称
类型：字符串
        # 结束 genetlink-c
        属性列表:
          描述: 空间中的属性列表
类型：数组
          元素:
            类型：对象
            必需: [ 名称 ]
            不允许额外属性: 假
            属性:
              名称:
                类型：字符串
              类型: &属性类型
                描述: Netlink 属性类型
                枚举: [ 未使用, 填充, 标志, 二进制, 32位位字段,
                        无符号8位, 无符号16位, 无符号32位, 无符号64位, 有符号8位, 有符号16位, 有符号32位, 有符号64位,
                        字符串, 嵌套, 索引数组, 嵌套类型值,
                        子消息 ]
              文档:
                描述: 属性的文档说明
类型：字符串
              值:
                描述: 在用户API中代表该属性的枚举项的值
$ref: '#/$defs/uint'
              类型值:
                描述: 从嵌套类型值属性的类型中提取的值的名称
类型：数组
                元素:
                  类型：字符串
              字节顺序:
                枚举: [ 小端, 大端 ]
              多属性:
                类型：布尔值
              嵌套属性:
                描述: 在属性内部使用的空间（子空间）的名称
类型：字符串
              枚举:
                描述: 用于属性的枚举类型的名称
类型：字符串
              枚举作为标志:
                描述: |
                  将枚举视为标志。在大多数情况下，枚举要么作为标志使用，要么作为值使用。
有时候，两种形式都是必要的，在这种情况下，`header` 包含枚举（enum）形式，而特定属性可能会请求将值转换为位字段（bitfield）类型。  
类型：布尔  
检查：  
描述：内核输入验证  
类型：对象  
additionalProperties: False  
属性：  
  `flags-mask`:  
    描述：作为掩码基础的标志常量名称（仅适用于无符号标量类型）  
    类型：字符串  
  `min`:  
    描述：整数属性的最小值  
    类型：整数  
  `min-len`:  
    描述：二进制属性的最小长度  
    $ref: '#/$defs/len-or-define'  
  `max-len`:  
    描述：字符串或二进制属性的最大长度  
    $ref: '#/$defs/len-or-define'  
  `exact-len`:  
    描述：字符串或二进制属性的确切长度  
    $ref: '#/$defs/len-or-define'  
  `unterminated-ok`:  
    描述：  
      对于字符串属性，不检查属性是否包含终止的空字符  
    类型：布尔  
子类型：*attr-type  
显示提示：*display-hint  
# 开始 genetlink-c  
`name-prefix`:  
  类型：字符串  
# 结束 genetlink-c  
# 开始 genetlink-legacy  
`struct`:  
    描述：用于属性的结构体类型的名称  
    类型：字符串  
# 结束 genetlink-legacy  
# 开始 netlink-raw  
`sub-message`:  
    描述：  
      用于属性的子消息定义的名称
类型: 字符串
              选择器:
                描述: |
                  用于动态选择子消息格式指定符的属性名称

类型: 字符串
              # Netlink-raw 结束

      # 确保 name-prefix 不出现在子集中（子集继承命名）
      依赖关系:
        name-prefix:
          不:
            必需: [ subset-of ]
        subset-of:
          不:
            必需: [ name-prefix ]

      # type 属性仅在不在子集定义中时才必需
      如果:
        属性:
          subset-of:
            不:
              类型: 字符串
      那么:
        属性:
          属性:
            项:
              必需: [ type ]

  # 开始 netlink-raw
  子消息:
    描述: 子消息属性的定义
    类型: 数组
    项:
      类型: 对象
      其他属性: 假
      必需: [ 名称, 格式 ]
      属性:
        名称:
          描述: 子消息定义的名称
          类型: 字符串
        格式:
          描述: 动态选择的格式指定符
          类型: 数组
          项:
            类型: 对象
            其他属性: 假
            必需: [ 值 ]
            属性:
              值:
                描述: |
                  用于动态选择子消息格式指定符的匹配值
类型: 字符串
              固定头:
                描述: |
                  用作子消息固定头部的结构定义名称
类型: 字符串
              属性集:
                描述: |
                  从中解析子消息中的属性的属性空间名称
类型: 字符串
  # 结束 netlink-raw

  操作:
    描述: 协议支持的操作
类型: 对象
    必需: [ 列表 ]
    其他属性: 假
    属性:
      枚举模型:
        描述: |
          分配操作值的模型
"unified" 是推荐的模型，其中所有消息类型属于单一枚举
"directional" 将发送到内核和从内核接收的消息分别枚举
枚举: [ unified, directional ] # 裁剪
      前缀名:
        描述: |
          命令 C 枚举名称的前缀。名称通过将前缀与命令的大写名称拼接形成，其中破折号被下划线替换
类型: 字符串
      枚举名称:
        描述: |
          包含命令的枚举类型的名称，如果为空则不使用任何名称
下面是提供的英文描述翻译成中文的结果：

类型: [字符串, "null"]
异步前缀:
  描述: 与名称前缀相同，但用于为通知和事件生成单独的枚举
类型: 字符串
异步枚举:
  描述: |
    包含命令的枚举类型的名称，如果为空，则不使用名称
类型: [字符串, "null"]
# 开始genetlink-遗留部分
固定头部: &fixed-header
  描述: |
    定义可选的固定长度协议头部结构的名称。此头部位于消息中的netlink和genetlink头部之后、任何属性之前。
类型: 字符串
# 结束genetlink-遗留部分
列表:
  描述: 命令列表
  类型: 数组
  元素:
    类型: 对象
    额外属性: false
    必需: [名称, 文档]
    属性:
      名称:
        描述: 操作的名称，同时也定义了其在uAPI中的C语言枚举值
类型: 字符串
      文档:
        描述: 命令的文档说明
类型: 字符串
      值:
        描述: 在uAPI中枚举的值
$ref: '#/$defs/uint'
      属性集:
        描述: |
          从其中定义直接在该命令请求和响应中的属性的属性空间
类型: 字符串
      标志: &cmd_flags
        描述: 命令标志
类型: 数组
        元素:
          枚举: [管理员权限]
      不验证:
        描述: 内核属性验证标志
类型: 数组
        元素:
          枚举: [严格, 显示]
      # 开始genetlink-遗留部分
      固定头部: *fixed-header
      # 结束genetlink-遗留部分
      执行: &subop-type
        描述: 主命令处理器
下面是提供的 YAML 配置文件的中文翻译：

```yaml
类型: 对象
额外属性: false
属性:
  请求: &子操作属性列表
    描述: 给定命令请求消息的定义
  类型: 对象
    额外属性: false
    属性:
      属性:
        描述: |
          来自属性集的属性名称（不是完整的属性定义，仅是名称）
        类型: 数组
        元素:
          类型: 字符串
      # 开始 genetlink-legacy
      值:
        描述: |
          如果请求和响应的值不同，则此消息的ID，
          即请求和响应具有不同的消息枚举
        $引用: '#/$defs/uint'
      # 结束 genetlink-legacy
  响应: *子操作属性列表
  预处理:
    描述: 在主要回调函数（pre_doit 或 start）之前运行的函数的挂钩
    类型: 字符串
  后处理:
    描述: 在主要回调函数（post_doit 或 done）之后运行的函数的挂钩
    类型: 字符串
转储: *子操作类型
通知:
  描述: 与该通知共享响应类型的命令名称
  类型: 字符串
事件:
  类型: 对象
  额外属性: false
  属性:
    属性:
      描述: 通知的明确属性列表
      类型: 数组
      元素:
        类型: 字符串
多播组:
  描述: 生成给定通知的多播组名称
  类型: 字符串
多播组列表:
  描述: 多播组列表
  类型: 对象
  必需: [列表]
  额外属性: false
  属性:
    列表:
      描述: 组列表
```

请注意，为了保持语义清晰和易于理解，我对一些术语进行了适当的调整。例如，“type”被翻译为“类型”，“additionalProperties”被翻译为“额外属性”，等等。同时保留了原配置文件中的结构和格式。
类型: 数组
    项目:
      类型: 对象
      必需: [name]
      额外属性: False
      属性:
        name:
          描述: |
            为组定义的名称，用于形成宏定义及其值
类型: 字符串
            # 开始生成 C 代码
            c-define-name:
              描述: 在 C 用户接口 API 中覆盖宏定义的名称
类型: 字符串
            # 结束生成 C 代码
        flags: *cmd_flags
            # 开始 netlink 原生
        value:
          描述: 在用户接口中的 netlink 多播组的值
类型: 整数
            # 结束 netlink 原生

这里的描述主要针对一种配置或数据结构定义，该结构用于定义一个包含多个项目的数组，其中每个项目都是一个对象。这个对象需要有 `name` 属性，并且不允许有额外未定义的属性。`name` 属性是一个字符串，用于标识组名。此外，还提供了选项来覆盖 C 语言用户接口中的宏定义名称，并定义 netlink 多播组的整数值。
