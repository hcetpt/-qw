# SPDX 许可证标识符: ((GPL-2.0 WITH Linux-syscall-note) 或 BSD-3-Clause)
%YAML 1.2
---
$id: http://kernel.org/schemas/netlink/netlink-raw.yaml#
$schema: https://json-schema.org/draft-07/schema

# 公共定义
$defs:
  uint:
    类型: 整数
    最小值: 0
  len-or-define:
    类型: [ 字符串, 整数 ]
    正则表达式: ^[0-9A-Za-z_-]+( - 1)?$ 
    最小值: 0

# 规范的模式
标题: 协议
描述: 原始 netlink 协议的规范
类型: 对象
必需: [ 名称, 文档, 属性集, 操作 ]
额外属性: False
属性:
  名称:
    描述: netlink 家族的名称
    类型: 字符串
  文档:
    类型: 字符串
  协议:
    描述: 模式兼容性级别
    枚举: [ netlink-raw ] # 精简
  # 开始 netlink-raw
  protonum:
    描述: 用于 netlink-raw 的协议编号
    类型: 整数
  # 结束 netlink-raw
  uapi-header:
    描述: uAPI 头文件的路径，默认为 linux/${家族名称}.h
    类型: 字符串
  # 开始 genetlink-c
  c-family-name:
    描述: 家族名称的宏定义名称
    类型: 字符串
  c-version-name:
    描述: 家族版本的宏定义名称
    类型: 字符串
  max-by-define:
    描述: 使属性和命令的数量由宏定义指定，而不是枚举值
    类型: 布尔值
  cmd-max-name:
    描述: 列表中最后一个操作的宏定义名称
    类型: 字符串
  cmd-cnt-name:
    描述: 明确指定保存操作计数（最后一个操作 + 1）的常量名称
    类型: 字符串
  # 结束 genetlink-c
  # 开始 genetlink-legacy
  kernel-policy:
    描述: |
      定义内核中的输入策略是全局的、按操作的，还是按操作类型分割的
      默认为分割
    枚举: [ 分割, 按操作, 全局 ]
  # 结束 genetlink-legacy

  定义:
    描述: 类型和常量定义（枚举，标志，宏）的列表
以下是提供的 YAML 片段的中文翻译：

类型：数组
元素：
  类型：对象
  必需字段：[类型, 名称]
  不允许额外属性：否
  属性：
    名称：
      类型：字符串
    头文件：
      描述：对于与 C 兼容的语言，已定义该值的头文件
    类型：
      枚举：[const, enum, flags, struct] # Trim
    文档：
      类型：字符串
    # 对于 const
    值：
      描述：对于 const - 其值
    类型：[字符串, 整数]
    # 对于 enum 和 flags
    初始值：
      描述：对于 enum 或 flags 的第一个值的字面量初始化
    类型：[字符串, 整数]
    条目：
      描述：对于 enum 或 flags 的值数组
    类型：数组
      元素：
        任选其一：
          - 类型：字符串
          - 类型：对象
            必需字段：[名称]
            不允许额外属性：否
            属性：
              名称：
                类型：字符串
              值：
                类型：整数
              文档：
                类型：字符串
    渲染最大值：
      描述：为该枚举渲染最大成员
    类型：布尔
    # 开始 genetlink-c
    枚举名：
      描述：枚举的名称，如果为空则不使用名称
    类型：[字符串, "null"]
    名称前缀：
      描述：对于枚举，值的前缀，可选
    类型：字符串
    # 结束 genetlink-c
    # 开始 genetlink-legacy
    成员列表：
      描述：结构体成员列表。仅允许标量和字符串成员
    类型：数组
      元素：
        类型：对象
        必需字段：[名称, 类型]
        不允许额外属性：否
        属性：
          名称：
            类型：字符串
          类型：
            描述：|
              网络层属性类型。类型为 'binary' 或 'pad' 的成员还必须设置 '长度' 属性
            枚举：[u8, u16, u32, u64, s8, s16, s32, s64, 字符串, binary, pad]
          长度：
            引用：'#/$defs/len-or-define'
          字节序：
            枚举：[小端, 大端]
          文档：
            描述：结构体成员的文档说明
类型：字符串  
枚举：  
描述：用于属性的枚举类型的名称  

类型：字符串  
枚举作为标志：  
描述：将枚举视为标志。在大多数情况下，枚举要么用作标志，要么用作值；然而有时，两种形式都是必要的，在这种情况下，头部包含枚举形式，而特定属性可能要求将值转换为位字段。  
类型：布尔  

显示提示：（&display-hint）  
描述：可选的格式指示器，仅用于在显示此类型的值时选择正确的格式化机制。  
枚举：[十六进制, MAC地址, FDDI, IPv4, IPv6, UUID]  

结构体：  
描述：嵌套结构体类型的名称  
类型：字符串  

如果：  
属性：  
类型：  
常量：填充（pad）  
那么：  
必需：[长度（len）]  

如果：  
属性：  
类型：  
常量：二进制（binary）  
那么：  
其中之一：  
- 必需：[长度（len）]  
- 必需：[结构体（struct）]  

# 结束genetlink-legacy  

属性集：  
描述：为此族定义的属性空间的定义  
类型：数组  
项目：  
描述：单个属性空间的定义  
类型：对象  
必需：[名称（name），属性（attributes）]  
不允许额外属性：假  
属性：  
名称（name）：  
描述：当在此规格之外的其他定义中引用此空间时使用的名称  
类型：字符串  

名称前缀（name-prefix）：  
描述：属性的C枚举名称的前缀。默认值是family[name]-set[name]-a-  
类型：字符串  

枚举名称（enum-name）：  
描述：属性的枚举类型的名称，如果为空，则不会使用任何名称  
类型：[字符串， "null"]  

文档（doc）：  
描述：空间的文档说明。
类型：字符串  
子集：  
描述：  
所属的另一个空间的名称，此空间在逻辑上是其一部分。子空间可用于定义一组有限的属性，这些属性在嵌套中使用。

类型：字符串  
# 开始 genetlink-c  
attr-cnt-name:  
描述：用于存储属性计数（最后一个属性+1）的常量的显式名称  
类型：字符串  
attr-max-name:  
描述：属性枚举中最后一个成员的显式名称  
类型：字符串  
# 结束 genetlink-c  
属性：  
描述：空间中的属性列表  
类型：数组  
项：  
类型：对象  
必需：[name]  
additionalProperties：False  
属性：  
名字：  
类型：字符串  
类型：  
&attr-type  
描述：Netlink属性类型  
枚举：[未使用，填充，标志，二进制，32位位字段，  
u8，u16，u32，u64，s8，s16，s32，s64，  
字符串，嵌套，索引数组，嵌套类型值，  
子消息]  
文档：  
描述：属性的文档  
类型：字符串  
值：  
描述：代表此属性在uAPI中的枚举项的值  
$引用：'#/美元定义/无符号整数'  
类型值：  
描述：从nest-type-value属性的类型中提取的值的名称  
类型：数组  
项：  
类型：字符串  
字节序：  
枚举：[小端字节序，大端字节序]  
多属性：  
类型：布尔值  
嵌套属性：  
描述：在属性内部使用的空间（子空间）的名称  
类型：字符串  
枚举：  
描述：用于属性的枚举类型的名称  
类型：字符串  
枚举作为标志：  
描述：  
将枚举视为标志。在大多数情况下，枚举要么用作标志，要么用作值。
有时候，两种形式都是必要的，在这种情况下，`header` 包含枚举（enum）形式，而特定属性可能会请求将值转换为位字段（bitfield）类型。  
类型：布尔  
检查：  
描述：内核输入验证  
类型：对象  
additionalProperties: False  
属性：  
  `flags-mask`:  
    描述：作为掩码基础的标志常量名称（仅适用于无符号标量类型）  
    类型：字符串  
  `min`:  
    描述：整数属性的最小值  
    类型：整数  
  `min-len`:  
    描述：二进制属性的最小长度  
    $ref: '#/$defs/len-or-define'  
  `max-len`:  
    描述：字符串或二进制属性的最大长度  
    $ref: '#/$defs/len-or-define'  
  `exact-len`:  
    描述：字符串或二进制属性的确切长度  
    $ref: '#/$defs/len-or-define'  
  `unterminated-ok`:  
    描述：  
      对于字符串属性，不检查属性是否包含终止的空字符  
    类型：布尔  
子类型：*attr-type  
显示提示：*display-hint  
# 开始 genetlink-c  
`name-prefix`:  
  类型：字符串  
# 结束 genetlink-c  
# 开始 genetlink-legacy  
`struct`:  
    描述：用于属性的结构体类型的名称  
    类型：字符串  
# 结束 genetlink-legacy  
# 开始 netlink-raw  
`sub-message`:  
    描述：  
      用于属性的子消息定义的名称
类型: 字符串
              选择器:
                描述: |
                  用于动态选择子消息格式指定符的属性名称

类型: 字符串
              # Netlink-raw 结束

      # 确保 name-prefix 不出现在子集中（子集继承命名）
      依赖关系:
        name-prefix:
          不:
            必需: [ subset-of ]
        subset-of:
          不:
            必需: [ name-prefix ]

      # type 属性仅在不在子集定义中时才必需
      如果:
        属性:
          subset-of:
            不:
              类型: 字符串
      那么:
        属性:
          属性:
            项:
              必需: [ type ]

  # 开始 netlink-raw
  子消息:
    描述: 子消息属性的定义
    类型: 数组
    项:
      类型: 对象
      其他属性: 假
      必需: [ 名称, 格式 ]
      属性:
        名称:
          描述: 子消息定义的名称
          类型: 字符串
        格式:
          描述: 动态选择的格式指定符
          类型: 数组
          项:
            类型: 对象
            其他属性: 假
            必需: [ 值 ]
            属性:
              值:
                描述: |
                  用于动态选择子消息格式指定符的匹配值
类型: 字符串
              固定头:
                描述: |
                  用作子消息固定头部的结构定义名称
类型: 字符串
              属性集:
                描述: |
                  从中解析子消息中的属性的属性空间名称
类型: 字符串
  # 结束 netlink-raw

  操作:
    描述: 协议支持的操作
类型: 对象
    必需: [ 列表 ]
    其他属性: 假
    属性:
      枚举模型:
        描述: |
          分配操作值的模型
"unified" 是推荐的模型，其中所有消息类型属于单一枚举
"directional" 将发送到内核和从内核接收的消息分别枚举
枚举: [ unified, directional ] # 裁剪
      前缀名:
        描述: |
          命令 C 枚举名称的前缀。名称通过将前缀与命令的大写名称拼接形成，其中破折号被下划线替换
类型: 字符串
      枚举名称:
        描述: |
          包含命令的枚举类型的名称，如果为空则不使用任何名称
类型: [字符串, "null"]
异步前缀:
  描述: 与名称前缀相同，但用于将通知和事件渲染到独立的枚举中
类型: 字符串
异步枚举:
  描述: |
    包含命令的枚举类型的名称，如果为空，则不会使用任何名称
类型: [字符串, "null"]
# 开始genetlink-遗留
固定头: &fixed-header
  描述: |
    定义可选固定长度协议头结构的名称。此头部位于消息中的netlink和genetlink头部之后，并在任何属性之前
类型: 字符串
# 结束genetlink-遗留
列表:
  描述: 命令列表
  类型: 数组
  项目:
    类型: 对象
    额外属性: False
    必需: [名称, 文档]
    属性:
      名称:
        描述: 操作的名称，同时也定义了其在uAPI中的C枚举值
类型: 字符串
      文档:
        描述: 命令的文档
类型: 字符串
      值:
        描述: uAPI中枚举的值
$引用: '#/$defs/uint'
      属性集:
        描述: |
          请求和响应中直接定义属性的属性空间
类型: 字符串
      标志: &cmd_flags
        描述: 命令标志
类型: 数组
        项目:
          枚举: [管理员权限]
      不验证:
        描述: 内核属性验证标志
类型: 数组
        项目:
          枚举: [严格, 导出]
      # 开始genetlink-遗留
      固定头: *fixed-header
      # 结束genetlink-遗留
      执行: &subop-type
        描述: 主命令处理器

这段描述详细地阐述了一个配置或数据模型的结构，涉及到了命令、枚举类型、属性集以及各种标志和处理程序的定义。特别注意的是，这里的“异步前缀”和“异步枚举”可能是指特定于某个系统（如网络协议）中处理异步操作的方式，而“固定头”则可能涉及到协议数据单元（PDU）的结构。此外，“属性集”、“标志”和“不验证”字段提供了对请求和响应中如何处理属性的更细粒度控制。最后，“执行”字段指向一个主命令处理器，这可能是实现具体功能的关键部分。
翻译为中文：

类型：对象
附加属性：否
属性：
  请求：&subop-attr-list
    描述：给定命令的请求消息定义
类型：对象
    附加属性：否
    属性：
      属性：
        描述：|
          来自属性集的属性名称（不是完整的属性定义，仅是名称）
类型：数组
        项目：
          类型：字符串
      # 开始genetlink-legacy
      值：
        描述：|
          如果请求和响应的值不同，则此消息的ID，
          即请求和响应具有不同的消息枚举
引用：'#/美元定义/uint'
      # 结束genetlink-legacy
    回复：*subop-attr-list
    预处理：
      描述：在主回调（pre_doit或start）之前运行的函数挂钩
类型：字符串
    后处理：
      描述：在主回调（post_doit或done）之后运行的函数挂钩
类型：字符串
转储：*subop-type
通知：
  描述：与该通知共享回复类型的命令名称
类型：字符串
事件：
  类型：对象
  附加属性：否
  属性：
    属性：
      描述：通知的属性明确列表
类型：数组
      项目：
        类型：字符串
多播组：
  描述：生成给定通知的多播组名称
类型：字符串
多播组列表：
  描述：多播组列表
类型：对象
必需：[list]
附加属性：否
属性：
  list：
    描述：组列表

请注意，上述翻译保留了原始JSON结构中的引用（如 &subop-attr-list 和 *subop-type），以及注释性描述（如 # 开始genetlink-legacy 和 # 结束genetlink-legacy）。这些标记通常用于指代其他定义或指示代码块，在翻译中直接保持其原样。
类型：数组
       项目：
         类型：对象
         必需字段：[name]
         不允许额外属性：否
         属性：
           name:
             描述： |
               用于定义和定义值的组名称。
类型：字符串
           # 开始生成C语言网络链接
           c-define-name:
             描述：在C语言用户空间API中定义名称的覆盖。
类型：字符串
           # 结束生成C语言网络链接
           flags: *cmd_flags
           # 开始网络链接原始数据
           value:
             描述：用户空间API中网络链接多播组的值。
类型：整数
           # 结束网络链接原始数据

请注意，上述翻译尽量保持了原意，并将注释部分也进行了翻译。在实际应用中，`# Start ...` 和 `# End ...` 可能是某种代码生成器或模板引擎的标记，用于指示特定代码段的开始和结束。在翻译时，这些标记被直接保留，因为它们的具体用途和处理方式可能依赖于特定的上下文或工具。
