# SPDX 许可证标识符: ((GPL-2.0 WITH Linux-syscall-note) 或 BSD-3-Clause)
%YAML 1.2
---
$id: http://kernel.org/schemas/netlink/genetlink-c.yaml#
$schema: https://json-schema.org/draft-07/schema

# 公共定义
$defs:
  uint:
    类型: 整数
    最小值: 0
  len-or-define:
    类型: [ 字符串, 整数 ]
    正则表达式: ^[0-9A-Za-z_-]+( - 1)?$ 
    最小值: 0
  len-or-limit:
    # 实际整数或基于固定宽度类型限制的, 如 u8-min, u16-max 等
    类型: [ 字符串, 整数 ]
    正则表达式: ^[su](8|16|32|64)-(min|max)$
    最小值: 0

# 规范模式
标题: 协议
描述: genetlink 协议的规范
类型: 对象
必需: [ 名称, 文档, 属性集, 操作 ]
附加属性: False
属性:
  名称:
    描述: genetlink 家族的名称
    类型: 字符串
  文档:
    类型: 字符串
  协议:
    描述: 架构兼容性级别。默认是 "genetlink"
    枚举: [ genetlink, genetlink-c ]
  uapi-header:
    描述: uAPI 头文件路径，缺省是 linux/${家族名}.h
    类型: 字符串
  # 开始 genetlink-c
  c-family-name:
    描述: 家族名称的宏定义名称
    类型: 字符串
  c-version-name:
    描述: 家族版本的宏定义名称
    类型: 字符串
  max-by-define:
    描述: 通过宏定义指定属性和命令的数量，而非枚举值
    类型: 布尔值
  cmd-max-name:
    描述: 列表中最后一个操作的宏定义名称
    类型: 字符串
  cmd-cnt-name:
    描述: 明确命名的常量持有操作数量（最后一个操作 + 1）
    类型: 字符串
  # 结束 genetlink-c

  definitions:
    描述: 类型和常量定义列表（枚举, 标志, 宏定义）
    类型: 数组
    项:
      类型: 对象
      必需: [ 类型, 名称 ]
      附加属性: False
      属性:
        名称:
          类型: 字符串
        header:
          描述: 对于 C 兼容语言，已经定义了该值的头文件
```yaml
# 翻译后的中文描述

类型: 字符串
类型:
  枚举: [ 常量, 枚举, 标志 ]
文档:
  类型: 字符串
# 对于常量
值:
  描述: 对于常量 - 具体的值
类型: [ 字符串, 整数 ]
# 对于枚举和标志
值起始:
  描述: 对于枚举或标志，第一个值的字面初始化器
类型: [ 字符串, 整数 ]
条目:
  描述: 对于枚举或标志，值的数组
类型: 数组
  项:
    oneOf:
      - 类型: 字符串
      - 类型: 对象
        必需: [ 名称 ]
        额外属性: False
        属性:
          名称:
            类型: 字符串
          值:
            类型: 整数
          文档:
            类型: 字符串
渲染最大值:
  描述: 渲染此枚举的最大成员
类型: 布尔值
# 开始 genetlink-c
枚举名称:
  描述: 枚举的名称，如果为空则不使用名称
类型: [ 字符串, "空值" ]
名称前缀:
  描述: 对于枚举，值的前缀，可选
类型: 字符串
# 结束 genetlink-c

属性集合:
  描述: 此家族的属性空间定义
类型: 数组
  项:
    描述: 单个属性空间的定义
类型: 对象
    必需: [ 名称, 属性 ]
    额外属性: False
    属性:
      名称:
        描述: |
          在其他定义中引用此空间时使用的名称，在规范之外不使用
        类型: 字符串
      名称前缀:
        描述: |
          属性的C枚举名称的前缀。默认为family[名称]-set[名称]-a-
        类型: 字符串
      枚举名称:
        描述: |
          属性类型的枚举名称，如果为空则不使用名称
```

这段翻译将原始的英文描述转换成了中文，保持了结构和语义的一致性，以便中文读者理解和使用。
下面是给定 JSON 架构描述的中文翻译：

类型: [字符串, "null"]
    文档:
      描述: 空间的文档说明
类型: 字符串
    子集-属于:
      描述: |
        另一个空间的名称，此空间在逻辑上是其一部分。子空间可用于定义一组有限的属性，这些属性在一个嵌套中使用。
类型: 字符串
    # 开始 genetlink-c
    属性计数名称:
      描述: 用于持有属性计数（最后一个属性+1）的常量的明确名称
类型: 字符串
    最后属性名称:
      描述: 最后一个属性枚举成员的明确名称
类型: 字符串
    # 结束 genetlink-c
    属性列表:
      描述: 空间中的属性列表
类型: 数组
      元素:
        类型: 对象
        必需: [名称]
        不允许额外属性: 假
        属性:
          名称:
            类型: 字符串
          类型:
            类型引用: *attr-type
            枚举: [未使用, 填充, 标记, 二进制,
                    无符号整数, 符号整数, u8, u16, u32, u64, s32, s64,
                    字符串, 嵌套, 索引数组, 嵌套类型值]
          文档:
            描述: 属性的文档说明
类型: 字符串
          值:
            描述: 表示此属性在用户API中的枚举项的值
$ref: '#/$defs/无符号整数'
          类型值:
            描述: 从嵌套类型值属性的类型中提取的值的名称
类型: 数组
            元素:
              类型: 字符串
          字节序:
            枚举: [小端, 大端]
          多属性:
            类型: 布尔值
          嵌套属性:
            描述: 在属性内部使用的空间（子空间）的名称
类型: 字符串
          枚举:
            描述: 用于属性的枚举类型的名称
类型: 字符串  
枚举作为标志:  
    描述: |
      将枚举视为标志。在大多数情况下，枚举要么用作标志，要么用作值。
      但有时两者都是必要的，此时头部包含枚举形式，而特定属性可能会要求将值转换为位字段。  
类型: 布尔  
验证检查:  
    描述: 内核输入验证  
类型: 对象  
    另加属性: 否  
    属性:  
        标志掩码:  
            描述: 用于生成掩码的基础标志常量名称（仅限无符号标量类型）  
类型: 字符串  
        最小值:  
            描述: 整数属性的最小值  
参照: '#/$defs/len-or-limit'  
        最大值:  
            描述: 整数属性的最大值  
参照: '#/$defs/len-or-limit'  
        最小长度:  
            描述: 二进制属性的最小长度  
参照: '#/$defs/len-or-define'  
        最大长度:  
            描述: 字符串或二进制属性的最大长度  
参照: '#/$defs/len-or-define'  
        确定长度:  
            描述: 字符串或二进制属性的确切长度  
参照: '#/$defs/len-or-define'  
        无需终止符:  
            描述: |
              对于字符串属性，不检查属性是否包含终止的空字符
类型：布尔值  
子类型：*属性类型  
显示提示：&显示提示  
描述：  
可选格式指示器，仅用于在显示此类型的值时选择正确的格式化机制  

枚举：[十六进制, MAC地址, FDDI, IPv4, IPv6, UUID]  

# 开始genetlink-c  
名称前缀：  
类型：字符串  
# 结束genetlink-c  

# 确保name-prefix不会出现在子集中（子集继承命名）  
依赖关系：  
name-prefix：  
不允许：  
必需：[subset-of]  
subset-of：  
不允许：  
必需：[name-prefix]  

# 类型属性仅在不在子集定义中时才需要  
如果：  
属性：  
subset-of：  
不允许：  
类型：字符串  
然后：  
属性：  
attributes：  
项目：  
必需：[类型]  

操作：  
描述：协议支持的操作  

类型：对象  
必需：[列表]  
不接受额外属性：False  
属性：  
enum-model：  
描述：  
将值分配给操作的模型  
“统一”是推荐的模型，其中所有消息类型都属于单一枚举  
“方向性”将发送到内核和从内核接收的消息分别枚举  
枚举：[统一]  
name-prefix：  
描述：  
命令C枚举名称的前缀。名称通过将前缀与命令的大写名称连接形成，将破折号替换为下划线  
类型：字符串  
enum-name：  
描述：  
带有命令的枚举类型的名称，如果为空则不使用名称  
类型：[字符串, "null"]  
async-prefix：  
描述：与name-prefix相同，但用于将通知和事件呈现为单独的枚举  
类型：字符串  
async-enum：  
描述：  
带有命令的枚举类型的名称，如果为空则不使用名称  
类型：[字符串, "null"]  
list：  
描述：命令列表  
类型：数组  
项目：  
类型：对象  
不接受额外属性：False  
必需：[name, doc]  
属性：  
name：  
描述：操作的名称，同时也定义了其在uAPI中的C枚举值
类型：字符串  
文档：  
描述：命令的文档说明  

类型：字符串  
值：  
描述：在uAPI中的枚举值  

引用：'#/definitions/uint'  

属性集：  
描述：从属性空间中定义直接在请求和对此命令的回复中的属性  

类型：字符串  

标志：（指向cmd_flags）  
描述：命令标志  

类型：数组  
项：  
枚举：[admin-perm]  

不验证：  
描述：内核属性验证标志  

类型：数组  
项：  
枚举：[严格，转储，严格转储]  

配置条件：  
描述：操作存在的内核配置选项名称，不带'CONFIG_'前缀  

类型：字符串  

执行：（指向subop-type）  
描述：主命令处理器  

类型：对象  
附加属性：False  
属性：  
请求：（指向subop-attr-list）  
描述：给定命令的请求消息定义  

类型：对象  
附加属性：False  
属性：  
属性：  
描述：属性集中的属性名（不是完整的属性定义，只是名字）  

类型：数组  
项：  
类型：字符串  

回复：*subop-attr-list  

预处理：  
描述：在主要回调函数（pre_doit或start）运行之前运行的函数的钩子  

请注意，上述翻译保持了原文的技术术语和结构，以确保技术文档的准确性。
下面是提供的 YAML 片段翻译为中文：

```yaml
类型: 字符串
    post:
      描述: 用于指定在主回调（post_doit 或 done）之后运行的函数的钩子
类型: 字符串
    dump: *subop-type
    notify:
      描述: 与该通知共享回复类型的命令名称
类型: 字符串
    event:
      类型: 对象
      其他属性: 假
      属性:
        attributes:
          描述: 明确列出此通知中的属性
类型: 数组
          项:
            类型: 字符串
    mcgrp:
      描述: 生成给定通知的多播组名称
类型: 字符串
  多播组:
    描述: 多播组列表
类型: 对象
    必需: [list]
    其他属性: 假
    属性:
      list:
        描述: 组列表
类型: 数组
        项:
          类型: 对象
          必需: [name]
          其他属性: 假
          属性:
            name:
              描述: |
                用于组的名称，用于形成定义及其值
类型: 字符串
            # 开始 genetlink-c
            c-define-name:
              描述: 用于覆盖 C 用户 API 中定义名称
类型: 字符串
            # 结束 genetlink-c
            标志: *cmd_flags

  内核家族:
    描述: 用于内核 C 代码生成的附加全局属性
类型: 对象
    其他属性: 假
    属性:
      headers:
        描述: |
          需要在生成代码的源文件中包含的额外头文件列表
```

请注意，这里的“其他属性”、“必需”等词汇是根据 YAML 的规范翻译的，用于描述字段是否可以有额外未定义的属性以及哪些字段是必须存在的。同时，“类型”、“描述”等词汇对应于 YAML 结构中的字段说明。
```yaml
# 类型：数组
items:
  # 每个元素的类型：字符串
type: array

# sock-priv:
# 描述：|
#   在内核中用于存储套接字状态的类型的字面名称。该类型/结构是内核内部的，
#   并未在规范中定义。
type: string
```

这里的 YAML 结构描述了一个配置项，其中包含一个数组类型（`type: array`），数组中的每个元素都是字符串类型（`type: string`）。另外还描述了一个名为 `sock-priv` 的字符串类型配置项，并给出了相应的描述信息。
