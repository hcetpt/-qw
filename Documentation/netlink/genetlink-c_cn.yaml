```yaml
# SPDX 许可证标识符: ((GPL-2.0 WITH Linux-syscall-note) 或 BSD-3-Clause)
%YAML 1.2
---
$id: http://kernel.org/schemas/netlink/genetlink-c.yaml#
$schema: https://json-schema.org/draft-07/schema

# 公共定义
$defs:
  uint:
    type: integer
    minimum: 0
  len-or-define:
    type: [ string, integer ]
    pattern: ^[0-9A-Za-z_-]+( - 1)?$
    minimum: 0
  len-or-limit:
    # 字面量整数或基于固定宽度类型限制（如 u8-min, u16-max 等）
    type: [ string, integer ]
    pattern: ^[su](8|16|32|64)-(min|max)$
    minimum: 0

# 规范模式
title: 协议
description: genetlink 协议的规范
type: object
required: [ name, doc, attribute-sets, operations ]
additionalProperties: False
properties:
  name:
    description: genetlink 家族的名称
    type: string
  doc:
    type: string
  protocol:
    description: 模式兼容性级别。默认值为 "genetlink"
    enum: [ genetlink, genetlink-c ]
  uapi-header:
    description: uAPI 头文件路径，默认为 linux/${family-name}.h
    type: string
  # 开始 genetlink-c
  c-family-name:
    description: 家族名称的宏定义名称
    type: string
  c-version-name:
    description: 家族版本的宏定义名称
    type: string
  max-by-define:
    description: 通过宏定义而不是枚举值来指定属性和命令的数量
    type: boolean
  cmd-max-name:
    description: 列表中最后一个操作的宏定义名称
    type: string
  cmd-cnt-name:
    description: 显式命名持有操作计数（最后一个操作 + 1）的常量
    type: string
  # 结束 genetlink-c

  definitions:
    description: 类型和常量定义（枚举、标志、宏定义）列表
    type: array
    items:
      type: object
      required: [ type, name ]
      additionalProperties: False
      properties:
        name:
          type: string
        header:
          description: 对于 C 兼容语言，已定义此值的头文件
```

这段 YAML 文件描述了一个 genetlink 协议的规范，并包含了相关的公共定义和属性描述。
```yaml
type: string
type:
  enum: [const, enum, flags]
doc:
  type: string
# 对于 const
value:
  description: 对于 const - 值的定义
  type: [string, integer]
# 对于 enum 和 flags
value-start:
  description: 对于 enum 或 flags 的第一个值的字面量初始化
  type: [string, integer]
entries:
  description: 对于 enum 或 flags 的值数组
  type: array
  items:
    oneOf:
      - type: string
      - type: object
        required: [name]
        additionalProperties: False
        properties:
          name:
            type: string
          value:
            type: integer
          doc:
            type: string
render-max:
  description: 渲染此枚举的最大成员
  type: boolean
# 开始 genetlink-c
enum-name:
  description: 枚举名称，如果为空则不使用名称
  type: [string, "null"]
name-prefix:
  description: 对于枚举，值的前缀（可选）
  type: string
# 结束 genetlink-c

attribute-sets:
  description: 定义该家族的属性空间
  type: array
  items:
    description: 单个属性空间的定义
    type: object
    required: [name, attributes]
    additionalProperties: False
    properties:
      name:
        description: 在其他定义中引用此空间时使用的名称，在规范之外不使用
        type: string
      name-prefix:
        description: 属性 C 枚举名称的前缀，默认为 family[name]-set[name]-a-
        type: string
      enum-name:
        description: 属性类型的枚举名称，如果为空则不使用名称
        type: string
```
```yaml
type: [ string, "null" ]
doc:
  description: 空间的文档说明
type: string
subset-of:
  description: |
    另一个空间的名称，此空间为其逻辑部分。子空间可用于定义在嵌套中使用的有限属性组。
type: string
# Start genetlink-c
attr-cnt-name:
  description: 用于持有属性计数（最后一个属性 + 1）的常量的显式名称
type: string
attr-max-name:
  description: 属性枚举中最后一个成员的显式名称
type: string
# End genetlink-c
attributes:
  description: 空间中的属性列表
type: array
  items:
    type: object
    required: [ name ]
    additionalProperties: False
    properties:
      name:
        type: string
      type: &attr-type
        enum: [ unused, pad, flag, binary,
                 uint, sint, u8, u16, u32, u64, s32, s64,
                 string, nest, indexed-array, nest-type-value ]
      doc:
        description: 属性的文档说明
type: string
      value:
        description: 表示此属性的 uAPI 枚举项的值
$ref: '#/$defs/uint'
      type-value:
        description: 从 nest-type-value 属性类型中提取的值的名称
type: array
        items:
          type: string
      byte-order:
        enum: [ little-endian, big-endian ]
      multi-attr:
        type: boolean
      nested-attributes:
        description: 在属性内部使用的空间（子空间）的名称
type: string
      enum:
        description: 用于属性的枚举类型的名称
```
```yaml
类型: 字符串
枚举作为标志:
  描述: |
    将枚举视为标志。在大多数情况下，枚举要么用作标志，要么用作值。
    有时，两种形式都是必要的，在这种情况下，头文件包含枚举形式，
    而特定属性可能请求将值转换为位字段。
类型: 布尔
验证:
  描述: 内核输入验证
类型: 对象
  额外属性: False
  属性:
    标志掩码:
      描述: 用于生成掩码的标志常量名称（仅限无符号标量类型）
类型: 字符串
    最小值:
      描述: 整数属性的最小值
$引用: '#/$defs/len-or-limit'
    最大值:
      描述: 整数属性的最大值
$引用: '#/$defs/len-or-limit'
    最小长度:
      描述: 二进制属性的最小长度
$引用: '#/$defs/len-or-define'
    最大长度:
      描述: 字符串或二进制属性的最大长度
$引用: '#/$defs/len-or-define'
    确定长度:
      描述: 字符串或二进制属性的确切长度
$引用: '#/$defs/len-or-define'
    未终止允许:
      描述: |
        对于字符串属性，不检查属性是否包含终止的空字符
```

这是对原文档的中文翻译。如果有任何具体部分需要进一步调整，请告诉我！
```yaml
类型: 布尔
子类型: *属性类型
显示提示: &显示提示
  描述: |
    可选的格式指示器，仅用于在显示此类型的值时选择正确的格式化机制
枚举: [十六进制, MAC地址, FDDI, IPv4, IPv6, UUID]
# 开始genetlink-c
名称前缀:
  类型: 字符串
# 结束genetlink-c

# 确保名称前缀不出现在子集中（子集继承命名）
依赖关系:
  名称前缀:
    不:
      必需: [子集]
  子集:
    不:
      必需: [名称前缀]

# 类型属性仅在不在子集定义中时才必需
如果:
  属性:
    子集:
      不:
        类型: 字符串
然后:
  属性:
    属性:
      项目:
        必需: [类型]

操作:
  描述: 协议支持的操作
类型: 对象
必需: [列表]
其他属性: False
属性:
  枚举模型:
    描述: |
      分配值给操作的模型
"统一"是推荐的模型，其中所有消息类型都属于一个枚举
"方向性"将发送到内核和从内核接收的消息分别枚举
枚举: [统一]
  名称前缀:
    描述: |
      命令C枚举名称的前缀。名称由前缀与命令的大写名称拼接而成，破折号被下划线替换
类型: 字符串
  枚举名称:
    描述: |
      带有命令的枚举类型的名称，如果为空则不使用名称
类型: [字符串, "空"]
  异步前缀:
    描述: 同名称前缀，但用于将通知和事件渲染为单独的枚举
类型: 字符串
  异步枚举:
    描述: |
      带有命令的枚举类型的名称，如果为空则不使用名称
类型: [字符串, "空"]
  列表:
    描述: 命令列表
    类型: 数组
    项目:
      类型: 对象
      其他属性: False
      必需: [名称, 文档]
      属性:
        名称:
          描述: 操作名称，同时定义其uAPI中的C枚举值
```

以上是翻译后的中文版本。如果有任何特定需求或需要进一步调整，请告诉我！
```yaml
type: string
doc:
  description: 命令的文档说明
type: string
value:
  description: 在 uAPI 中枚举值
$ref: '#/$defs/uint'
attribute-set:
  description: |
    定义与此命令相关的请求和回复中直接使用的属性空间
type: string
flags: &cmd_flags
  description: 命令标志
type: array
  items:
    enum: [admin-perm]
dont-validate:
  description: 内核属性验证标志
type: array
  items:
    enum: [strict, dump, dump-strict]
config-cond:
  description: |
    操作存在的内核配置选项名称（不带 'CONFIG_' 前缀）
type: string
do: &subop-type
  description: 主命令处理程序
type: object
  additionalProperties: False
  properties:
    request: &subop-attr-list
      description: 给定命令的请求消息定义
type: object
      additionalProperties: False
      properties:
        attributes:
          description: |
            属性集中的属性名称（不是完整的属性定义，仅名称）
type: array
          items:
            type: string
    reply: *subop-attr-list
    pre:
      description: 在主回调之前运行的函数挂钩（pre_doit 或 start）
```
```yaml
type: string
post:
  description: 在主回调（post_doit 或 done）之后运行的函数的钩子

type: string
dump: *subop-type
notify:
  description: 与该通知共享回复类型的命令名称

type: string
event:
  type: object
  additionalProperties: False
  properties:
    attributes:
      description: 通知的属性显式列表
      type: array
      items:
        type: string

mcgrp:
  description: 生成给定通知的多播组名称
type: string

mcast-groups:
  description: 多播组列表
type: object
  required: [ list ]
  additionalProperties: False
  properties:
    list:
      description: 组列表
      type: array
      items:
        type: object
        required: [ name ]
        additionalProperties: False
        properties:
          name:
            description: |
              用于形成定义及其值的组名称
            type: string

            # 开始 genetlink-c
            c-define-name:
              description: 覆盖 C uAPI 中定义的名称
            type: string

            # 结束 genetlink-c
            flags: *cmd_flags

kernel-family:
  description: 用于内核 C 代码生成的附加全局属性
type: object
  additionalProperties: False
  properties:
    headers:
      description: |
        应包含在生成代码源中的额外头文件列表
```

这是对原文档的中文翻译。希望这对你有帮助！
```yaml
类型: 数组
        元素:
          类型: 字符串
      sock-priv:
        描述: |
          用于在内核中存储套接字状态的类型的字面名称。该类型/结构是内核内部的，并未在规范中定义
类型: 字符串
```
