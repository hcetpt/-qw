修改补丁
========

如果你是一位子系统或分支的维护者，有时你需要稍微修改你收到的补丁以便合并它们，因为你的代码树与提交者的并不完全相同。如果你严格遵守开发者原创声明（Developer Certificate of Origin）中的规则(c)，你应该要求提交者重新生成补丁，但这会浪费大量的时间和精力，十分不切实际。根据规则(b)，你可以调整代码，但随后将一个提交者的代码改动并让其背书你的错误是非常不礼貌的行为。为了解决这个问题，建议你在最后一个“Signed-off-by”头和你的签名之间添加一行来说明你所做的更改。虽然这不是强制性的，但在方括号内加上你的邮件地址和/或名字作为描述的前缀，这样足以让人明显看出你是最后时刻修改的责任人。例如：

       Signed-off-by: 随机 J 开发者 <random@developer.example.org>
       [lucky@maintainer.example.org: 将结构体 foo 从 foo.c 移动到 foo.h]
       Signed-off-by: 幸运 K 维护者 <lucky@maintainer.example.org>

这种做法对于维护稳定分支特别有帮助，同时还能表彰作者、追踪变更、合并修复，并保护提交者免受抱怨。请注意，无论如何都不能改变作者的身份（即 From 头），因为它出现在变更日志中。
对于回溯移植者的特别说明：在提交信息顶部（紧接主题行之后）插入补丁来源的信息似乎是一种常见且有用的做法，有助于跟踪。例如，在一个 3.x 稳定版本中我们看到如下内容：

  日期:   2014年10月7日 周二 07:26:38 -0400

    libata: 解决 ATA 黑名单问题

    上游 commit 1c40279960bcd7d52dbdf1d466b20d24b99176c8
而在旧内核中，一旦补丁被回溯移植，可能会出现如下内容：

    日期:   2008年5月13日 周三 22:12:27 +0200

        无线, airo: waitbusy() 不会导致延迟

        [回溯移植自 2.6 的 commit b7acbdfbd1f277c1eb23f344f899cfa4cd0bf36a]

无论采用何种格式，这些信息对于跟踪你的代码树的人来说都是非常有价值的帮助，同时也对那些试图解决你的代码树中存在的问题的人大有裨益。
