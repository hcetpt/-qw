SPDX 许可证标识符: GPL-2.0

==============================
特性和驱动程序的维护者
==============================

“维护者”这个词涵盖了从几乎全职处理补丁和拉取请求到仅负责一小部分特性或驱动程序的人的不同参与程度。
与本章的大部分内容不同，本节针对的是后者（人数更多的）群体。它提供了建议，并描述了维护一小部分代码（特别是驱动程序等）的维护者的期望和责任。
通常没有自己的邮件列表和 git 仓库的驱动程序和类似的组件，而是会在更大的子系统的列表上发送和审查补丁。

责任
=================

维护工作的量通常与代码库的大小和受欢迎程度成正比。小特性和驱动程序应该需要相对较少的关注和维护。然而，当工作到来时（以需要审查的补丁、用户报告的错误等形式），必须迅速采取行动。

即使某个特定驱动程序每个月或每个季度只收到一个补丁，子系统可能有上百个这样的驱动程序。子系统的维护者无法承担长时间等待审查者的回应。

对于响应时间的具体期望会因子系统而异。子系统为自己设定的补丁审查服务级别协议(SLA)有时可以在子系统的文档中找到。如果没有，作为一般规则，审查者应尝试比子系统维护者通常的补丁审查延迟更快地做出回应。由此产生的期望可能从快速发展的子系统（例如网络）的两个工作日到内核较慢部分的几周不等。

邮件列表参与
--------------------------

Linux 内核使用邮件列表作为主要沟通形式。维护者必须订阅并关注相应的子系统范围内的邮件列表。这可以通过订阅整个列表或使用更现代的选择性设置来实现，例如 [lei](https://people.kernel.org/monsieuricon/lore-lei-part-1-getting-started)。

维护者必须知道如何在列表中进行沟通（纯文本，没有侵入性的法律脚注，不顶贴等）。

审查
-------

维护者必须审查所有仅触及他们所负责的驱动程序的补丁，无论多么微不足道。如果补丁是整个树范围的更改并且修改了多个驱动程序，则是否提供审查取决于维护者。
当一段代码有多个维护者时，只需一个维护者的 "Acked-by" 或 "Reviewed-by" 标签（或审查意见）即可满足此要求。

如果特定更改的审查过程或验证耗时将超过子系统预期的审查时间线，维护者应回复提交内容，表明正在进行工作，并告知何时可以期待完整的结果。

重构和核心变更
-----------------

有时需要对核心代码进行更改以提高整个内核的可维护性。维护者预计将会出现并帮助指导和测试其代码以适应新的基础设施。

错误报告
---------

维护者必须确保及时解决向他们报告的代码中的严重问题：如退化、内核崩溃、内核警告、编译错误、锁定、数据丢失以及其他类似范围的错误。此外，如果报告质量合理或表明可能存在严重问题，则维护者也应响应有关其他类型错误的报告——特别是如果他们在 MAINTAINERS 文件中有 *Supported* 状态的代码库。

开放开发
---------

关于用户报告的问题讨论以及新代码的开发应当按照更大的子系统的典型方式进行。在单一公司内部进行开发通常是封闭式的。然而，由社区成员发起的开发和讨论不得从公开论坛转向封闭论坛或私人电子邮件对话。本指导原则的合理例外包括有关安全相关问题的讨论。

选择维护者
===========

前一节描述了对维护者的期望，本节提供选择维护者的指导，并描述一些常见的误解。

作者
----

最自然和最常见的维护者选择是代码的作者。作者对代码非常熟悉，因此是最适合长期照顾它的人选。
话说回来，作为一个维护者是一个积极的角色。`MAINTAINERS` 文件并不是一个荣誉名单（实际上有一个单独的 `CREDITS` 文件），它是一份那些将会积极帮助代码的人的列表。
如果作者没有时间、兴趣或能力来维护代码，则必须选择不同的维护者。

### 多个维护者

现代最佳实践规定，对于任何一段代码，无论多么微不足道，都应该至少有两个维护者。这分散了负担，有助于人们休假，并防止过度劳累，培训社区的新成员等等。即使有一个明显合适的候选人，也应该找到另一个维护者。

维护者必须是人类，因此，将邮件列表或群组电子邮件添加为维护者是不可接受的。信任和理解是内核维护的基础，而与邮件列表建立信任是不可能的。除了人类之外有一个邮件列表是完全可行的。

### 企业结构

对外界来说，Linux 内核可能看起来像一个层级组织，Linus 就像是 CEO。虽然代码是以层级的方式流动，但这里并不适用企业模板。Linux 是一种由（很少表达的）相互尊重、信任和便利维系起来的无政府状态。

总之，管理者几乎从来都不是好的维护者。维护者的职位更接近于值班轮换，而不是权力的位置。

被选为维护者的人具有以下特征时是明显的警示标志：

- 对社区来说是未知的，从未向列表发送过电子邮件
- 没有编写过任何代码
- （当开发被承包时）为支付开发费用的公司工作，而不是实际完成工作的公司

### 不合规情况

子系统维护者可以从 `MAINTAINERS` 文件中移除不活跃的维护者。如果该维护者是重要的作者或在代码开发过程中扮演了重要角色，他们应该被移到 `CREDITS` 文件中。

移除不活跃的维护者不应被视为惩罚性行动。拥有不活跃的维护者确实存在实际成本，因为所有开发者都必须记住在讨论中包括维护者，并且子系统的维护者需要花费精力去弄清楚如何征求反馈。
子系统维护者可能会因为缺乏维护而移除代码。
子系统维护者可以拒绝接受那些一再忽视其维护职责的公司的代码。
