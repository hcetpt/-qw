==============================
Linux 电压和电流调节器框架
==============================

概览
====

此框架旨在提供一个标准的内核接口来控制电压和电流调节器。其目的是允许系统动态地控制调节器的功率输出，以节省电力并延长电池寿命。这适用于电压调节器（其中输出电压可调）和电流负载（其中电流限制可调）。
版权所有 © 2008 Wolfson Microelectronics PLC
作者：Liam Girdwood <lrg@slimlogic.co.uk>

术语
============

本文件中使用的一些术语：

- 调节器
             - 向其他设备供电的电子设备
大多数调节器可以启用或禁用其输出，而有些可以控制其输出电压和/或电流
输入电压 -> 调节器 -> 输出电压

- PMIC
             - 电源管理集成电路。包含多个调节器的集成电路，并且通常包含其他子系统
- 消费者
             - 由调节器供电的电子设备
消费者可分为两类：

              静态：消费者的供电电压或电流限制不会改变。它只需要启用或禁用其电源。其供电电压由硬件、引导加载程序、固件或内核板初始化代码设置
动态：消费者需要根据操作需求更改其供电电压或电流限制
- 功率域
             - 由调节器、开关或其他功率域的输出功率供应输入电力的电子电路
供电调节器可能位于一个或多个开关之后，例如：

                     调节器 -+-> 开关-1 -+-> 开关-2 --> [消费者 A]
                                |             |
                                |             +-> [消费者 B], [消费者 C]
                                |
                                +-> [消费者 D], [消费者 E]

也就是说，这里有一个调节器和三个供电域：

                   - 域 1: 开关-1, 消费者 D 和 E
- 域 2: 开关-2, 消费者 B 和 C
- 域 3: 消费者 A
这代表了一种“供电”关系：

                   域 1 --> 域 2 --> 域 3
一个供电域可能有由其他调节器供电的调节器。例如：

                     调节器-1 -+-> 调节器-2 -+-> [消费者 A]
                                  |
                                  +-> [消费者 B]

这就给出了两个调节器和两个供电域：

                   - 域 1: 调节器-2, 消费者 B
- 域 2: 消费者 A
以及一种“供电”关系：

                   域 1 --> 域 2


  - 约束条件
                 - 约束条件用于定义性能和硬件保护所需的功率水平。约束条件存在于三个层级：

                   调节器层级：这是由调节器硬件的工作参数定义，并在调节器的数据手册中指明。例如：
- 输出电压范围为 800mV 至 3500mV
- 调节器输出电流限制为 5V 下 20mA，但在 10V 下为 10mA
供电域层级：这是通过内核级别的板级初始化代码在软件中定义的。它被用来将一个供电域限定在一个特定的功率范围内。例如
- 域1电压为3300毫伏
- 域2电压从1400毫伏调整至1600毫伏
- 域3电流限制从0毫安调整至20毫安
消费者级别：这由消费者驱动程序定义，动态设置电压或电流限制水平。
例如，一个消费者背光驱动程序要求将电流从5毫安增加到10毫安以增强LCD照明。这一过程如下：

消费者：需要提高LCD亮度。查找并请求亮度表中下一个电流毫安值（该消费者驱动程序可能基于同一参考设备在几种不同个性上使用）
电源域：新的电流限制是否在此域和系统状态下的操作范围内（如电池供电、USB供电）

调节器域：新的电流限制是否在输入/输出电压的调节器运行参数内
如果调节器请求通过所有约束测试，则应用新的调节器值

设计
=====

框架设计针对SoC基础设备，但可能也适用于非SoC设备，并分为以下四个接口：

1. 消费者驱动接口
这使用与内核时钟接口类似的API，即消费者驱动程序可以获取和释放调节器（就像现在对时钟所做的那样），并且可以获取/设置电压、电流限制、模式、启用和禁用。这应该允许消费者完全控制其供电电压和电流限制。如果不使用，也可以编译掉，因此驱动程序可以在没有基于调节器的电源控制系统的系统中重用
请参阅Documentation/power/regulator/consumer.rst

2. 调节器驱动接口
这允许调节器驱动程序注册它们的调节器，并向核心提供操作。它还有一个通知调用链，用于将调节器事件传播给客户端
查看文档：Documentation/power/regulator/regulator.rst

3. 机器接口
此接口适用于特定于机器的代码，允许为每个稳压器创建带有约束条件的电压/电流域。它可以提供稳压器约束，以防止由于客户端驱动程序中的错误导致的过压或过流造成的设备损坏。它还允许创建一个稳压器树，其中一些稳压器由其他稳压器供电（类似于时钟树）。
请参阅：Documentation/power/regulator/machine.rst

4. 用户空间ABI
该框架还通过sysfs向用户空间导出了大量有用的电压/电流/操作模式数据。这可用于帮助监控设备的功耗和状态。
请参阅：Documentation/ABI/testing/sysfs-class-regulator

这个翻译将原始英文内容转换成了中文，保留了原有的技术细节和结构，便于中文读者理解。
