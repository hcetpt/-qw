==============================
Linux 电压和电流调节器框架
==============================

简介
====

此框架旨在提供一个标准的内核接口来控制电压和电流调节器。目的是使系统能够动态地控制调节器的功率输出，以节省电力并延长电池寿命。这适用于电压调节器（其中输出电压是可调的）和电流负载（其中电流限制是可调的）。

版权所有 © 2008 Wolfson Microelectronics PLC
作者：Liam Girdwood <lrg@slimlogic.co.uk>

术语定义
=========

本文档中使用的一些术语：

  - 调节器
                 - 向其他设备供电的电子设备。
大多数调节器可以启用或禁用其输出，而有些可以控制其输出电压和/或电流。
输入电压 -> 调节器 -> 输出电压


  - 电源管理集成电路 (PMIC)
                 - 电源管理集成电路。一种包含多个调节器的集成电路，通常还包含其他子系统。
- 消费者
                 - 由调节器供电的电子设备。
消费者可以分为两种类型： 

                   静态：消费者不会改变其供电电压或电流限制。它只需要启用或禁用其电源供应。其供电电压由硬件、引导加载程序、固件或内核板初始化代码设置。
动态：消费者需要根据运行需求改变其供电电压或
                   电流限制以满足操作需求。
- 电源域
                 - 由调节器、开关或其他电源域的输出功率提供输入电源的电子电路。
供电调节器可能位于一个或多个开关之后，例如：

                     调节器 -+-> 开关-1 -+-> 开关-2 --> [消费者 A]
                                |             |
                                |             +-> [消费者 B], [消费者 C]
                                |
                                +-> [消费者 D], [消费者 E]

也就是说，这里有一个调节器和三个供电区域：

                   - 区域 1: 开关-1, 消费者 D 和 E
- 区域 2: 开关-2, 消费者 B 和 C
- 区域 3: 消费者 A
这代表了一种“供电”关系：

                   区域-1 --> 区域-2 --> 区域-3
一个供电区域可能有由其他调节器供电的调节器。例如：

                     调节器-1 -+-> 调节器-2 -+-> [消费者 A]
                                  |
                                  +-> [消费者 B]

这就形成了两个调节器和两个供电区域：

                   - 区域 1: 调节器-2, 消费者 B
- 区域 2: 消费者 A
以及一种“供电”关系：

                   区域-1 --> 区域-2


  - 约束条件
                 - 约束条件用于定义性能和硬件保护所需的功率水平。约束条件存在于三个层级：

                   调节器层级：这是由调节器硬件的工作参数定义，并在调节器的数据手册中指明。例如：
- 输出电压范围为 800mV 至 3500mV
- 调节器输出电流限制为 5V 下 20mA，但在 10V 下为 10mA
供电区域层级：这是通过内核级别的板载初始化代码在软件中定义的。它被用来将一个供电区域限定在一个特定的功率范围内。例如：
- 域1的电压为3300mV
- 域2的电压从1400mV调整到1600mV
- 域3的电流限制从0mA调整到20mA
消费者级别：这由消费者驱动程序定义，动态设置电压或电流限制水平
例如，一个消费者背光驱动程序请求将电流从5mA增加到10mA以增强LCD的亮度。这一过程如下：

- 消费者：需要提高LCD的亮度。查找并请求亮度表中的下一个电流mA值（消费者驱动程序可以根据同一参考设备在几种不同配置中使用）
电源域：新的电流限制是否在这个域和系统状态下的操作范围内（例如电池供电、USB供电）

- 调压器域：新的电流限制是否符合调压器输入/输出电压的操作参数
如果调压器请求通过所有约束测试，则应用新的调压器值
设计
=====

该框架设计并针对基于SoC的设备，但也可能适用于非SoC设备，并且分为以下四个接口：

1. 消费者驱动接口
此接口使用与内核时钟接口类似的API，即消费者驱动程序可以获取和释放调压器（就像当前对时钟所做的那样），并且能够获取/设置电压、电流限制、模式、启用和禁用等。这应当允许消费者完全控制其供电电压和电流限制。此外，如果不使用，这部分代码可以被编译排除，因此驱动程序可以在没有基于调压器的电源控制系统的环境中重复利用
请参阅 `Documentation/power/regulator/consumer.rst`

2. 调压器驱动接口
这允许调压器驱动程序注册其调压器并向核心提供操作。它还包括一个通知器回调链，用于将调压器事件传播给客户端
### 文档说明：电源管理与调节器

#### 3. 机器接口
此接口专为特定于机器的代码设计，允许为每个调节器创建带有约束条件的电压/电流域。它可以提供调节器约束，以防止因客户端驱动程序中的错误导致过压或过流而损坏设备。此外，它还支持构建调节器树结构，在这种结构中，一些调节器由其他调节器供电（类似于时钟树）。
详情请参阅 `Documentation/power/regulator/machine.rst`。

#### 4. 用户空间 ABI
该框架还通过 sysfs 向用户空间导出了大量的电压、电流和操作模式数据。这些数据可用于监控设备的功耗和状态。
详情请参阅 `Documentation/ABI/testing/sysfs-class-regulator`。
