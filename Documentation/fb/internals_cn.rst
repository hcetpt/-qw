=============================
帧缓冲设备内部结构
=============================

这是关于帧缓冲设备内部结构的一些初步文档。
作者：

- Geert Uytterhoeven <geert@linux-m68k.org>，1998年7月21日
- James Simmons <jsimmons@user.sf.net>，2002年11月26日

--------------------------------------------------------------------------------

帧缓冲设备API使用的结构体
==============================================

以下结构体在帧缓冲设备的使用中起着重要作用。它们定义在 `<linux/fb.h>` 中。

1. 在内核外部（用户空间）

  - `struct fb_fix_screeninfo`

    关于帧缓冲设备和特定视频模式的不可更改的设备无关信息。可以通过 `FBIOGET_FSCREENINFO` ioctl 获取这些信息。
  - `struct fb_var_screeninfo`

    关于帧缓冲设备和特定视频模式的可更改的设备无关信息。可以通过 `FBIOGET_VSCREENINFO` ioctl 获取这些信息，并通过 `FBIOPUT_VSCREENINFO` ioctl 更新。如果只想平移屏幕，可以使用 `FBIOPAN_DISPLAY` ioctl。
  - `struct fb_cmap`

    设备无关的颜色映射信息。可以通过 `FBIOGETCMAP` 和 `FBIOPUTCMAP` ioctl 获取和设置颜色映射。

2. 在内核内部

  - `struct fb_info`

    关于特定帧缓冲设备实例的通用信息、API 和低级信息（插槽编号、板卡地址等）。
  - `struct par`

    定义该硬件特定视频模式的设备相关信息。

帧缓冲设备API使用的视觉类型
===========================================

单色（`FB_VISUAL_MONO01` 和 `FB_VISUAL_MONO10`）
--------------------------------------------------
每个像素要么是黑色，要么是白色。

伪彩色（`FB_VISUAL_PSEUDOCOLOR` 和 `FB_VISUAL_STATIC_PSEUDOCOLOR`）
---------------------------------------------------------------------
整个像素值通过一个可编程查找表，该表为每个可能的像素值分配一个颜色（包括红、绿、蓝强度），并显示该颜色。

真彩色（`FB_VISUAL_TRUECOLOR`）
--------------------------------
像素值被分解成红色、绿色和蓝色字段。
直接颜色（FB_VISUAL_DIRECTCOLOR）
------------------------------------
像素值被分成红色、绿色和蓝色字段，每个字段分别在独立的红、绿、蓝查找表中进行查找。

灰度显示
------------------
灰度和静态灰度是伪颜色和静态伪颜色的特殊变体，在这些变体中，红色、绿色和蓝色分量始终相等。
