### 什么是vesafb？

这是一个用于Intel机器上的图形帧缓冲区的通用驱动程序。
其基本思路是：在启动时借助BIOS开启图形模式，并将其作为帧缓冲设备 `/dev/fb0` 使用，就像m68k（以及其他）端口所做的那样。
这意味着我们在启动时决定是否运行在文本模式还是图形模式。在保护模式下切换模式是不可能的；BIOS调用仅在实模式下工作。需要VESA BIOS Extensions 2.0，因为我们需要线性帧缓冲区。

优点：

* 它提供了一个较大的控制台（128列 + 48行，在1024x768分辨率下），而不需要使用小且难以阅读的字体。
* 您可以在 `/dev/fb0` 上运行XF68_FBDev（=> 对于所有符合VBE 2.0标准的图形板提供非加速X11支持）。
* 最重要的是：启动logo。

缺点：

* 图形模式比文本模式慢。

### 如何使用它？

通过使用 `vga=...` 启动参数来切换模式。详情请参阅 `Documentation/admin-guide/svga.rst`。
您应该编译vgacon（用于文本模式）和vesafb（用于图形模式）。哪个接管控制台取决于指定的模式是文本模式还是图形模式。
图形模式不在使用 `vga=ask` 启动并按回车键时显示的列表中。您希望使用的模式由VESA模式号得出。以下是这些VESA模式号：

====== =======  =======  ======== =========
颜色 640x480  800x600  1024x768 1280x1024
====== =======  =======  ======== =========
256    0x101    0x103    0x105    0x107
32k    0x110    0x113    0x116    0x119
64k    0x111    0x114    0x117    0x11A
16M    0x112    0x115    0x118    0x11B
====== =======  =======  ======== =========

Linux内核的视频模式号等于VESA模式号加上0x200：

```
Linux_kernel_mode_number = VESA_mode_number + 0x200
```

因此，内核模式号的表格如下：

====== =======  =======  ======== =========
颜色 640x480  800x600  1024x768 1280x1024
====== =======  =======  ======== =========
256    0x301    0x303    0x305    0x307
32k    0x310    0x313    0x316    0x319
64k    0x311    0x314    0x317    0x31A
16M    0x312    0x315    0x318    0x31B
====== =======  =======  ======== =========

要启用这些模式中的一个，您需要在 `lilo.conf` 文件中指定 `vga=ask` 并重新运行LILO。然后您可以在 `vga=ask` 提示符下输入所需的模式。例如，如果您想使用1024x768x256颜色，您需要在这个提示符下输入 `305`。
如果这不起作用，可能是由于您的BIOS不支持线性帧缓冲区或根本不支持该模式。
即使你的主板支持，BIOS 可能不支持。需要 VESA BIOS Extensions v2.0，1.2 版本是不够的。如果出现问题，你会收到“模式编号错误”的消息。

1. 注意：LILO 不能处理十六进制，在启动时直接使用“vga=模式编号”需要将数字转换为十进制。
2. 注意：一些较新的 LILO 版本在数字前加上 0x 后可以处理这些十六进制值。

X11
===

XF68_FBDev 应该可以正常工作，但它是非加速的。运行另一个（加速的）X-Server（如 XF86_SVGA）可能有效也可能无效。这取决于 X-Server 和显卡。X-Server 必须正确恢复视频模式，否则你将得到一个损坏的控制台（vesafb 对此无能为力）。

刷新率
=============

在启动 Linux 后无法更改 vesafb 的视频模式和/或定时。如果你不满意 60 Hz 的刷新率，你可以选择以下几种方法：

* 配置并加载图形板的 DOS 工具（如果可用），并用 loadlin 启动 Linux。
* 使用原生驱动程序（如 matroxfb/atyfb）代替 vesafb。如果没有可用的驱动程序，可以编写一个新的。
* VBE 3.0 也可能有效。我没有支持 VBE 3.0 的显卡或规格，因此还没有进行测试。

配置
=============

VESA BIOS 提供了用于更改某些参数的保护模式接口。vesafb 可以使用它来更改调色板和平移显示。默认情况下它是关闭的，因为似乎有些 BIOS 版本不支持它，但有选项可以开启它。

你可以在内核命令行中使用 "video=vesafb:option" 来传递选项给 vesafb。多个选项之间应该用逗号分隔，例如："video=vesafb:ypan,inverse"。

接受的选项：

inverse	使用反相颜色映射

========= ======================================================================
ypan	启用使用 VESA 保护模式接口的显示平移。可见屏幕只是视频内存的一个窗口，控制台滚动通过改变窗口的起始位置来实现。
pro:

                * 滚动（全屏）速度很快，因为不需要复制数据

kontra:

		* 只滚动屏幕的一部分会导致一些难看的闪烁效果（例如启动logo闪烁）

ywrap    同 ypan，但假设您的显卡可以循环视频内存（即到达视频内存末尾时从顶部开始读取）。比 ypan 快

redraw   通过重新绘制受影响的部分来滚动屏幕，这是安全（但较慢）的默认选项

vgapal   使用标准 VGA 寄存器进行调色板更改。这是默认设置

pmipal   使用保护模式接口进行调色板更改

mtrr:n   为 vesafb 帧缓冲区设置内存类型范围寄存器，其中 n 表示：

              - 0 - 禁用（等同于 nomtrr）（默认）
              - 1 - 不可缓存
              - 2 - 写回
              - 3 - 写合并
              - 4 - 写直达

          如果在 dmesg 中看到以下内容，请选择与旧类型匹配的类型。在此示例中，使用 "mtrr:2"
..
mtrr:    对于 e0000000,8000000 的类型不匹配，旧类型：写回 新类型：写合并
..
以下是翻译：

```
nomtrr    禁用 MTRR

vremap:n
          重新映射 'n' MiB 的视频内存。如果为 0 或未指定，则根据视频模式重新映射内存。
          （2.5.66 补丁/想法由 Antonino Daplas 提出，并由 tmb@iki.fi 反转以提供覆盖可能性，即分配比内核更多的帧缓冲区内存，应用于 2.4 版本）

vtotal:n  如果您的显卡 BIOS 错误地确定了视频内存的总量，请使用此选项来覆盖 BIOS（单位：MiB）
========= ======================================================================

祝您玩得开心！

Gerd Knorr <kraxel@goldbach.in-berlin.de>

一些小的修改（主要是拼写错误）
由 Nico Schmoigl <schmoigl@rumms.uni-mannheim.de>
```
