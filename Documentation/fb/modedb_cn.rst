=================================
模态数据库默认视频模式支持
=================================

目前，所有帧缓冲设备驱动程序都有自己的视频模式数据库，这既混乱又浪费资源。modedb的主要思想是：

  - 提供一个用于探测视频模式的通用例程，可供所有帧缓冲设备使用。
  - 提供一个包含大量标准视频模式的通用视频模式数据库（取自XFree86）。
  - 对于需要非标准模式的图形硬件（如amifb和Mac帧缓冲驱动程序，它们使用macmodes.c），可以提供自己的模式数据库。

当帧缓冲设备接收到一个它不认识的`video=`选项时，应将其视为视频模式选项。如果`video=`选项中未指定任何帧缓冲设备，则fbmem认为这是一个全局视频模式选项。有效的模式指定符（mode_option参数）如下：

    <xres>x<yres>[M][R][-<bpp>][@<refresh>][i][m][eDd]
    <name>[-<bpp>][@<refresh>]

其中<xres>、<yres>、<bpp>和<refresh>为十进制数，<name>为字符串。方括号内的内容为可选项。有效的名称包括：

  - NSTC：480i输出，采用CCIR System-M电视模式和NTSC色彩编码。
  - NTSC-J：480i输出，采用CCIR System-M电视模式、NTSC色彩编码以及与消隐电平相等的黑电平。
  - PAL：576i输出，采用CCIR System-B电视模式和PAL色彩编码。
  - PAL-M：480i输出，采用CCIR System-M电视模式和PAL色彩编码。

如果在mode_option参数中指定了'M'（位于<yres>之后且在<bpp>和<refresh>之前，如果有的话），则将使用VESA(TM) Coordinated Video Timings计算定时，而不是从表中查找该模式。如果指定了'R'，则对数字显示器进行“减少消隐”计算。如果指定了'i'，则计算交错模式。如果指定了'm'，则在计算中添加边距（xres的1.8%，向下取整到8像素，以及yres的1.8%）。
示例用法：1024x768M@60m - 带边距的CVT定时

DRM驱动程序还提供了启用或禁用输出的选项：

'e'会强制启用显示，即覆盖检测是否连接了显示器。'D'会强制启用显示并使用数字输出。这对于具有模拟和数字信号的输出（例如HDMI和DVI-I）非常有用。对于其他输出，其行为类似于'e'。如果指定了'd'，则禁用输出。
还可以指定选项匹配哪个输出。
要强制启用VGA输出并驱动特定模式，请说：

    video=VGA-1:1280x1024@60me

可以在不同的端口上多次指定该选项，例如：

    video=LVDS-1:d video=HDMI-1:D

可以在模式之后使用逗号作为分隔符传递选项。
示例用法：720x480,rotate=180 - 720x480 模式，旋转 180 度

有效选项包括：

  - margin_top, margin_bottom, margin_left, margin_right（整数）：
    边距中的像素数量，通常用于处理电视上的过扫描问题
  - reflect_x（布尔值）：沿 X 轴进行轴对称
  - reflect_y（布尔值）：沿 Y 轴进行轴对称
  - rotate（整数）：将初始帧缓冲区旋转 x 度。有效值为 0、90、180 和 270
  - tv_mode：模拟电视模式。可选值包括 "NTSC"、"NTSC-443"、"NTSC-J"、"PAL"、"PAL-M"、"PAL-N" 或 "SECAM"
  - panel_orientation：面板方向，可选值包括 "normal"、"upside_down"、"left_side_up" 或 "right_side_up"。仅适用于 KMS 驱动程序，此选项设置 KMS 连接器上的“面板方向”属性作为 KMS 用户的提示

----------------------------------------------------------------------------------------------

什么是 VESA™ 协调视频时序（CVT）？
======================================

根据 VESA™ 网站：

     “CVT 的目的是提供一种方法来生成一致且协调的标准格式、显示刷新率和计算机显示产品的时序规范，无论是使用 CRT 还是其他显示技术。CVT 的意图是为源制造商和显示制造商提供一套通用工具，以确保新时序能够以一致的方式开发，并确保更高的兼容性。”

这是 VESA™ 批准的第三个关于视频时序的标准。第一个标准是离散视频时序（DVT），它是 VESA™ 批准的一系列预定义模式。第二个标准是通用时序公式（GTF），这是一种根据像素时钟、水平同步频率或垂直刷新率计算时序的算法。GTF 的局限性在于它主要针对 CRT 显示器，人为增加了像素时钟，因为它的高消隐要求。这对于需要高数据速率且需要尽可能保留像素时钟的数字显示接口来说是不合适的。此外，GTF 并未考虑显示器的长宽比。CVT 解决了这些局限性。如果与 CRT 显示器一起使用，则所使用的公式是 GTF 的衍生版本，进行了少量修改。如果与数字显示器一起使用，则可以使用“减少消隐”的计算方法。从帧缓冲子系统的角度来看，每当新的显示模式由显示器制造商发布时，无需向全局模式数据库添加新的格式。指定 CVT 可以适用于大多数相对较新的 CRT 显示器，甚至可能适用于大多数平板显示器（如果指定了“减少消隐”计算）。可以通过 EDID 确定显示器是否支持 CVT。EDID 1.3 版本具有额外的 128 字节块，其中包含附加的时序信息。目前，层中还没有解析这些附加块的支持。

CVT 还引入了一种新的命名约定（应从 dmesg 输出中看到）：

    <pix>M<a>[-R]

    其中：pix = 总像素数（MB 中的 xres x yres）
	   M   = 始终存在
	   a   = 长宽比（3 - 4:3；4 - 5:4；9 - 15:9, 16:9；A - 16:10）
	  -R   = 减少消隐

	  示例：.48M3-R - 800x600 减少消隐

注意：VESA™ 对标准 CVT 时序有一些限制：

      - 长宽比只能是上述值之一
      - 接受的刷新率为 50、60、70 或 85 Hz
      - 如果减少消隐，则刷新率必须为 60 Hz

如果上述条件之一不满足，内核会打印警告信息，但仍然会计算时序。

----------------------------------------------------------------------------------------------

要找到合适的视频模式，只需调用：

  int __init fb_find_mode(struct fb_var_screeninfo *var,
			  struct fb_info *info, const char *mode_option,
			  const struct fb_videomode *db, unsigned int dbsize,
			  const struct fb_videomode *default_mode,
			  unsigned int default_bpp)

其中 db/dbsize 是您的非标准视频模式数据库，或者为 NULL 以使用标准视频模式数据库。
`fb_find_mode()` 首先尝试指定的视频模式（或任何匹配的模式，例如，可以有多个 640x480 模式，每个模式都会被尝试）。如果失败，则尝试默认模式。如果仍然失败，则遍历所有模式。

要在启动时指定视频模式，请使用以下启动选项：

    video=<driver>:<xres>x<yres>[-<bpp>][@refresh]

其中 `<driver>` 是下表中的一个名称。有效的默认模式可以在 `drivers/video/fbdev/core/modedb.c` 中找到。请查阅驱动程序文档，可能还有更多模式：

    支持 modedb 启动选项的驱动程序
    启动名称	支持的显卡

    amifb	- Amiga 显卡帧缓冲区
    aty128fb	- ATI Rage128 / Pro 帧缓冲区
    atyfb	- ATI Mach64 帧缓冲区
    pm2fb	- Permedia 2/2V 帧缓冲区
    pm3fb	- Permedia 3 帧缓冲区
    sstfb	- Voodoo 1/2 (SST1) 显卡帧缓冲区
    tdfxfb	- 3D Fx 帧缓冲区
    tridentfb	- Trident (Cyber)blade 显卡帧缓冲区
    vt8623fb	- VIA 8623 帧缓冲区

顺便说一句，目前只有少数帧缓冲驱动程序使用这种方法。其他驱动程序将会跟进（欢迎提交补丁）。DRM 驱动程序也支持这种方法。
