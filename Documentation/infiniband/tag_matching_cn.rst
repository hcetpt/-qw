标签匹配逻辑
===============

MPI 标准定义了一组规则，称为标签匹配，用于将源发送操作与目标接收操作进行匹配。以下参数必须与相应的源和目标参数匹配：

* 通信器
* 用户标签 — 接收方可以指定通配符
* 发送方排名 — 接收方可以指定通配符
* 接收方排名 — 通配符

排序规则要求当多对发送和接收消息信封可能匹配时，包含最早发布的发送和最早发布的接收的那一对必须被用来满足匹配操作。然而，这并不意味着标签按照它们创建的顺序被消耗，例如，如果较早的标签不能满足匹配规则，则可能消耗一个稍后生成的标签。
当一条消息从发送方发送到接收方时，通信库可能会在对应的匹配接收发布之前或之后尝试处理该操作。如果发布了匹配接收，则这是一条预期的消息；否则，它被称为意外消息。
实现通常为这两种不同的匹配情况使用不同的匹配方案。
为了降低 MPI 库的内存占用，MPI 实现通常使用两种不同的协议来实现这一目的：

1. 热切协议 — 当发送方处理发送时，完整的消息被发送。在发送完成队列中接收到一个完成发送的通知，表明缓冲区可以被重用。
2. 相遇协议 — 发送方首先通知接收方发送标签匹配头以及可能的一部分数据。当对应的缓冲区被发布时，响应者会使用头部中的信息直接发起 RDMA 读取操作到匹配的缓冲区。为了使缓冲区能够重用，需要接收一个结束消息。

标签匹配实现
=================

存在两种类型的匹配对象：已发布的接收列表和意外消息列表。应用程序通过调用 MPI 接收例程向已发布的接收列表发布接收缓冲区，并使用 MPI 发送例程发布发送消息。已发布的接收列表的头部可能由硬件维护，软件则需要维护这个列表的副本。
当发送被启动并到达接收端时，如果没有预先发布的接收等待这条到达的消息，那么这条消息会被传递给软件层并放入意外消息列表。否则，进行匹配处理，包括适当的相遇处理，将数据交付到指定的接收缓冲区。这使得接收端的 MPI 标签匹配可以与计算重叠。
当发布接收消息时，通信库首先检查软件意外消息列表以寻找匹配的接收。如果找到匹配项，使用软件控制的协议将数据交付到用户缓冲区。UCX 实现根据数据大小采用热切协议或相遇协议。如果没有找到匹配项，整个预发布的接收列表由硬件维护，并且有足够的空间添加另一个预发布的接收到这个列表中，那么这个接收会被传递给硬件。软件需要维护这个列表的副本，以帮助处理 MPI 取消操作。此外，因为硬件和软件在标签匹配操作上不期望紧密同步，所以这个副本列表用于检测预发布的接收传递给硬件的情况，此时匹配的意外消息正从硬件传递给软件。
你没有给出需要翻译的文本，所以我无法完成翻译。请提供需要翻译成中文的英文文本。例如：

Translate to Chinese: "Hello, how are you?"

你好，你怎么样？
