标签匹配逻辑
===============

MPI 标准定义了一组规则，称为标签匹配，用于将源发送操作与目标接收操作进行匹配。以下参数必须与相应的源和目标参数匹配：

* 通信器
* 用户标签 — 接收方可以指定通配符
* 源排名 — 接收方可以指定通配符
* 目标排名 — 通配符

排序规则要求当多个发送和接收消息对可能匹配时，包含最早发布的发送和最早发布的接收的消息对必须用于满足匹配操作。然而，这并不意味着按创建顺序消费标签，例如，如果较早的标签无法满足匹配规则，则可能会消费稍后生成的标签。
当消息从发送方发送到接收方时，通信库可能会尝试在对应的匹配接收发布之前或之后处理该操作。如果发布了匹配接收，这是预期的消息；否则，它被称为意外消息。
实现通常为这两种不同的匹配情况使用不同的匹配方案。

为了减少 MPI 库的内存占用，MPI 实现通常采用两种不同的协议：

1. 热切协议 — 当发送由发送方处理时，完整的消息被发送。完成发送会在 send_cq 中接收，通知可以重用缓冲区。
2. 约会协议 — 发送方首先通过通知接收方发送标签匹配头，以及可能的部分数据。当相应的缓冲区被发布时，响应者将使用头部中的信息直接发起 RDMA 读取操作到匹配的缓冲区。需要接收到结束消息以便缓冲区能够被重用。

标签匹配实现
=================

有两种类型的匹配对象被使用：已发布的接收列表和意外消息列表。应用程序通过调用 MPI 接收例程向已发布的接收列表发布接收缓冲区，并使用 MPI 发送例程发布发送消息。已发布的接收列表的头部可能由硬件维护，软件预计会对此列表进行副本维护。

当发送启动并到达接收端时，如果没有预发布的接收等待这个到达的消息，它会被传递给软件并放入意外消息列表中。否则，将处理匹配，包括适当的约会处理，将数据交付到指定的接收缓冲区。这使得接收端 MPI 标签匹配与计算重叠成为可能。

当发布接收消息时，通信库将首先检查软件意外消息列表以寻找匹配的接收。如果找到匹配项，则使用软件控制的协议将数据交付到用户缓冲区。UCX 实现根据数据大小使用热切或约会协议。如果没有找到匹配项，并且整个预发布的接收列表由硬件维护，并且有足够的空间在此列表中添加一个额外的预发布的接收，此接收将传递给硬件。软件预计会对此列表进行副本维护，以帮助处理 MPI 取消操作。此外，因为硬件和软件在标签匹配操作方面不会紧密同步，因此此副本列表用于检测预发布的接收传递给硬件的情况，而此时匹配的意外消息正从硬件传递给软件。
您没有提供需要翻译的文本。请提供需要翻译成中文的英文或其他语言的文本。
