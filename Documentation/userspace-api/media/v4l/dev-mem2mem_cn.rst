.. SPDX 许可证标识符: GFDL-1.1-no-invariants-or-later

.. _mem2mem:

********************************
视频内存到内存接口
********************************

一个 V4L2 内存到内存设备可以在内存中将视频数据从一种格式压缩、解压缩、转换或以其他方式转换为另一种格式。此类内存到内存设备设置 `V4L2_CAP_VIDEO_M2M` 或 `V4L2_CAP_VIDEO_M2M_MPLANE` 能力。内存到内存设备的例子包括编解码器、缩放器、去交织器或格式转换器（即将 YUV 转换为 RGB）。

内存到内存视频节点的行为与普通视频节点相同，但它支持输出（将帧从内存发送到硬件）和捕获（从硬件接收处理后的帧到内存）流 I/O。应用程序需要为两侧设置流 I/O，并最终调用 :ref:`VIDIOC_STREAMON <VIDIOC_STREAMON>` 来启动硬件的捕获和输出功能。

内存到内存设备作为共享资源运行：你可以多次打开视频节点，每个应用程序设置其文件句柄本地的属性，并且每个应用程序可以独立使用它。驱动程序会仲裁对硬件的访问，并在另一个文件句柄获得访问权限时重新编程硬件。

这与通常的视频节点行为不同，在通常的视频节点中，视频属性是全局性的（即通过一个文件句柄更改的内容可以通过另一个文件句柄看到）。

最常见的内存到内存设备之一是编解码器。编解码器比大多数设备更复杂，需要额外设置其编解码参数。这是通过编解码器控制来完成的，请参阅 :ref:`codec-controls`。关于如何使用编解码器内存到内存设备的更多详细信息将在以下章节中给出。

.. toctree::
    :maxdepth: 1

    dev-decoder
    dev-encoder
    dev-stateless-decoder
