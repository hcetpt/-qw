SPDX 许可证标识符: GFDL-1.1-no-invariants-or-later

**********************
标准图像格式
**********************

为了在驱动程序和应用程序之间交换图像，有必要定义双方都能以相同方式解释的标准图像数据格式。V4L2 包含了多种这样的格式，本节旨在明确说明 V4L2 中的标准图像数据格式。
然而，V4L2 驱动程序并不局限于这些格式。也可以使用特定于驱动程序的格式。在这种情况下，应用程序可能依赖编解码器将图像转换为所需的标准格式。但数据仍然可以存储和检索为专有格式。例如，设备可能支持一种专有的压缩格式。应用程序仍然可以在压缩格式下捕获和保存数据，从而节省大量磁盘空间，并在需要显示视频时使用编解码器将图像转换为 X Window 屏幕格式。
即便如此，最终仍需要一些标准格式，因此没有明确定义的标准格式，V4L2 规范将是不完整的。

V4L2 的标准格式主要是未压缩格式。像素始终从左到右、从上到下排列在内存中。图像缓冲区中的第一个字节总是用于最上面一行的最左边的像素。紧随其后的是该像素右侧的像素，依此类推直到第一行的最后一个像素。在每行像素数据的最右侧可能有零个或多个填充字节，以确保每行像素数据有一定的对齐方式。如果有填充字节，则在其之后是第二行最左侧像素的数据，依此类推。最后一行后的填充字节数与其他行相同。

在 V4L2 中，每个格式都有一个标识符，形式为 ``PIX_FMT_XXX``，在 :ref:`videodev2.h <videodev>` 头文件中定义。这些标识符代表 :ref:`四个字符（FourCC）代码 <v4l2-fourcc>`，这些代码也列在下面，但它们与 Windows 系统中的不同。

对于某些格式，数据存储在独立的、非连续的内存缓冲区中。这些格式由另一组 FourCC 代码标识，并称为“多平面格式”。例如，:ref:`YUV422 <V4L2-PIX-FMT-YUV422M>` 帧通常存储在一个内存缓冲区中，但它也可以放在两个或三个独立的缓冲区中，在两平面版本中 Y 分量位于一个缓冲区中，CbCr 分量位于另一个缓冲区中；而在三平面情况下，每个分量都有自己的缓冲区。这些子缓冲区被称为“*平面*”。
