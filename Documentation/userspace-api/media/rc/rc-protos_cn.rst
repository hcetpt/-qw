SPDX 许可证标识符: GPL-2.0 或 GFDL-1.1 无不变部分或更高版本

。。 _Remote_controllers_Protocols:

**************************************
遥控器协议和扫描码
**************************************

红外线（IR）是通过一系列脉冲和间隔按照某种协议进行编码的。这些协议可以对例如地址（应响应哪个设备）和命令：设备应该执行的操作进行编码。对于给定的协议，这些值在不同设备之间并不总是保持一致。因此，红外解码器的输出是一个扫描码；一个单一的 u32 值。使用键位映射表，这可以映射到 Linux 的键码。其他内容也可以被编码。一些红外协议包含一个切换位；这是为了区分同一个按钮是被按住还是已经释放并再次按下。如果按钮已经释放并再次按下，则切换位将在每次红外消息之间反转。一些遥控器有一个指针类型的设备，可以用来控制鼠标；一些空调系统可以通过红外设置目标温度。

以下是一些内核所支持的协议以及每种协议下扫描码是如何编码的：

rc-5 (RC_PROTO_RC5)
-------------------

此红外协议使用曼彻斯特编码来编码 14 位。详细描述见 https://www.sbprojects.net/knowledge/ir/rc5.php
扫描码编码与 lirc 守护进程（lircd）的 rc5 协议或曼彻斯特 BPF 解码器不一致。
.. flat-table:: rc5 位与扫描码映射
   :widths:       1 1 2

   * - rc-5 位

     - 扫描码位

     - 描述

   * - 1

     - 无

     - 起始位，始终设置

   * - 1

     - 6 （反转）

     - rc5 中的第二个起始位，作为第六个命令位重复使用

   * - 1

     - 无

     - 切换位

   * - 5

     - 8 至 13

     - 地址

   * - 6

     - 0 至 5

     - 命令

rc-5 有一个变体称为 rc5x 或扩展 rc5，在这里第二个停止位是第六个命令位，但进行了反转。
这样做是为了使扫描码和编码与现有的方案兼容。这一位存储在扫描码的第 6 位，并且进行了反转。这样做的目的是为了与普通的 rc-5 兼容，因为普通 rc-5 有两个起始位。
rc-5-sz (RC_PROTO_RC5_SZ)
-------------------------
这与 rc-5 非常相似，但是多一位。扫描码的编码方式不同。
### rc-5-sz 位与扫描码映射

| rc-5-sz 位 | 扫描码位 | 描述 |
| --- | --- | --- |
| 1 | 无 | 开始位，始终设置 |
| 1 | 13 | 地址位 |
| 1 | 无 | 切换位 |
| 6 | 6 至 11 | 地址 |
| 6 | 0 至 5 | 命令 |

---

### rc-5x-20 (RC_PROTO_RC5X_20)

这是扩展到编码 20 位的 rc-5。第 8 位之后有一个 3555 微秒的空间。

| rc-5-sz 位 | 扫描码位 | 描述 |
| --- | --- | --- |
| 1 | 无 | 开始位，始终设置 |
| 1 | 14 | 地址位 |
| 1 | 无 | 切换位 |
| 5 | 16 至 20 | 地址 |
| 6 | 8 至 13 | 地址 |
| 6 | 0 至 5 | 命令 |

---

### JVC (RC_PROTO_JVC)

JVC 协议类似于 NEC 协议，但没有取反值。详细描述见：https://www.sbprojects.net/knowledge/ir/jvc.php

扫描码是一个 16 位的值，其中地址是低 8 位，命令是高 8 位；这与红外线（IR）顺序相反。

---

### sony-12 (RC_PROTO_SONY12)

Sony 协议是一种脉冲宽度编码。有三种变体，它们仅在位数和扫描码编码上有所不同。

| sony-12 位 | 扫描码位 | 描述 |
| --- | --- | --- |
| 5 | 16 至 20 | 设备 |
| 7 | 0 至 6 | 功能 |

---

### sony-15 (RC_PROTO_SONY15)

Sony 协议是一种脉冲宽度编码。有三种变体，它们仅在位数和扫描码编码上有所不同。

| sony-12 位 | 扫描码位 | 描述 |
| --- | --- | --- |
| 8 | 16 至 23 | 设备 |
| 7 | 0 至 6 | 功能 |

---

### sony-20 (RC_PROTO_SONY20)

Sony 协议是一种脉冲宽度编码。有三种变体，它们仅在位数和扫描码编码上有所不同。

| sony-20 位 | 扫描码位 | 描述 |
| --- | --- | --- |
| 5 | 16 至 20 | 设备 |
| 7 | 0 至 7 | 设备 |
| 8 | 8 至 15 | 扩展位 |

---

### NEC (RC_PROTO_NEC)

NEC 协议编码一个 8 位地址和一个 8 位命令。详细描述见：https://www.sbprojects.net/knowledge/ir/nec.php。注意该协议首先发送最低有效位。

作为验证，NEC 协议两次发送地址和命令；第二次时会取反。这是为了验证。

一个普通的 NEC 红外消息有 16 位；高 8 位是地址，低 8 位是命令。

---

### NEC-X (RC_PROTO_NECX)

扩展的 NEC 协议具有一个 16 位地址和一个 8 位命令。这被编码为一个 24 位值，如你所期望的那样，低 8 位是命令，高 16 位是地址。
nec-32 (RC_PROTO_NEC32)
-----------------------

nec-32 不发送反转的地址或反转的命令；整个消息，全部32位都被使用。
为了正确解码，第二个8位不能是第一个8位的反转值，并且最后8位也不能是第三个8位的反转值。
扫描码有一种较为特殊的编码方式。
.. flat-table:: nec-32 位扫描码映射

   * - nec-32 位

     - 扫描码位

   * - 第一个8位

     - 16到23

   * - 第二个8位

     - 24到31

   * - 第三个8位

     - 0到7

   * - 第四个8位

     - 8到15

sanyo (RC_PROTO_SANYO)
----------------------

sanyo 协议类似于nec协议，但地址为13位而不是8位。地址和命令后面都跟着它们各自的反转版本，但这些反转版本并未出现在扫描码中。
扫描码的第8位到第20位是13位地址，而最低8位是命令。

mcir2-kbd (RC_PROTO_MCIR2_KBD)
------------------------------

此协议由Microsoft MCE键盘生成，用于键盘事件。参见ir-mce_kbd-decoder.c以了解其编码方式。

mcir2-mse (RC_PROTO_MCIR2_MSE)
------------------------------

此协议由Microsoft MCE键盘生成，用于指针事件。参见ir-mce_kbd-decoder.c以了解其编码方式。

rc-6-0 (RC_PROTO_RC6_0)
-----------------------

这是rc-6模式0。rc-6在此处有详细描述：https://www.sbprojects.net/knowledge/ir/rc6.php
扫描码与协议中的确切16位相同。还有一个切换位。

rc-6-6a-20 (RC_PROTO_RC6_6A_20)
-------------------------------

这是rc-6模式6a，20位。rc-6在此处有详细描述：https://www.sbprojects.net/knowledge/ir/rc6.php
扫描码是协议中确切的20位。还有一个切换位
rc-6-6a-24（RC_PROTO_RC6_6A_24）
-------------------------------

这是模式6a下的rc-6，24位。rc-6的描述见这里
https://www.sbprojects.net/knowledge/ir/rc6.php
扫描码是协议中确切的24位。还有一个切换位
rc-6-6a-32（RC_PROTO_RC6_6A_32）
-------------------------------

这是模式6a下的rc-6，32位。rc-6的描述见这里
https://www.sbprojects.net/knowledge/ir/rc6.php
高16位是厂商信息，
低16位是厂商特定的信息。这个协议适用于非Microsoft MCE变体（vendor != 0x800f）
rc-6-mce（RC_PROTO_RC6_MCE）
---------------------------

这是模式6a下的rc-6，32位。高16位是厂商信息，
低16位是厂商特定的信息。这个协议适用于Microsoft MCE变体（vendor = 0x800f）。协议中的切换位被忽略，第16位应被视为切换位
sharp（RC_PROTO_SHARP）
----------------------

这是一种由Sharp录像机使用的协议，描述见这里
https://www.sbprojects.net/knowledge/ir/sharp.php。在正常值和反转值之间有一个非常长的时间间隔（40毫秒），某些红外接收器无法解码这种信号
有一个5位地址和一个8位命令。在扫描码中，地址位于第8到12位，命令位于第0到7位
xmp（RC_PROTO_XMP）
------------------

这个协议有多个版本，仅支持版本1。参见解码器（ir-xmp-decoder.c）以了解其编码方式
cec（RC_PROTO_CEC）
------------------

这并不是一种红外协议，而是一种通过CEC传输的协议。CEC基础设施使用rc-core来处理CEC命令，以便于重新映射。
### imon (RC_PROTO_IMON)

此协议用于Antec Veris/SoundGraph iMON遥控器。该协议描述了按键操作和指针移动。该协议编码31位，扫描码就是这31位，其中最高位始终为0。

### rc-mm-12 (RC_PROTO_RCMM12)

rc-mm协议的描述见：[https://www.sbprojects.net/knowledge/ir/rcmm.php](https://www.sbprojects.net/knowledge/ir/rcmm.php)。扫描码仅仅是这12位。

### rc-mm-24 (RC_PROTO_RCMM24)

rc-mm协议的描述见：[https://www.sbprojects.net/knowledge/ir/rcmm.php](https://www.sbprojects.net/knowledge/ir/rcmm.php)。扫描码仅仅是这24位。

### rc-mm-32 (RC_PROTO_RCMM32)

rc-mm协议的描述见：[https://www.sbprojects.net/knowledge/ir/rcmm.php](https://www.sbprojects.net/knowledge/ir/rcmm.php)。扫描码仅仅是这32位。

### xbox-dvd (RC_PROTO_XBOX_DVD)

此协议用于XBox DVD遥控器，该遥控器是为初代XBox设计的。内核中没有此协议的解码器或编码器。USB设备负责解码该协议。v4l-utils中有一个BPF解码器可用。
