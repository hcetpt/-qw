什么：/dev/fw[0-9]+  
日期：2007年5月  
内核版本：2.6.22  
联系人：linux1394-devel@lists.sourceforge.net  
描述：
    字符设备文件 /dev/fw* 是 firewire-core 与在用户空间实现的 IEEE 1394 设备驱动程序之间的接口。基于 ioctl(2) 和 read(2) 的 ABI 在 `<linux/firewire-cdev.h>` 中定义并进行了文档说明。
    此 ABI 提供了大部分 firewire-core 同样向内核空间 IEEE 1394 驱动程序暴露的功能。
    每个 /dev/fw* 与一个 IEEE 1394 节点相关联，该节点可以是远程节点或本地节点。对 /dev/fw* 文件的操作有不同的范围：

      - 与文件关联的 1394 节点：

          - 异步请求传输
          - 获取配置 ROM
          - 查询节点 ID
          - 查询此节点和本地节点之间路径的最大速度

      - 与此节点相连的 1394 总线（即“卡”）：

          - 等时流传输和接收
          - 异步流传输和接收
          - 异步广播请求传输
          - PHY 数据包传输和接收
          - 在总线的 IRM 处分配、重新分配、取消分配等时资源（通道、带宽）
          - 查询本地节点、根节点、IRM、总线管理器的节点 ID
          - 查询周期时间
          - 发起总线重置、接收总线重置事件

      - 所有 1394 总线：

          - 在本地链路层上分配 IEEE 1212 地址范围，接收发往此类地址范围的传入请求，异步响应传入请求
          - 将描述符或目录添加到本地节点的配置 ROM 中

    由于操作的不同范围以及为了让用户空间能够实施不同的访问权限模型，一些操作仅限于与本地节点关联的 /dev/fw* 文件：

          - 将描述符或目录添加到本地节点的配置 ROM 中
          - PHY 数据包传输和接收

    一个 /dev/fw* 文件在其整个生命周期中始终与特定节点相关联。总线拓扑更改以及因此导致的节点 ID 更改由 firewire-core 追踪。ABI 用户无需了解拓扑结构。
支持以下文件操作：

    open(2)
        目前唯一有用的标志是 O_RDWR
ioctl(2)
        触发各种操作。某些操作立即生效，而其他操作则在 ioctl 返回时或之后异步执行
参见 `<linux/firewire-cdev.h>` 中的内联文档以获取所有 ioctl 的描述
poll(2)，select(2)，epoll_wait(2) 等
监视可读事件的出现
read(2)
        接收各种事件。有应答事件，如外发异步事务完成或等时缓冲区完成；也有非应答事件，如总线重置、请求接收或 PHY 数据包接收。始终使用足够大的读取缓冲区来接收可能到达的最大事件。参见 `<linux/firewire-cdev.h>` 以获取所有事件类型及其对事件接收的影响的描述
mmap(2)
        为等时接收或传输分配 DMA 缓冲区，并将其映射到进程地址空间。参数应按如下方式使用：addr = NULL，length = 希望的缓冲区大小，即数据包数量乘以最大数据包的大小，prot = 对于接收至少需要 PROT_READ，对于传输至少需要 PROT_WRITE，flags = MAP_SHARED，fd = /dev/fw* 的句柄，offset = 0
等时接收以每包对应每缓冲区的方式工作，除了多通道接收以外，后者以填充缓冲区的模式工作。

`munmap(2)`  
从进程地址空间中取消映射等时I/O缓冲区。

`close(2)`  
除了停止并释放与文件描述符相关的I/O上下文之外，撤销对本地节点配置ROM所做的任何更改。在IRM上取消分配标记为内核辅助再分配和取消分配的等时通道和带宽。

用户：  
`libraw1394`;  
`libdc1394`;  
`libhinawa`;  
像`linux-firewire-utils`、`fwhack`等工具。
