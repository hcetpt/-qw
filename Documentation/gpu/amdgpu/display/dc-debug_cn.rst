显示核心调试工具
========================

DC 视觉确认
======================

显示核心提供了一项名为视觉确认的功能，该功能是在扫描输出时由驱动程序添加的一组条形，用于传达某些特定信息。通常，您可以通过以下命令启用此调试选项：

```
echo <N> > /sys/kernel/debug/dri/0/amdgpu_dm_visual_confirm
```

其中 `N` 是开发人员想要启用的特定场景下的整数。在接下来的小节中，您将看到一些调试案例。
多平面调试
---------------------

如果您希望在一个特定用户空间应用程序中启用或调试多个平面，可以利用一个名为视觉确认的调试功能。要启用它，您需要执行以下命令：

```
echo 1 > /sys/kernel/debug/dri/0/amdgpu_dm_visual_confirm
```

您需要重新加载GUI以查看视觉确认。当平面配置发生变化或进行完整更新时，每个硬件平面上方会出现一个彩色条：
* 颜色表示格式——例如，红色代表AR24，绿色代表NV12
* 条的高度表示平面的索引
* 如果有两个高度不同的条覆盖同一个平面，则可观察到管道分割

考虑视频播放的情况，在特定平面播放视频，而桌面绘制在另一个平面上。根据管道分割配置，视频平面上应该有一个或两个绿色条。
* 不应有任何视觉损坏
* 不应有任何欠流或屏幕闪烁
* 不应有任何黑屏
* 不应有任何光标损坏
* 在窗口过渡或调整大小期间，多个平面可能会短暂禁用，但在操作完成后应恢复

管道分割调试
----------------

有时我们需要调试DCN是否正确分割管道，此时视觉确认也很有用。类似于MPO的情况，您可以使用以下命令来启用视觉确认：

```
echo 1 > /sys/kernel/debug/dri/0/amdgpu_dm_visual_confirm
```

在这种情况下，如果有管道分割，您将在显示器底部看到一个小红条，覆盖整个显示器宽度，并且在第二个管道上还有一个条。换句话说，您会在第二个管道上看到一个稍微高一点的条。
DTN 调试
=========

DC（DCN）提供了详尽的日志，记录了我们硬件配置的多个细节。通过debugfs，您可以使用Display Test Next（DTN）日志捕获这些状态值，具体命令如下：

```
cat /sys/kernel/debug/dri/0/amdgpu_dm_dtn_log
```

由于此日志会随着DCN状态的变化而更新，因此您也可以使用类似命令实时跟踪变化：

```
sudo watch -d cat /sys/kernel/debug/dri/0/amdgpu_dm_dtn_log
```

在报告与DC相关的错误时，请考虑在重现错误前后附加此日志。
DMUB固件调试
===================

有时，dmesg日志不够用。这尤其适用于主要在DMUB固件中实现的功能。在这种情况下，当出现问题时，我们在dmesg中看到的只是一个通用的超时错误。因此，为了获取更多相关的信息，我们可以通过启用`amdgpu_dm_dmub_trace_mask`中的相关位来追踪DMUB命令。
目前，我们支持以下组的追踪：

追踪组
------------

.. csv-table::
   :header-rows: 1
   :widths: 1, 1
   :file: ./trace-groups-table.csv

**注意：并非所有ASIC都支持列出的所有追踪组**

因此，要仅启用PSR追踪，可以使用以下命令：

```
# echo 0x8020 > /sys/kernel/debug/dri/0/amdgpu_dm_dmub_trace_mask
```

然后，您需要启用将追踪事件记录到缓冲区，这可以通过以下命令完成：

```
# echo 1 > /sys/kernel/debug/dri/0/amdgpu_dm_dmcub_trace_event_en
```

最后，在您能够重现尝试调试的问题后，可以禁用追踪并读取追踪日志，具体命令如下：

```
# echo 0 > /sys/kernel/debug/dri/0/amdgpu_dm_dmcub_trace_event_en
# cat /sys/kernel/debug/dri/0/amdgpu_dm_dmub_tracebuffer
```

因此，在报告与PSR和ABM等功能相关的错误时，请考虑在重现问题之前启用掩码中的相关位，并在创建任何错误报告时附上从追踪缓冲区中获得的日志。
