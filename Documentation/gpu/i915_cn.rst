===========================
drm/i915 Intel GFX 驱动程序
===========================

drm/i915 驱动程序支持所有（除了某些非常早期的型号）集成 GFX 芯片组，包括 Intel 显示和渲染模块。这不包括带有 SGX 渲染单元的一系列 SoC 平台，这些平台通过 gma500 drm 驱动程序提供基本支持。
核心驱动程序基础设施
==========================

本节涵盖由显示部分和 GEM 部分使用的驱动程序核心基础设施。
运行时电源管理
------------------------

.. kernel-doc:: drivers/gpu/drm/i915/intel_runtime_pm.c
   :doc: 运行时电源管理

.. kernel-doc:: drivers/gpu/drm/i915/intel_runtime_pm.c
   :internal:

.. kernel-doc:: drivers/gpu/drm/i915/intel_uncore.c
   :internal:

中断处理
------------------

.. kernel-doc:: drivers/gpu/drm/i915/i915_irq.c
   :doc: 中断处理

.. kernel-doc:: drivers/gpu/drm/i915/i915_irq.c
   :functions: intel_irq_init intel_irq_init_hw intel_hpd_init

.. kernel-doc:: drivers/gpu/drm/i915/i915_irq.c
   :functions: intel_runtime_pm_disable_interrupts

.. kernel-doc:: drivers/gpu/drm/i915/i915_irq.c
   :functions: intel_runtime_pm_enable_interrupts

Intel GVT-g 客户端支持（vGPU）
-------------------------------

.. kernel-doc:: drivers/gpu/drm/i915/i915_vgpu.c
   :doc: Intel GVT-g 客户端支持

.. kernel-doc:: drivers/gpu/drm/i915/i915_vgpu.c
   :internal:

Intel GVT-g 主机支持（vGPU 设备模型）
-------------------------------------------

.. kernel-doc:: drivers/gpu/drm/i915/intel_gvt.c
   :doc: Intel GVT-g 主机支持

.. kernel-doc:: drivers/gpu/drm/i915/intel_gvt.c
   :internal:

变通方法
-----------

.. kernel-doc:: drivers/gpu/drm/i915/gt/intel_workarounds.c
   :doc: 硬件变通方法

显示硬件处理
=========================

本节涵盖与显示硬件相关的所有内容，包括模式设置基础设施、平面、精灵和光标处理以及显示输出探测等相关主题。
模式设置基础设施
---------------------------

i915 驱动程序是唯一一个没有使用通用 DRM 辅助代码来实现模式设置序列的 DRM 驱动程序。因此，它具有专门定制的基础设施来执行显示配置更改。
前缓冲跟踪
--------------------

.. kernel-doc:: drivers/gpu/drm/i915/display/intel_frontbuffer.c
   :doc: 前缓冲跟踪

.. kernel-doc:: drivers/gpu/drm/i915/display/intel_frontbuffer.h
   :internal:

.. kernel-doc:: drivers/gpu/drm/i915/display/intel_frontbuffer.c
   :internal:

显示 FIFO 欠载报告
-------------------------------

.. kernel-doc:: drivers/gpu/drm/i915/display/intel_fifo_underrun.c
   :doc: FIFO 欠载处理

.. kernel-doc:: drivers/gpu/drm/i915/display/intel_fifo_underrun.c
   :internal:

平面配置
-------------------

本节涵盖主平面、精灵、光标和覆盖层的平面配置和合成。这包括进行原子 vsync 更新所有这些状态的基础设施，还包括紧密相关的主题，如水印设置和计算、帧缓冲压缩和面板自刷新。
原子平面辅助函数
--------------------

.. kernel-doc:: drivers/gpu/drm/i915/display/intel_atomic_plane.c
   :doc: 原子平面辅助函数

.. kernel-doc:: drivers/gpu/drm/i915/display/intel_atomic_plane.c
   :internal:

异步页面翻转
----------------------

.. kernel-doc:: drivers/gpu/drm/i915/display/intel_display.c
   :doc: 异步翻转实现

输出探测
--------------

本节涵盖输出探测及其相关基础设施，例如热插拔中断风暴检测和缓解代码。请注意，i915 驱动程序仍然使用大多数通用 DRM 辅助代码来进行输出探测，因此这些部分完全适用。
热插拔
-------

.. kernel-doc:: drivers/gpu/drm/i915/display/intel_hotplug.c
   :doc: 热插拔

.. kernel-doc:: drivers/gpu/drm/i915/display/intel_hotplug.c
   :internal:

高清晰度音频
---------------------

.. kernel-doc:: drivers/gpu/drm/i915/display/intel_audio.c
   :doc: 通过 HDMI 和 Display Port 的高清晰度音频

.. kernel-doc:: drivers/gpu/drm/i915/display/intel_audio.c
   :internal:

.. kernel-doc:: include/drm/intel/i915_component.h
   :internal:

Intel HDMI LPE 音频支持
----------------------------

.. kernel-doc:: drivers/gpu/drm/i915/display/intel_lpe_audio.c
   :doc: 用于 HDMI 或 DP 播放的 LPE 音频集成

.. kernel-doc:: drivers/gpu/drm/i915/display/intel_lpe_audio.c
   :internal:

面板自刷新 PSR（PSR/SRD）
--------------------------------

.. kernel-doc:: drivers/gpu/drm/i915/display/intel_psr.c
   :doc: 面板自刷新（PSR/SRD）

.. kernel-doc:: drivers/gpu/drm/i915/display/intel_psr.c
   :internal:

帧缓冲压缩（FBC）
------------------------------

.. kernel-doc:: drivers/gpu/drm/i915/display/intel_fbc.c
   :doc: 帧缓冲压缩（FBC）

.. kernel-doc:: drivers/gpu/drm/i915/display/intel_fbc.c
   :internal:

显示刷新率切换（DRRS）
-------------------------------------

.. kernel-doc:: drivers/gpu/drm/i915/display/intel_drrs.c
   :doc: 显示刷新率切换（DRRS）

.. kernel-doc:: drivers/gpu/drm/i915/display/intel_drrs.c
   :internal:

DPIO
----

.. kernel-doc:: drivers/gpu/drm/i915/display/intel_dpio_phy.c
   :doc: DPIO

DMC 固件支持
--------------------

.. kernel-doc:: drivers/gpu/drm/i915/display/intel_dmc.c
   :doc: DMC 固件支持

.. kernel-doc:: drivers/gpu/drm/i915/display/intel_dmc.c
   :internal:

DMC 唤醒锁支持
--------------------

.. kernel-doc:: drivers/gpu/drm/i915/display/intel_dmc_wl.c
   :doc: DMC 唤醒锁支持

视频 BIOS 表（VBT）
----------------------

.. kernel-doc:: drivers/gpu/drm/i915/display/intel_bios.c
   :doc: 视频 BIOS 表（VBT）

.. kernel-doc:: drivers/gpu/drm/i915/display/intel_bios.c
   :internal:

.. kernel-doc:: drivers/gpu/drm/i915/display/intel_vbt_defs.h
   :internal:

显示时钟
--------------

.. kernel-doc:: drivers/gpu/drm/i915/display/intel_cdclk.c
   :doc: CDCLK / RAWCLK

.. kernel-doc:: drivers/gpu/drm/i915/display/intel_cdclk.c
   :internal:

显示 PLL
------------

.. kernel-doc:: drivers/gpu/drm/i915/display/intel_dpll_mgr.c
   :doc: 显示 PLL

.. kernel-doc:: drivers/gpu/drm/i915/display/intel_dpll_mgr.c
   :internal:

.. kernel-doc:: drivers/gpu/drm/i915/display/intel_dpll_mgr.h
   :internal:

显示状态缓冲区
--------------------

.. kernel-doc:: drivers/gpu/drm/i915/display/intel_dsb.c
   :doc: DSB

.. kernel-doc:: drivers/gpu/drm/i915/display/intel_dsb.c
   :internal:

GT 编程
==============

多播/复制（MCR）寄存器
------------------------------------

.. kernel-doc:: drivers/gpu/drm/i915/gt/intel_gt_mcr.c
   :doc: GT 多播/复制（MCR）寄存器支持

.. kernel-doc:: drivers/gpu/drm/i915/gt/intel_gt_mcr.c
   :internal:

内存管理和命令提交
========================================

本节涵盖与 i915 驱动程序中的 GEM 实现相关的所有内容。
Intel GPU 基础
----------------

Intel GPU 有多个引擎。有几种类型的引擎：

- Render Command Streamer（RCS）。用于渲染 3D 和执行计算的引擎
- Blitting Command Streamer（BCS）。用于执行复制操作的引擎
- Video Command Streamer。用于视频编码和解码的引擎。有时在硬件文档中也称为“BSD”
### 视频增强命令流引擎 (VECS)
一种用于视频增强的引擎。有时在硬件文档中也称为“VEBOX”。

### 计算命令流引擎 (CCS)
一种可以访问媒体和通用GPU（GPGPU）流水线但不能访问3D流水线的引擎。

### 图形安全控制器 (GSCCS)
一个专门用于与GSC控制器进行内部通信以处理与安全相关的任务（如高带宽数字内容保护(HDCP)、受保护的Xe路径(PXP)和HuC固件认证）的引擎。

Intel GPU家族是一系列使用统一内存访问（UMA）的集成GPU。为了使GPU执行工作，用户空间会通过ioctl命令`DRM_IOCTL_I915_GEM_EXECBUFFER2`或`DRM_IOCTL_I915_GEM_EXECBUFFER2_WR`向GPU提供批量缓冲区。大多数此类批量缓冲区会指示GPU执行工作（例如渲染），这些工作需要读取内存和写入内存。所有内存都封装在GEM缓冲对象中（通常通过ioctl命令`DRM_IOCTL_I915_GEM_CREATE`创建）。提供给GPU的批量缓冲区ioctl也会列出批量缓冲区读取和/或写入的所有GEM缓冲对象。有关内存管理的实现细节，请参见`GEM BO Management Implementation Details`_。

i915驱动程序允许用户空间通过ioctl命令`DRM_IOCTL_I915_GEM_CONTEXT_CREATE`创建上下文，该上下文由一个32位整数标识。这样的上下文应被视为类似于操作系统中的CPU进程的概念。i915驱动程序保证针对固定上下文发出的命令将按顺序执行，即先前发出的命令的写入会被后续命令的读取看到。不同上下文之间发出的操作（即使来自相同的文件描述符）不提供这种保证，并且跨上下文同步（即使来自相同的文件描述符）的唯一方法是通过使用围栏。至少从Gen4开始，每个上下文都携带一个GPU硬件上下文；硬件上下文基本上是GPU的状态。

除了顺序保证之外，内核还会在向上下文发出命令时通过硬件上下文恢复GPU状态，这使得用户空间无需在每个批量缓冲区开始时恢复（大部分）GPU状态。未废弃的提交批量缓冲区工作的ioctl可以通过drm_i915_gem_execbuffer2::rsvd1的低位传递该ID来标识要使用的上下文。

GPU有自己的内存管理和地址空间。内核驱动程序维护GPU的内存转换表。对于较旧的GPU（即Gen8之前的GPU），有一个全局的此类转换表，即全局图形转换表（GTT）。对于较新的GPU，每个上下文都有自己的转换表，称为每进程图形转换表（PPGTT）。值得注意的是，尽管PPGTT名为每进程，但实际上它是每上下文的。当用户空间提交批量缓冲区时，内核遍历批量缓冲区使用的GEM缓冲对象列表，并保证不仅每个GEM缓冲对象的内存是驻留的，而且它也在（PP）GTT中。如果GEM缓冲对象尚未放置在（PP）GTT中，则会为其分配一个地址。由此产生的两个后果是：内核需要编辑提交的批量缓冲区以在为GEM BO分配GPU地址时写入正确的GPU地址值，并且内核可能会将另一个GEM BO从（PP）GTT中驱逐出去以腾出地址空间。因此，提交批量缓冲区以执行的ioctl还包括所有引用GPU地址的缓冲区内位置列表，以便内核正确地编辑缓冲区。

此过程称为重定位。

### 锁定指南

------------------

.. 注意：
   这是重构完成后锁定应该如何的样子。不一定反映WIP期间的锁定情况。
#. 所有锁定规则和跨驱动接口的契约（dma-buf、dma_fence）都需要遵守。
#. 代码中任何地方都不能出现 `struct_mutex`。

#. `dma_resv` 将作为最外层锁（当需要时），并且 `ww_acquire_ctx` 需要提升到最高级别，并在 `i915_gem_ctx` 的调用链中传递下去。

#. 在持有 LRU/内存管理器（buddy、drm_mm 等）锁的情况下，不允许进行系统内存分配。

   * 通过使用 `fs_reclaim` 来强化这一规定。如果我们在这类锁被持有的情况下分配内存，就会重现 shrinker 和 `struct_mutex` 之间的冲突，这将是非常糟糕的情况。

#. 不要在彼此内部嵌套不同的 LRU/内存管理器锁。
   轮流更新内存分配，依赖对象的 `dma_resv` 读写互斥锁来序列化其他操作。

#. 对于 LRU/内存管理器锁的建议是它们足够小，可以使用自旋锁。

#. 所有功能都需要提供详尽的内核自测和/或适当的 IGT 测试。

#. 所有 LMEM 用户空间 API 路径必须完全可重启（_interruptible() 用于所有锁/等待/睡眠）。

   * 通过注入信号来验证错误处理。
     这仍然是验证 GEM 用户空间 API 边缘情况的最佳策略。
     必须在 IGT 中大量使用，并且我们需要检查是否确实对所有错误情况的路径进行了覆盖。
   * 使用 ww_mutex 处理 `-EDEADLK`。

### GEM BO 管理实现细节
----------------------------------------

.. kernel-doc:: drivers/gpu/drm/i915/i915_vma_types.h
   :doc: 虚拟内存地址

#### 缓冲对象驱逐
----------------------

本节记录了用于驱逐缓冲对象以腾出虚拟 GPU 地址空间的接口函数。请注意，这与缩小缓冲对象缓存主要是正交的，后者的目标是腾出主内存（通过统一内存架构与 GPU 共享）。
.. kernel-doc:: drivers/gpu/drm/i915/i915_gem_evict.c
   :internal:

#### 缓冲对象内存收缩
------------------------------

本节记录了用于缩小缓冲对象缓存内存使用的接口函数。收缩用于腾出主内存。请注意，这与驱逐缓冲对象主要是正交的，后者的目标是腾出 GPU 虚拟地址空间。
内核文档：`drivers/gpu/drm/i915/gem/i915_gem_shrinker.c`
   :internal:

批缓冲区解析
------------

.. 内核文档:: drivers/gpu/drm/i915/i915_cmd_parser.c
   :doc: 批缓冲区命令解析器

.. 内核文档:: drivers/gpu/drm/i915/i915_cmd_parser.c
   :internal:

用户批缓冲区执行
----------------

.. 内核文档:: drivers/gpu/drm/i915/gem/i915_gem_context_types.h

.. 内核文档:: drivers/gpu/drm/i915/gem/i915_gem_execbuffer.c
   :doc: 用户命令执行

调度
----

.. 内核文档:: drivers/gpu/drm/i915/i915_scheduler_types.h
   :functions: i915_sched_engine

逻辑环、逻辑环上下文和Execlists
--------------------------------

.. 内核文档:: drivers/gpu/drm/i915/gt/intel_execlists_submission.c
   :doc: 逻辑环、逻辑环上下文和Execlists

全局GTT视图
-----------

.. 内核文档:: drivers/gpu/drm/i915/i915_vma_types.h
   :doc: 全局GTT视图

.. 内核文档:: drivers/gpu/drm/i915/i915_gem_gtt.c
   :internal:

GTT围栏和交错
-------------

.. 内核文档:: drivers/gpu/drm/i915/gt/intel_ggtt_fencing.c
   :internal:

全局GTT围栏处理
~~~~~~~~~~~~~~~

.. 内核文档:: drivers/gpu/drm/i915/gt/intel_ggtt_fencing.c
   :doc: 围栏寄存器处理

硬件Tiling和交错细节
~~~~~~~~~~~~~~~~~~~~

.. 内核文档:: drivers/gpu/drm/i915/gt/intel_ggtt_fencing.c
   :doc: Tiling交错细节

对象Tiling IOCTLs
----------------

.. 内核文档:: drivers/gpu/drm/i915/gem/i915_gem_tiling.c
   :internal:

.. 内核文档:: drivers/gpu/drm/i915/gem/i915_gem_tiling.c
   :doc: 缓冲对象Tiling

受保护的对象
------------

.. 内核文档:: drivers/gpu/drm/i915/pxp/intel_pxp.c
   :doc: PXP

.. 内核文档:: drivers/gpu/drm/i915/pxp/intel_pxp_types.h

微控制器
=========

从Gen9开始，硬件上可用三个微控制器：图形微控制器（GuC）、HEVC/H.265微控制器（HuC）和显示微控制器（DMC）。驱动程序负责将固件加载到微控制器上；GuC和HuC的固件通过DMA引擎传输到WOPCM，而DMC的固件则通过MMIO写入。

WOPCM
-----

WOPCM布局
~~~~~~~~~

.. 内核文档:: drivers/gpu/drm/i915/gt/intel_wopcm.c
   :doc: WOPCM布局

GuC
---

.. 内核文档:: drivers/gpu/drm/i915/gt/uc/intel_guc.c
   :doc: GuC

.. 内核文档:: drivers/gpu/drm/i915/gt/uc/intel_guc.h

GuC固件布局
~~~~~~~~~~~~

.. 内核文档:: drivers/gpu/drm/i915/gt/uc/intel_uc_fw_abi.h
   :doc: 固件布局

GuC内存管理
~~~~~~~~~~~~

.. 内核文档:: drivers/gpu/drm/i915/gt/uc/intel_guc.c
   :doc: GuC内存管理

.. 内核文档:: drivers/gpu/drm/i915/gt/uc/intel_guc.c
   :functions: intel_guc_allocate_vma

GuC专用固件加载器
~~~~~~~~~~~~~~~~~~

.. 内核文档:: drivers/gpu/drm/i915/gt/uc/intel_guc_fw.c
   :internal:

基于GuC的命令提交
~~~~~~~~~~~~~~~~~~

.. 内核文档:: drivers/gpu/drm/i915/gt/uc/intel_guc_submission.c
   :doc: 基于GuC的命令提交

GuC ABI
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. 内核文档:: drivers/gpu/drm/i915/gt/uc/abi/guc_messages_abi.h
.. 内核文档:: drivers/gpu/drm/i915/gt/uc/abi/guc_communication_mmio_abi.h
.. 内核文档:: drivers/gpu/drm/i915/gt/uc/abi/guc_communication_ctb_abi.h
.. 内核文档:: drivers/gpu/drm/i915/gt/uc/abi/guc_actions_abi.h
.. 内核文档:: drivers/gpu/drm/i915/gt/uc/abi/guc_klvs_abi.h

HuC
---

.. 内核文档:: drivers/gpu/drm/i915/gt/uc/intel_huc.c
   :doc: HuC

.. 内核文档:: drivers/gpu/drm/i915/gt/uc/intel_huc.c
   :functions: intel_huc_auth

HuC内存管理
~~~~~~~~~~~~

.. 内核文档:: drivers/gpu/drm/i915/gt/uc/intel_huc.c
   :doc: HuC内存管理

HuC固件布局
~~~~~~~~~~~~

HuC固件布局与GuC相同，请参见`GuC固件布局`_

DMC
---

请参见`DMC固件支持`_

跟踪
=====

本节涵盖i915驱动程序中实现的所有跟踪点相关内容。
i915_ppgtt_create 和 i915_ppgtt_release
----------------------------------------

.. 内核文档:: drivers/gpu/drm/i915/i915_trace.h
   :doc: i915_ppgtt_create 和 i915_ppgtt_release 跟踪点

i915_context_create 和 i915_context_free
-----------------------------------------

.. 内核文档:: drivers/gpu/drm/i915/i915_trace.h
   :doc: i915_context_create 和 i915_context_free 跟踪点

性能
====

概述
-----
.. 内核文档:: drivers/gpu/drm/i915/i915_perf.c
   :doc: i915性能概述

与核心性能的比较
----------------
.. 内核文档:: drivers/gpu/drm/i915/i915_perf.c
   :doc: i915性能历史与核心性能的比较

i915驱动程序入口点
------------------
本节涵盖i915_perf.c之外导出的入口点，以便与drm/i915集成并处理`DRM_I915_PERF_OPEN` IOCTL
.. 内核文档:: drivers/gpu/drm/i915/i915_perf.c
   :functions: i915_perf_init
.. 内核文档:: drivers/gpu/drm/i915/i915_perf.c
   :functions: i915_perf_fini
.. 内核文档:: drivers/gpu/drm/i915/i915_perf.c
   :functions: i915_perf_register
.. 内核文档:: drivers/gpu/drm/i915/i915_perf.c
   :functions: i915_perf_unregister
.. 内核文档:: drivers/gpu/drm/i915/i915_perf.c
   :functions: i915_perf_open_ioctl
.. 内核文档:: drivers/gpu/drm/i915/i915_perf.c
   :functions: i915_perf_release
.. 内核文档:: drivers/gpu/drm/i915/i915_perf.c
   :functions: i915_perf_add_config_ioctl
.. 内核文档:: drivers/gpu/drm/i915/i915_perf.c
   :functions: i915_perf_remove_config_ioctl

i915性能流
----------

本节涵盖了表示i915性能流FD及其相关文件操作的与流语义无关的结构和函数
.. 内核文档:: drivers/gpu/drm/i915/i915_perf_types.h
   :functions: i915_perf_stream
.. 内核文档:: drivers/gpu/drm/i915/i915_perf_types.h
   :functions: i915_perf_stream_ops

.. 内核文档:: drivers/gpu/drm/i915/i915_perf.c
   :functions: read_properties_unlocked
.. 内核文档:: drivers/gpu/drm/i915/i915_perf.c
   :functions: i915_perf_open_ioctl_locked
.. 内核文档:: drivers/gpu/drm/i915/i915_perf.c
   :functions: i915_perf_destroy_locked
.. 内核文档:: drivers/gpu/drm/i915/i915_perf.c
   :functions: i915_perf_read
.. 内核文档:: drivers/gpu/drm/i915/i915_perf.c
   :functions: i915_perf_ioctl
.. 内核文档:: drivers/gpu/drm/i915/i915_perf.c
   :functions: i915_perf_enable_locked
.. 内核文档:: drivers/gpu/drm/i915/i915_perf.c
   :functions: i915_perf_disable_locked
.. 内核文档:: drivers/gpu/drm/i915/i915_perf.c
   :functions: i915_perf_poll
.. 内核文档:: drivers/gpu/drm/i915/i915_perf.c
   :functions: i915_perf_poll_locked

i915性能观察架构流
-------------------

.. 内核文档:: drivers/gpu/drm/i915/i915_perf_types.h
   :functions: i915_oa_ops

.. 内核文档:: drivers/gpu/drm/i915/i915_perf.c
   :functions: i915_oa_stream_init
.. 内核文档:: drivers/gpu/drm/i915/i915_perf.c
   :functions: i915_oa_read
.. 内核文档:: drivers/gpu/drm/i915/i915_perf.c
   :functions: i915_oa_stream_enable
.. 内核文档:: drivers/gpu/drm/i915/i915_perf.c
   :functions: i915_oa_stream_disable
.. 内核文档:: drivers/gpu/drm/i915/i915_perf.c
   :functions: i915_oa_wait_unlocked
.. 内核文档:: drivers/gpu/drm/i915/i915_perf.c
   :functions: i915_oa_poll_wait

其他i915性能内部
----------------

本节仅包括所有其他当前已记录的i915性能内部，顺序不定，但可能包含一些更次要的工具或平台特定的细节，而不是在更高层次的部分中找到
.. 内核文档:: drivers/gpu/drm/i915/i915_perf.c
   :internal:
   :no-identifiers:
       i915_perf_init
       i915_perf_fini
       i915_perf_register
       i915_perf_unregister
       i915_perf_open_ioctl
       i915_perf_release
       i915_perf_add_config_ioctl
       i915_perf_remove_config_ioctl
       read_properties_unlocked
       i915_perf_open_ioctl_locked
       i915_perf_destroy_locked
       i915_perf_read i915_perf_ioctl
       i915_perf_enable_locked
       i915_perf_disable_locked
       i915_perf_poll i915_perf_poll_locked
       i915_oa_stream_init i915_oa_read
       i915_oa_stream_enable
       i915_oa_stream_disable
       i915_oa_wait_unlocked
       i915_oa_poll_wait

风格
=====

drm/i915驱动代码库有一些风格规则，这些规则补充了（在某些情况下偏离了）内核编码风格。
寄存器宏定义风格
----------------

``i915_reg.h``的风格指南
.. 内核文档:: drivers/gpu/drm/i915/i915_reg.h
   :doc: i915寄存器宏定义风格指南

.. _i915-usage-stats:

i915 DRM客户端使用统计实现
==========================

drm/i915驱动实现了DRM客户端使用统计规范，如:ref:`drm-client-usage-stats`所述。
示例输出，显示实现的关键值对和目前可能的格式选项：

::

      pos:    0
      flags:  0100002
      mnt_id: 21
      drm-driver: i915
      drm-pdev:   0000:00:02.0
      drm-client-id:      7
      drm-engine-render:  9288864723 ns
      drm-engine-copy:    2035071108 ns
      drm-engine-video:   0 ns
      drm-engine-capacity-video:   2
      drm-engine-video-enhance:   0 ns

可能的`drm-engine-`键名称是：`render`，`copy`，`video`和`video-enhance`。
