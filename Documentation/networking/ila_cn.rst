### SPDX 许可证标识符：GPL-2.0

===================================
标识定位寻址 (ILA)
===================================

#### 引言
标识定位寻址 (ILA) 是一种与 IPv6 结合使用的技巧，它区分了网络节点的位置和身份。地址的一部分表示节点的不可变身份，而另一部分则指示节点的位置，这部分可以是动态变化的。标识定位寻址可以高效地实现覆盖网络以用于网络虚拟化，也可用于移动性场景中的解决方案。ILA 可以被视为无需封装即可实现覆盖网络的一种方法。这通过在网络中传输数据包时对目标地址进行网络地址转换来实现。对于网络而言，经过 ILA 转换的数据包看起来与其他任何 IPv6 数据包并无不同。例如，如果传输协议为 TCP，则经过 ILA 转换的数据包看起来就像另一个普通的 TCP/IPv6 数据包。这种方法的优势在于 ILA 对网络是透明的，因此网络中的优化（如 ECMP、RSS、GRO、GSO 等）可以正常工作。
ILA 协议在互联网草案 draft-herbert-intarea-ila 中进行了描述。

#### ILA 术语

- **标识**
    - 一个独立于其位置的网络可寻址节点的身份编号。ILA 标识是 64 位值。
- **定位**
    - 一个路由到物理主机的网络前缀。定位提供了被寻址节点的拓扑位置。ILA 定位是 64 位前缀。
- **ILA 映射**
    - 从 ILA 标识到定位的映射（或到定位和元数据）。ILA 域维护一个包含域内所有目的地映射的数据库。
- **SIR 地址**
    - 由 SIR 前缀（上 64 位）和标识（下 64 位）组成的 IPv6 地址。SIR 地址对应用程序可见，并为它们提供了一种独立于节点位置对其进行寻址的方式。
- **ILA 地址**
    - 由定位（上 64 位）和标识（下 64 位）组成的 IPv6 地址。ILA 地址永远不会对应用程序可见。
- **ILA 主机**
    - 能够在发送或接收时执行 ILA 转换的终端主机。
### ILA路由器
一种执行ILA转换和转发已转换数据包的网络节点。
### ILA转发缓存
一种仅维护工作集映射缓存类型的ILA路由器。
### ILA节点
能够执行ILA转换的网络节点。这可以是ILA路由器、ILA转发缓存或ILA主机。

### 操作
####

ILA有两个基本操作：

- 将SIR地址转换为ILA地址。这在进入ILA覆盖网络时执行。
- 将ILA地址转换为SIR地址。这在退出ILA覆盖网络时执行。

ILA可以在终端主机或网络中的中间设备上部署；这些分别由“ILA主机”和“ILA路由器”提供。
这两种部署点的配置和数据路径有所不同。

下图说明了通过ILA的数据包流动过程，同时也展示了ILA主机和路由器：

```
    +--------+                                                +--------+
    | Host A +-+                                         +--->| Host B |
    |        | |              (2) ILA                   (')   |        |
    +--------+ |            ...addressed....           (   )  +--------+
	       V  +---+--+  .  packet      .  +---+--+  (_)
   (1) SIR     |  | ILA  |----->-------->---->| ILA  |   |   (3) SIR
    addressed  +->|router|  .              .  |router|->-+    addressed
    packet        +---+--+  .     IPv6     .  +---+--+        packet
		   /        .    Network
/         .              .   +--+-++--------+
    +--------+   /          .              .   |ILA ||  Host  |
    |  Host  +--+           .              .- -|host||        |
    |        |              .              .   +--+-++--------+
    +--------+              ...............
```

### 传输校验和处理
####

当ILA进行地址转换时，包含已转换地址的伪头部中的封装传输校验和可能在网络中变得不正确。这对于中间设备（包括NIC中的校验和卸载）来说是个问题，因为它们需要处理校验和。有三种方式来应对这一问题：

- 不采取行动：允许校验和在网络中不正确。在接收端验证校验和之前必须完成从ILA到SIR的地址转换。
- 调整传输校验和
    当执行ILA转换时，数据包会被解析，并且如果发现传输层的校验和，则会进行调整以反映根据转换后的地址所计算出的正确校验和。
- 校验和中性映射
    当一个地址被转换时，差异可以在数据包的其他部分被抵消，这部分由校验和覆盖。标识符的低阶十六位被使用。这种方法更受青睐，因为它不需要对数据包进行超出IP头以外的解析，在大多数情况下，调整可以预先计算并保存在映射中。
请注意，校验和中性的调整影响的是标识符的低阶十六位。当对ILA到SIR地址转换进行出站处理时，低阶位将恢复为原始值，从而使得标识符恢复为其最初发送的状态。

标识符类型
===========
ILA定义了不同类型的标识符以适应不同的应用场景：
  
      0: 接口标识符

      1: 本地唯一标识符

      2: 用于IPv4地址的虚拟网络标识符

      3: 用于IPv6单播地址的虚拟网络标识符

      4: 用于IPv6组播地址的虚拟网络标识符

      5: 非本地地址标识符

在当前内核ILA实现中，仅支持本地唯一标识符（LUID）。LUID允许使用通用的、未格式化的64位标识符。
标识符格式
===========
内核ILA支持在标识符中的两个可选字段：“C位”和“标识符类型”。这些字段的存在与否由配置决定，如下所示：
如果存在标识符类型字段，它占据标识符的三个最高位。可能的值已在上面列出。
如果存在C位，这被用作指示已经应用了校验和中性映射的标志。C位只能在ILA地址中设置，而不能在SIR地址中设置。
在最简单的格式下，标识符类型、C位以及校验和调整值不存在，因此标识符被视为一个未结构化的六十四位值：

     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                            Identifier                         |
     +                                                               +
     |                                                               |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

校验和中性调整可以通过配置为always present（neutral-map-auto）来始终存在。在这种情况下没有C位，但校验和调整位于低阶16位。标识符仍然是六十四位：

     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                            Identifier                         |
     |                               +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                               |  Checksum-neutral adjustment  |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

C位可以用来明确指示已将校验和中性映射应用于ILA地址。其格式如下：

     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |     |C|                    Identifier                         |
     |     +-+                       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                               |  Checksum-neutral adjustment  |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

标识符类型字段可能存在以指示标识符的类型。如果不存在，则类型基于映射配置推断。校验和中性调整可以自动与标识符类型一起使用，如下面的示例所示：

     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     | Type|                      Identifier                         |
     +-+-+-+                         +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                               |  Checksum-neutral adjustment  |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

标识符类型和C位可以同时存在，因此标识符格式将是：

     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     | Type|C|                    Identifier                         |
     +-+-+-+-+                       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                               |  Checksum-neutral adjustment  |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

配置
=====
ILA映射有两种配置方法。一种是使用LWT路由，另一种是通过NFHOOK PREROUTING钩子调用ila_xlat。ila_xlat旨在用于ILA主机的接收路径。
ILA路由器也在XDP中实现。该文档不包含对此的描述。
ILA LWT 路由的使用方法为：

```
ip route add DEST/128 encap ila LOC csum-mode MODE ident-type TYPE via ADDR
```

目的地（DEST）可以是 SIR 地址（用于 ILA 主机或入口 ILA 路由器），也可以是 ILA 地址（出口 ILA 路由器）。LOC 是覆盖目标地址高 64 位的 64 位定位器（格式为 W:X:Y:Z）。校验和模式（MODE）可以是 "no-action"、"adj-transport"、"neutral-map" 和 "neutral-map-auto"。如果设置为 neutral-map，则将存在 C 位。标识符类型（TYPE）可以是 "luid" 或 "use-format"。在 use-format 的情况下，标识符类型字段存在，并从该字段中获取有效的类型。

ila_xlat 的使用方法为：

```
ip ila add loc_match MATCH loc LOC csum-mode MODE ident-type TYPE
```

MATCH 表示必须匹配的应用转换的传入定位器。LOC 是覆盖目标地址高 64 位的定位器。MODE 和 TYPE 的含义与上述相同。

以下是一些示例：

```
# 配置一个使用校验和中立映射以及类型字段的 ILA 路由。注意类型字段设置在 SIR 地址中
# （2000 暗示类型为 1，即 LUID）
ip route add 3333:0:0:1:2000:0:1:87/128 encap ila 2001:0:87:0 \
	csum-mode neutral-map ident-type use-format

# 配置一个使用自动校验和中立映射（无 C 位）且配置标识符类型为 LUID 的 ILA LWT 路由，
# 这样标识符类型字段就不会出现
ip route add 3333:0:0:1:2000:0:2:87/128 encap ila 2001:0:87:1 \
	csum-mode neutral-map-auto ident-type luid

# ila_xlat 配置

# 配置一个匹配定位器并用 SIR 地址覆盖它的 ILA 到 SIR 映射（本例中为 3333:0:0:1）。
# 使用 C 位和标识符字段
ip ila add loc_match 2001:0:119:0 loc 3333:0:0:1 \
	csum-mode neutral-map-auto ident-type use-format

# 配置一个 ILA 到 SIR 映射，其中校验和中立自动设置，不包含 C 位，且配置标识符类型为 LUID，
# 这样标识符类型字段就不会出现
ip ila add loc_match 2001:0:119:0 loc 3333:0:0:1 \
	csum-mode neutral-map-auto ident-type luid
```
