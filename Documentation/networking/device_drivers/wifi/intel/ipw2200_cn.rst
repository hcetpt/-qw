.. SPDX 许可证标识符: GPL-2.0
.. include:: <isonum.txt>

==============================================
Intel(R) PRO/Wireless 2915ABG Linux 驱动程序
==============================================

支持：

- Intel(R) PRO/Wireless 2200BG 网络连接
- Intel(R) PRO/Wireless 2915ABG 网络连接

注意：Intel(R) PRO/Wireless 2915ABG Linux 驱动程序和 Intel(R) PRO/Wireless 2200BG Linux 驱动程序是一个统一的驱动程序，适用于上述两种硬件适配器。在本文档中，将使用 Intel(R) PRO/Wireless 2915ABG Linux 驱动程序来指代统一驱动程序。
版权所有 |copy| 2004-2006, Intel Corporation

README.ipw2200

:版本: 1.1.2
:日期: 2006年3月30日

.. 目录

    0. 使用此驱动程序前的重要信息
    1. 引言
    1.1. 功能概述
    1.2. 模块参数
    1.3. 无线扩展私有方法
    1.4. Sysfs 辅助文件
    1.5. 支持的频道
    2. 自组网络（Ad-Hoc Networking）
    3. 与无线工具交互
    3.1. iwconfig 模式
    3.2. iwconfig 敏感度
    4. 关于版本号
    5. 固件安装
    6. 支持
    7. 许可证

0. 使用此驱动程序前的重要信息
=================================================

所有用户或分发者的重要通知!!!!

Intel 无线局域网适配器经过设计、制造、测试和质量检查，以确保它们符合指定和/或标记为进入地区的所有必要的本地和政府监管机构要求。由于无线局域网通常是无需许可的设备，并且与其他雷达、卫星和其他已许可和未许可的设备共享频谱，因此有时需要动态检测、避免和限制使用以避免干扰这些设备。在许多情况下，Intel 必须提供测试数据以证明区域和本地合规性，才能获得认证或许可使用该产品。Intel 的无线局域网 EEPROM、固件和软件驱动程序旨在仔细控制影响无线电操作的参数，并确保电磁兼容性（EMC）。这些参数包括但不限于射频功率、频谱使用、频道扫描和人体暴露。
出于这些原因，Intel 不允许第三方以任何形式对随无线局域网适配器提供的二进制格式软件（例如，EEPROM 和固件）进行任何修改。此外，如果您使用了任何未经授权方修改过的补丁、实用程序或代码（包括未经 Intel 验证的开源代码修改），(i) 您将全权负责确保产品的法规合规性，(ii) Intel 在任何责任理论下对修改后产品相关的任何问题概不负责，包括但不限于保修索赔和因法规不合规引起的问题，以及 (iii) Intel 不会提供或被要求协助提供针对此类修改产品的支持。
注意：许多监管机构认为无线局域网适配器是模块，因此，系统级法规批准取决于接收和审查测试数据，证明天线和系统配置不会导致 EMC 和无线电操作不符合规定。
从 SourceForge 下载的驱动程序是作为开发项目的一部分提供的。符合本地法规要求是个人开发者的责任。因此，如果您有兴趣部署或发布作为解决方案一部分的驱动程序，该解决方案旨在用于除开发以外的目的，请从 Intel 客户支持获取经过测试的驱动程序：

http://support.intel.com

1. 引言
===============

以下部分试图提供使用 Intel(R) PRO/Wireless 2915ABG Linux 驱动程序的简要介绍。
本文档不是理解或使用无线技术的综合手册，但应该足以让您在 Linux 上无线上网。
有关构建和安装驱动程序的信息，请参阅 INSTALL 文件。
1.1. 功能概述
-------------------------
当前版本（1.1.2）支持以下功能：

+ BSS 模式（基础设施模式，管理）
+ IBSS 模式（自组网络）
+ WEP（开放密钥模式和共享密钥模式）
+ 通过 wpa_supplicant 和 xsupplicant 实现的 802.1x EAP
+ 无线扩展支持
+ 全面支持 B 和 G 速率（2200 和 2915）
+ 全面支持 A 速率（仅限 2915）
+ 发送功率控制
+ S 状态支持（ACPI 暂停/恢复）

以下功能目前已被启用，但尚未正式支持：

+ WPA
+ 长/短前导支持
+ 监视模式（又称 RFMon）

正式支持和启用的区别在于给定功能上执行的验证和互操作性测试的数量。
1.2. 命令行参数
------------------------

与许多用于 Linux 内核的模块一样，Intel(R) PRO/Wireless 2915ABG Linux 驱动程序允许作为模块参数提供配置选项。最常见的指定模块参数的方式是通过命令行。
一般形式如下：

    % modprobe ipw2200 parameter=value

其中支持的参数为：

  associate
  设置为 0 以禁用驱动程序的自动扫描并关联功能。如果禁用，则驱动程序不会尝试扫描并关联到网络，直到它被配置为目标网络的一个或多个属性，例如配置网络 SSID。默认值为 0（不自动关联）。

  示例：% modprobe ipw2200 associate=0

  auto_create
  设置为 0 以禁用自动创建与提供的频道和网络名称参数匹配的自组网络
默认值为1
channel  
	用于关联的信道号。通常设置信道的方法是使用标准的无线工具（例如`iwconfig eth1 channel 10`），但在调试时有时会用到此选项。信道0表示‘任意’。

debug  
	如果使用的是调试版本，这可以用来控制记录的调试信息量。有关如何使用此选项，请参阅'dvals'和'load'脚本（这些脚本包含在从SourceForge项目http://ipw2200.sf.net提供的ipw2200开发快照版本中）。

led  
	可用于开启实验性的LED代码  
0 = 关闭，1 = 开启，默认值为1  
mode  
	可用于设置适配器的默认模式  
0 = 管理模式，1 = 自组网模式，2 = 监控模式

1.3. 无线扩展私有方法
---------------------------------------

作为一个设计用于处理通用硬件的接口，有些功能无法通过标准无线工具接口暴露出来。因此，提供了一种机制让驱动程序声明自定义或私有的方法。Intel(R) PRO/Wireless 2915ABG Linux驱动定义了若干这样的方法来配置各种设置。
使用私有无线方法的一般形式如下：

	% iwpriv $IFNAME 方法 参数

其中$IFNAME是设备注册的接口名称（通常是eth1，可以通过各种网络接口命名管理器如ifrename进行定制）。

支持的私有方法包括：

  get_mode  
	可用于报告驱动程序配置支持的IEEE模式。例如：

	% iwpriv eth1 get_mode
	eth1	get_mode:802.11bg (6)

  set_mode  
	可用于配置驱动程序将要支持的IEEE模式
使用方法如下：

	% iwpriv eth1 set_mode {mode}

其中{mode}是一个1-7之间的数字：

	==	=====================
	1	802.11a（仅限2915）
	2	802.11b
	3	802.11ab（仅限2915）
	4	802.11g
	5	802.11ag（仅限2915）
	6	802.11bg
	7	802.11abg（仅限2915）
	==	=====================

  get_preamble  
	可用于报告前导码长度的配置情况
set_preamble  
	可用于设置前导码长度的配置：

使用方法如下：

	% iwpriv eth1 set_preamble {mode}

其中{mode}可以是：

	==	========================================
	1	仅长前导码
	0	自动（根据连接选择长或短前导码）
	==	========================================

1.4. Sysfs辅助文件
-----------------------

Linux内核提供了一个伪文件系统，可以用来访问操作系统中的各种组件。Intel(R) PRO/Wireless 2915ABG Linux驱动通过此机制暴露了一些配置参数。
Sysfs中的一个条目可以支持读取和/或写入。通常可以通过cat命令查询sysfs条目的内容，并且可以通过echo命令设置内容。例如：

    % cat /sys/bus/pci/drivers/ipw2200/debug_level

将报告驱动日志子系统的当前调试级别（只有在编译驱动时配置了CONFIG_IPW2200_DEBUG时才可用）。
你可以通过以下命令设置调试级别：

    % echo $VALUE > /sys/bus/pci/drivers/ipw2200/debug_level

其中$VALUE在此sysfs条目中应为一个数字。输入给sysfs文件的内容不一定是数字。例如，热插拔使用的固件加载器利用sysfs条目将固件图像从用户空间传输到驱动程序中。
Intel® PRO/Wireless 2915ABG 驱动程序为 Linux 暴露了两个级别的 sysfs 条目 —— 驱动级别，适用于所有驱动实例（如果有多个设备安装），以及设备级别，仅适用于单个特定实例。

### 1.4.1 驱动级别 Sysfs 辅助文件
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

对于驱动级别的文件，请查看 `/sys/bus/pci/drivers/ipw2200/`

- `debug_level`
  - 这控制与模块参数 `debug` 相同的全局变量。

### 1.4.2 设备级别 Sysfs 辅助文件
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

对于设备级别的文件，请查看如下路径：
```
/sys/bus/pci/drivers/ipw2200/{PCI-ID}/
```

例如：
```
/sys/bus/pci/drivers/ipw2200/0000:02:01.0
```

对于设备级别的文件，请参阅 `/sys/bus/pci/drivers/ipw2200/`：

- `rf_kill`
  - **读取** -
    ```
    ==  =========================================
    0   RF 杀死未启用（无线开启）
    1   基于软件的 RF 杀死激活（无线关闭）
    2   基于硬件的 RF 杀死激活（无线关闭）
    3   基于硬件和软件的 RF 杀死均激活（无线关闭）
    ==  =========================================
    ```
  - **写入** -
    ```
    ==  ==================================================
    0   如果基于软件的 RF 杀死已激活，则重新开启无线
    1   如果无线已开启，则激活基于软件的 RF 杀死
    ==  ==================================================
    ```
    .. note::
       如果您启用了基于软件的 RF 杀死，然后切换基于硬件的 RF 杀死从开启到关闭再到开启，无线将不会重新开启。

- `ucode`
  - 只读访问 ucode 版本号。

- `led`
  - **读取** -
    ```
    ==  =================
    0   LED 代码禁用
    1   LED 代码启用
    ==  =================
    ```
  - **写入** -
    ```
    ==  ================
    0   禁用 LED 代码
    1   启用 LED 代码
    ==  ================
    ```
    .. note::
       据报告，在运行 ifconfig 时 LED 代码会导致某些系统挂起，因此默认情况下是禁用的。

### 1.5 支持的频道
-----------------------

加载 Intel® PRO/Wireless 2915ABG 驱动程序后，日志中会显示一条消息，说明检测到的地理编码以及卡支持的 802.11 频道数量。地理编码对应于下表所示的法规域。
```
+------+----------------------------+--------------------+
|      |                            | 支持的频道       |
| 代码 | 地理位置                   +----------+---------+
|      |                            | 802.11bg | 802.11a |
+======+============================+==========+=========+
| ---  | 受限                      |  11      |   0     |
+------+----------------------------+----------+---------+
| ZZF  | 定制美国/加拿大            |  11      |   8     |
+------+----------------------------+----------+---------+
| ZZD  | 其他地区                   |  13      |   0     |
+------+----------------------------+----------+---------+
| ZZA  | 定制美国、欧洲及高带宽区    |  11      |  13     |
+------+----------------------------+----------+---------+
| ZZB  | 定制北美和欧洲             |  11      |  13     |
+------+----------------------------+----------+---------+
| ZZC  | 定制日本                   |  11      |   4     |
+------+----------------------------+----------+---------+
| ZZM  | 定制                      |  11      |   0     |
+------+----------------------------+----------+---------+
| ZZE  | 欧洲                      |  13      |  19     |
+------+----------------------------+----------+---------+
| ZZJ  | 定制日本                   |  14      |   4     |
+------+----------------------------+----------+---------+
| ZZR  | 其他地区                   |  14      |   0     |
+------+----------------------------+----------+---------+
| ZZH  | 高带宽区                  |  13      |   4     |
+------+----------------------------+----------+---------+
| ZZG  | 定制欧洲                  |  13      |   4     |
+------+----------------------------+----------+---------+
| ZZK  | 欧洲                      |  13      |  24     |
+------+----------------------------+----------+---------+
| ZZL  | 欧洲                      |  11      |  13     |
+------+----------------------------+----------+---------+
```

### 2. 自组网络
=====================

在自组网络中使用设备时，了解驱动程序创建、加入或合并网络的顺序和要求是有帮助的。以下信息旨在提供足够的信息，以便您在使用驱动程序作为自组网络成员时获得一致的体验。

#### 2.1 加入自组网络
------------------------------

加入一个已存在的自组网络是最简单的方式。

#### 2.2 创建自组网络
-------------------------------

使用无线工具的语法来创建自组网络。例如：
```
iwconfig eth1 mode ad-hoc essid testing channel 2
```

#### 2.3 合并自组网络
------------------------------

### 3. 与无线工具的交互
==================================

#### 3.1 iwconfig mode
-----------------

当配置适配器模式时，所有运行时配置的参数将重置为模块加载时使用的值。这包括频道、速率、ESSID 等。

#### 3.2 iwconfig sens
-----------------

命令 `iwconfig ethX sens XX` 不会设置信号灵敏度阈值，如 iwconfig 文档所述，而是设置连续丢失信标导致切换（即漫游到另一个接入点）的数量。同时，它还会将断开连接阈值设置为给定值的三倍。
4. 关于版本号
=============================

由于开源开发项目的特性，经常会有未经过完整验证的更改被纳入。这些更改会包含在开发快照版本中。
版本号采用三级方案：

主版本号.次版本号.开发版本号

任何“开发版本号”为0的版本（例如1.0.0、1.1.0等）表示一个稳定的版本，将可用于内核集成。
任何“开发版本号”不为0的版本（例如1.0.1、1.1.5等）表示一个开发版本，提供给测试和追求前沿技术的用户使用。开发版本的稳定性和功能未知。我们尽力保持所有快照版本的稳定性，但由于其发布频率高且希望尽快发布，因此可能存在未知的问题。
当驱动程序有重大更改时，主版本号将会递增。目前没有计划进行重大更改。

5. 固件安装
========================

该驱动程序需要一个固件映像，请下载并解压缩文件到/lib/firmware（或您的hotplug的firmware.agent查找固件文件的位置）。

固件可以从以下URL下载：

    http://ipw2200.sf.net/

6. 支持
==========

对于1.0.0版本的直接支持，您可以联系：
http://supportmail.intel.com，或者使用开源项目支持。
获取一般信息和支持，请访问：

    http://ipw2200.sf.net/

7. 许可证
==========

  版权 © 2003 - 2006 Intel Corporation。保留所有权利。
本程序是自由软件；您可以在GNU通用公共许可证第2版（由自由软件基金会发布）下重新分发或修改它。
本程序按“原样”提供，不附带任何形式的保证，包括但不限于适销性或适合特定目的的隐含保证。详情请参阅GNU通用公共许可证。
本程序应随附GNU通用公共许可证副本；如果没有，请写信至自由软件基金会，地址为：59 Temple Place - Suite 330, Boston, MA 02111-1307, USA。
GNU通用公共许可证全文包含在名为LICENSE的文件中。
联系方式：

  James P. Ketrenos <ipw2100-admin@linux.intel.com>

  英特尔公司，东北埃尔姆扬公园大道 5200 号，希尔斯伯罗，俄勒冈州 97124-6497
