SPDX 许可证标识符: GPL-2.0+

=================================================================
Linux 基础驱动程序针对 Intel(R) 以太网自适应虚拟功能
=================================================================

Intel 以太网自适应虚拟功能 Linux 驱动程序
版权所有 (c) 2013-2018 Intel 公司
目录
========

- 概述
- 识别您的适配器
- 额外的配置
- 已知问题/故障排除
- 支持

概述
========

本文件描述了 iavf Linux 基础驱动程序。此驱动程序之前被称为 i40evf。
iavf 驱动程序支持以下列出的虚拟功能设备，并且只能在运行使用 CONFIG_PCI_IOV 编译的 i40e 或更新版本物理功能 (PF) 驱动程序的内核上激活。iavf 驱动程序需要启用 CONFIG_PCI_MSI。
加载 iavf 驱动程序的客户操作系统必须支持 MSI-X 中断。

识别您的适配器
========================

本内核中的驱动程序与基于以下设备兼容：
* Intel(R) XL710 X710 虚拟功能
* Intel(R) X722 虚拟功能
* Intel(R) XXV710 虚拟功能
* Intel(R) 以太网自适应虚拟功能

为了获得最佳性能，请确保在您的设备上安装了最新的 NVM/FW。
有关如何识别您的适配器的信息，以及最新的 NVM/FW 映像和 Intel 网络驱动程序，请参阅 Intel 支持网站：
https://www.intel.com/support


额外的功能和配置
======================================

查看链路消息
---------------------
如果系统限制了系统消息，则不会向控制台显示链路消息。为了在控制台上看到网络驱动程序的链路消息，请设置 dmesg 为 8，方法如下：

    # dmesg -n 8

**注意：**
  此设置不会跨重启保存。
ethtool
-------
该驱动程序利用 ethtool 接口进行驱动程序配置和诊断，以及显示统计信息。此功能需要最新版本的 ethtool。下载地址为：
https://www.kernel.org/pub/software/network/ethtool/

设置 VLAN 标签剥离
--------------------------
如果您有需要虚拟功能 (VF) 接收带有 VLAN 标签的数据包的应用程序，您可以为 VF 禁用 VLAN 标签剥离。物理功能 (PF) 处理来自 VF 的请求以启用或禁用 VLAN 标签剥离。请注意，如果 PF 已经为一个 VF 分配了一个 VLAN，则来自该 VF 的设置 VLAN 标签剥离的请求将被忽略。
要为 VF 启用/禁用 VLAN 标签剥离，请从您运行 VF 的虚拟机内部发出以下命令：

    # ethtool -K <if_name> rxvlan on/off

或者替代方案是：

    # ethtool --offload <if_name> rxvlan on/off

自适应虚拟功能
-------------------------
自适应虚拟功能 (AVF) 允许虚拟功能驱动程序 (VF) 适应其关联的物理功能驱动程序 (PF) 变更的功能集。这允许系统管理员更新 PF 而无需更新与其相关联的所有 VF。所有 AVF 都具有单一的共同设备 ID 和品牌字符串。
AVF 具有一组最小的功能集，称为“基础模式”，但根据其关联的 PF 所提供的功能，可能会提供额外的功能。以下是基础模式的特点：

- 4 对队列 (QP) 及其用于发送/接收的配置状态寄存器 (CSR)
- i40e 描述符和环格式
- 描述符写回完成
- 1 个控制队列，具有 i40e 描述符、CSR 和环格式
- 5 个 MSI-X 中断向量及其对应的 i40e CSR
- 1 个中断节流率 (ITR) 索引
- 每个 VF 1 个虚拟站接口 (VSI)
- 1 个流量类别 (TC)，即 TC0
- 通过 PF 配置的具有 64 项重定向表和密钥的接收侧扩展 (RSS)
- 每个 VF 预留 1 个单播 MAC 地址
- 每个 VF 16 个 MAC 地址过滤器
- 无状态卸载 - 非隧道校验和
- AVF 设备 ID
- 使用硬件邮箱进行 VF 到 PF 的通信（包括在 Windows 上）

IEEE 802.1ad (QinQ) 支持
---------------------------
IEEE 802.1ad 标准，非正式地称为 QinQ，允许在单个以太网帧中包含多个 VLAN ID。VLAN ID 有时被称为“标签”，因此多个 VLAN ID 被称为“标签堆栈”。标签堆栈允许 L2 隧道化和在特定 VLAN ID 内隔离流量的能力等用途。
以下是配置 802.1ad (QinQ) 的示例：

    # ip link add link eth0 eth0.24 type vlan proto 802.1ad id 24
    # ip link add link eth0.24 eth0.24.371 type vlan proto 802.1Q id 371

其中，“24”和“371”是示例VLAN ID。
注意事项：
  对于802.1ad (QinQ)数据包，不支持接收校验和卸载、云过滤器以及VLAN加速。
应用设备队列（ADq）
--------------------
应用设备队列（ADq）允许您为特定的应用程序分配一个或多个队列。这可以减少指定应用程序的延迟，并允许按应用程序限制发送流量。请按照以下步骤设置ADq：
要求：

- 必须加载sch_mqprio、act_mirred和cls_flower模块
- 需要最新版本的iproute2
- 如果其他驱动程序（例如DPDK）已经设置了云过滤器，则无法启用ADQ
- 根据底层PF设备的不同，在启用了以下功能时，不能启用ADQ：

  + 数据中心桥接（DCB）
  + 每端口多个功能（MFP）
  + 辅助过滤器

1. 创建流量类别（TCs）。每个接口最多可创建8个TCs。bw_rlimit参数为可选参数。
示例：设置两个TC，tc0和tc1，每个TC包含16个队列，tc0的最大发送速率设为1Gbps，tc1设为3Gbps。
::

    tc qdisc add dev <interface> root mqprio num_tc 2 map 0 0 0 0 1 1 1 1
    queues 16@0 16@16 hw 1 mode channel shaper bw_rlimit min_rate 1Gbit 2Gbit
    max_rate 1Gbit 3Gbit

map: 为最高16个优先级到TCs的优先级映射（例如，map 0 0 0 0 1 1 1 1 将优先级0-3映射到tc0，优先级4-7映射到tc1）

queues: 对于每个TC，<队列数>@<偏移量>（例如，queues 16@0 16@16 给tc0分配了从偏移量0开始的16个队列，给tc1分配了从偏移量16开始的16个队列。所有TCs的最大总队列数为64或核心数，取较小值。）

hw 1 mode channel: “channel”与“hw”设置为1是mqprion中的新硬件卸载模式，充分利用mqprion选项、TCs、队列配置以及QoS参数。
shaper bw_rlimit: 对于每个TC，设置最小和最大带宽速率。总和必须等于或小于端口速度。
例如：min_rate 1Gbit 3Gbit: 使用网络监控工具如``ifstat``或``sar -n DEV [间隔] [样本数]``验证带宽限制。

注意：
  当使用mqprion配置TCs时，通过ethtool（ethtool -L）设置通道不受支持。
### 启用接口上的硬件TC卸载：

    # ethtool -K <interface> hw-tc-offload on

### 应用TC到接口的入站（接收）流量：

    # tc qdisc add dev <interface> ingress

### 注意事项：
- 所有tc命令必须从iproute2 `<pathtoiproute2>/tc/` 目录运行。
- ADq不兼容云过滤器。
- 通过ethtool（使用 `ethtool -L`）设置通道在使用mqprio配置TC时不受支持。
- 您必须使用iproute2的最新版本。
- 需要NVM版本6.01或更高版本。
- 当启用以下任何功能时，无法启用ADq：数据中心桥接（DCB）、每个端口多个功能（MFP）或旁路过滤器。
- 如果另一个驱动程序（例如DPDK）设置了云过滤器，则无法启用ADq。
- 不支持隧道过滤器在ADq中。如果非隧道模式下封装的数据包到达，过滤将基于内部报头进行。例如，在非隧道模式下的VXLAN流量，PCTYPE被识别为VXLAN封装的数据包，忽略外部报头。因此，匹配的是内部报头。
- 如果PF（物理功能）上的TC过滤器匹配了VF（PF上的虚拟功能）上的流量，该流量将被路由到PF的适当队列，并不会传递给VF。这种流量最终会在TCP/IP栈的更高级别被丢弃，因为它与PF地址数据不符。
- 如果流量匹配多个指向不同TC的TC过滤器，该流量将被复制并发送到所有匹配的TC队列。硬件交换机在多个过滤器匹配时会将数据包镜像到VSI列表。

### 已知问题及故障排除

#### 使用Intel(R) Ethernet Controller 700系列设备绑定虚拟功能时，团队绑定失败

如果您将虚拟功能（VFs）绑定到基于Intel(R) Ethernet Controller 700系列的设备上，当它们成为活动从属时可能会失败。如果VF的MAC地址由设备的PF（物理功能）设置，当您添加一个从属或者更改主备从属时，Linux绑定尝试将备份从属的MAC地址同步为主从属相同的MAC地址，这时Linux绑定将会失败。如果VF的MAC地址不是由PF设置的话，此问题不会出现。

#### 无法在虚拟机和客户端之间传递流量

如果虚拟功能（VF，或虚拟网卡）未处于信任模式并且VF上启用了欺骗检查，您可能无法在单独主机上的客户端系统和虚拟机（VM）之间传递流量。请注意，这种情况可以出现在客户端、主机和客户操作系统之间的任何组合中。有关如何将VF设置为信任模式的信息，请参阅本读取文档中的“VLAN标签数据包引导”部分。有关设置欺骗检查的信息，请参阅本读取文档中的“MAC和VLAN防欺骗特性”部分。

#### 不要在存在活跃虚拟机的虚拟功能绑定时卸载端口驱动

不要在一个带有活跃虚拟机（VM）的虚拟功能（VF）绑定时卸载端口的驱动。这样做会导致端口似乎挂起。一旦虚拟机关闭或以其他方式释放VF，命令将完成。

#### 尝试预留四个流量类别失败

不要试图在iavf驱动中预留超过三个流量类别。这样做将无法设置任何流量类别，并导致驱动向标准输出写入错误。为了避免这个问题，最多使用三个队列。

#### 在移除iavf驱动时出现多个日志错误消息

如果您有多个VF并移除了iavf驱动，会出现多个实例的日志错误，如：

    无法向PF发送opcode 2，err I40E_ERR_QUEUE_EMPTY，aq_err ok
    无法向VF 2发送消息，aq_err 12
    检测到ARQ溢出错误

#### 虚拟机未获取链接

如果虚拟机分配了多个虚拟端口，且这些虚拟端口绑定到了不同的物理端口，那么可能并非所有的虚拟端口都能获得链接。以下命令可能会解决该问题：

    # ethtool -r <PF>

其中 `<PF>` 是主机上的PF接口，例如：p5p1。您可能需要多次运行此命令才能使所有虚拟端口获得链接。
### 虚拟功能的MAC地址意外变化
如果虚拟功能（VF）的MAC地址未在主机上分配，则VF驱动程序将使用随机MAC地址。此随机MAC地址可能在每次VF驱动程序重新加载时发生变化。您可以在主机机器上分配一个静态MAC地址。这个静态MAC地址将在VF驱动程序重新加载后仍然有效。

### 驱动缓冲区溢出修复
为了解决CVE-2016-8105问题（参见Intel SA-00069：
https://www.intel.com/content/www/us/en/security-center/advisory/intel-sa-00069.html）
本驱动程序及其未来版本中已包含了相应的修复。

### 同一以太网广播网络中的多个接口
由于Linux上的默认ARP行为，无法在一个系统上同时处于同一以太网广播域（非分区交换机）内的两个IP网络中，并期望其正常工作。所有以太网接口都会响应分配给系统的任何IP地址的IP流量。这会导致接收流量不平衡。

如果您在同一服务器上有多个接口，可以通过以下方式启用ARP过滤：

```bash
# echo 1 > /proc/sys/net/ipv4/conf/all/arp_filter
```

**注意：**
此设置不会在重启后保留。要永久更改配置，请在文件`/etc/sysctl.conf`中添加以下行：

```bash
net.ipv4.conf.all.arp_filter = 1
```

另一种选择是将接口安装在不同的广播域中（要么是在不同的交换机上，要么是在划分为VLAN的交换机中）。

### 接收页面分配错误
在压力下可能会出现“页面分配失败。order:0”错误。
这是由Linux内核报告这种压力状态的方式引起的。

### 支持
对于一般信息，请访问Intel支持网站：
https://support.intel.com

如果在支持的内核和适配器上发布的源代码中发现有相关问题，请将与问题相关的确切信息发送至intel-wired-lan@lists.osuosl.org。
