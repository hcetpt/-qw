SPDX 许可证标识符: GPL-2.0
.. include:: <isonum.txt>

===============================
DPAA2 以太网驱动程序
===============================

:版权所有: |copy| 2017-2018 NXP

此文件提供了Freescale DPAA2以太网驱动程序的文档。

支持的平台
===================
此驱动程序为Freescale DPAA2 SoC（例如LS2080A、LS2088A、LS1088A）提供网络支持。

架构概述
=====================
与常规网卡不同，在DPAA2架构中，并没有单一的硬件模块代表网络接口；相反，多个独立的硬件资源共同提供网络功能：

- 网络接口
- 队列、通道
- 缓冲池
- MAC/PHY

所有硬件资源都通过管理复杂体（Management Complex, MC）端口进行分配和配置。MC将大多数这些资源抽象为DPAA2对象，并通过API暴露出来以便进行配置和控制。一些硬件资源（如队列）没有对应的MC对象，而是作为其他对象的内部资源处理。
有关DPAA2架构及其对象抽象的更详细描述，请参阅
*Documentation/networking/device_drivers/ethernet/freescale/dpaa2/overview.rst*
每个Linux网络设备都是基于一个数据路径网络接口（DPNI）对象构建的，并使用缓冲池（DPBPs）、I/O端口（DPIOs）和集中器（DPCONs）。

配置接口图示如下：

```
                 -----------------------
                | DPAA2 以太网驱动程序 |
                 -----------------------
                     .      .
.      .
. . . . .      .      . . . . .
.              .
```
DPBP API | DPNI API | DPCON API
-------------------|-------------------|-------------------
. | . | . | 软件
==================|==================|==================
. | . | . | 硬件
------------------------------------------
| MC 硬件端口 |
------------------------------------------
. | .
. |
------|------|-------
| DPBP | | DPNI | | DPCON |
------|------|-------

DPNIs 是网络接口，没有直接的一对一映射到 PHY（物理层）。
DPBPs 表示硬件缓冲池。数据包的输入输出操作在 DPCON 对象的上下文中执行，使用 DPIO 端口来管理和与硬件资源通信。

数据路径（I/O）接口：

-----------------------------------------------
| DPAA2 以太网驱动程序                         |
-----------------------------------------------
|          ^        ^         |            |
|          |        |         |            |
入队列|   出队列|   数据 |  出队列|   种子缓存|
(Tx)  | (Rx, TxC)| 通知 |  请求| 缓存|
|          |        |         |            |
|          |        |         |            |
V          |        |         V            V
-----------------------------------------------
| DPIO 驱动程序                               |
-----------------------------------------------
|          |        |         |            |          软件
|          |        |         |            |  ================
|          |        |         |            |          硬件
-----------------------------------------------
| I/O 硬件端口                                |
-----------------------------------------------
|          |        |         |            |
|          |        |         V            |
|          |        |         V
----------------------           |      -------------
队列  ----------------------          |     | 缓冲池 |
----------------------         |      -------------
                   =======================
                                通道

数据路径 I/O（DPIO）端口提供入队和出队服务、数据可用性通知以及缓冲池管理。DPIO 在所有处理数据帧的 DPAA2 对象（及隐式地包括所有 DPAA2 内核驱动程序）之间共享，但必须与 CPU 关联以进行流量分配。以太网驱动程序将 TX 帧入队到出口队列，并且传输完成后会发送一个 TX 确认帧回 CPU。
当有数据帧在入口队列上可用时，会向 CPU 发送数据可用性通知；通知是按通道发出的，因此即使同一个通道中的多个队列有可用帧，也只会发送一个通知。
通道触发通知后，必须显式地重新启动。
每个网络接口可以有多个与 CPU 相关联的 Rx、Tx 和确认队列，并且每个至少处理一个队列的 CPU 都有一个通道（DPCON）。
DPCONs 用于通过各个核心的关联 DPIO 将入口流量分发到不同的 CPU。硬件缓冲池的作用是存储入口帧数据。每个网络接口拥有一个私有的缓冲池，该缓冲池由内核分配的缓冲区填充。

DPNIs 与 PHY 分离；DPNI 可以通过 DPMAC 对象连接到 PHY，或者通过内部链路连接到另一个 DPNI，但这种连接由 MC 管理，并且对以太网驱动程序完全透明。

```
---------     ---------     ---------
| eth if1 |   | eth if2 |   | eth ifn |
---------     ---------     ---------
    .           .           .
    .           .           .
    .           .           .
---------------------------
|   DPAA2 Ethernet Driver   |
 ---------------------------
    .           .           .
    .           .           .
    .           .           .
------      ------      ------            -------
| DPNI |    | DPNI |    | DPNI |          | DPMAC |----+
 ------      ------      ------            -------     |
   |           |           |                  |        |
   |           |           |                  |      -----
    ===========             ==================      | PHY |
                                                          -----
```

创建网络接口
=============
在 MC 总线上探测到每个 DPNI 对象时，都会创建一个网络设备。每个 DPNI 都有一些属性，这些属性决定了网络接口配置选项及其关联的硬件资源。
DPNI 对象（以及网络接口所需的其他 DPAA2 对象）可以通过两种方式添加到 MC 总线上的容器中：静态方式，通过在启动时由 MC 解析的数据路径布局二进制文件（DPL）；或者在运行时动态创建，通过 DPAA2 对象的 API。

特性与卸载
===========
支持针对 IPv4/6 帧的 TCP 和 UDP 的硬件校验和卸载。
校验和卸载可以独立地通过 ethtool 在接收（RX）和发送（TX）路径上配置。
支持在入站路径上对单播和组播 MAC 过滤的硬件卸载，并且始终启用。
散聚帧（scatter-gather frames）在接收（RX）和发送（TX）路径上都得到支持。在发送路径上，散聚帧支持可以通过 ethtool 配置；在接收路径上，它始终启用。
DPAA2 硬件可以处理最大达 10K 字节的巨型以太网帧。
以太网驱动定义了一个静态流哈希方案，该方案基于五元组键（源 IP、目标 IP、IP 协议、四层源端口、四层目标端口）来分配流量。目前不支持用户配置。
可以通过 ethtool -S 选项查询网络接口的特定硬件统计信息以及一些非标准驱动程序统计信息。
