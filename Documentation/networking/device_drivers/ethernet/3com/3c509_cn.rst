SPDX 许可证标识符: GPL-2.0

=============================================================================
Linux 和 3Com EtherLink III 系列 Ethercards（驱动程序版本 1.18c 及以上）
=============================================================================

此文件包含了版本 1.18c 及更高版本的 3c509 驱动程序的使用说明和注意事项。在不阅读本文件的情况下不应使用该驱动程序，版本 1.0

2002 年 2 月 28 日

当前维护者（如有更正请联系）:
  David Ruggiero <jdr@farfalle.com>

简介
============

以下是在 Linux 中使用 3Com EtherLink III 系列以太网卡的相关说明和信息。这些卡通常以其最广泛使用的型号，即 3Com 的 3c509 型号而为人所知。它们都是 10Mbps 的 ISA 总线卡，并且不应该（但有时会被）与同样编号的 PCI 总线“3c905”（又名“Vortex”或“Boomerang”）系列混淆。内核对 3c509 家族的支持由模块 3c509.c 提供，其中包括以下所有型号的代码：

 - 3c509（原始 ISA 卡）
 - 3c509B（ISA 卡的后续版本；支持全双工模式）
 - 3c589（PCMCIA）
 - 3c589B（3c589 的后续版本；支持全双工模式）
 - 3c579（EISA）

本文档的大部分内容都大量借鉴了 3c509 驱动程序原始作者 Donald Becker 编写的指南。该文档的主副本，其中包含有关驱动程序旧版本的注释，目前位于 Scyld 网站：http://www.scyld.com/
特殊驱动特性
=======================

覆盖卡设置

驱动程序允许在启动或加载时覆盖卡检测到的 IOADDR、IRQ 和收发器设置，尽管这种能力通常不需要使用，除非是为了启用全双工模式（见下文）。下面是一个设置语法的例子，用于 LILO 参数来完成这项工作：

    ether=10,0x310,3,0x3c509,eth0

这将配置第一个找到的 3c509 卡，使其使用 IRQ 10、基本 I/O 地址 0x310 和收发器类型 3（10base2）。标志“0x3c509”必须设置以避免与其他类型的卡发生冲突时覆盖 I/O 地址。当驱动程序作为模块加载时，只能覆盖 IRQ。例如，要将两张卡分别设置为 IRQ10 和 IRQ11，可以使用 irq 模块选项：

   options 3c509 irq=10,11


全双工模式
================

v1.18c 版本的驱动程序添加了对 3c509B 的全双工功能的支持。
为了启用并成功使用全双工模式，必须满足三个条件：

(a) 必须拥有支持全双工操作的 Etherlink III 卡型号。目前，已知肯定支持全双工的 3c509 家族成员只有 3c509B（ISA 总线）和 3c589B（PCMCIA）卡。没有“B”型号标记的卡均不支持全双工模式；这些包括原始 3c509（无“B”）、原始 3c589、3c529（MCA 总线）和 3c579（EISA 总线）。
(b) 必须使用卡上的 10baseT 收发器（即 RJ-45 接口），而不是其 AUI（粗缆）或 10base2（细缆/同轴电缆）接口。AUI 和 10base2 网络电缆物理上无法支持全双工操作。
(c) 最重要的是，您的 3c509B 必须连接到一个同样支持全双工的链路伙伴。这几乎肯定是以下两种情况之一：一个支持全双工的以太网交换机（不是集线器），或者另一个系统中的支持全双工的 NIC，该系统通过交叉线直接连接到 3c509B。

全双工模式可以通过 'ethtool' 来启用。
.. 注意:: 

  对于全双工模式极其重要的警告

  请注意，3c509B 的硬件对于全双工的支持远不如现代网络接口卡。虽然在网络的物理层它完全支持全双工操作，但是该卡设计时当前的以太网自动协商（N-way）规范尚未制定。这意味着无论怎样初始化，3c509B 家族**都无法自动与链路伙伴协商全双工连接**。如果启用了 3c509B 的全双工模式，其链路伙伴很可能也需要被独立地**强制**进入全双工模式；否则会发生各种严重的故障——最起码，您会看到大量的数据包碰撞。这是极少数情况下需要禁用自动协商并强制网络接口卡或交换机的双工模式的情况之一。
可用的收发器类型
===========================

对于驱动程序版本 1.18c 及以上的版本，可用的收发器类型如下：

== =========================================================================
0  从 EEPROM 配置中读取的收发器类型（通常是 10baseT）；强制半双工
1  AUI（粗缆 / DB15 接口）
2  （未定义）
3  10base2（细缆 == 同轴电缆 / BNC 接口）
4  10baseT（RJ-45 接口）；强制半双工模式
8  从卡的 EEPROM 配置设置中获取收发器类型和双工模式
12 10baseT（RJ-45 接口）；强制全双工模式
== =========================================================================

在驱动程序版本 1.18c 之前，只支持收发器代码 0-4。请注意，新的收发器代码 8 和 12 是**唯一**能够启用全双工模式的代码，无论卡检测到的 EEPROM 设置是什么。
这段文本的中文翻译如下：

这确保了从早期版本简单地升级驱动程序永远不会自动在现有安装中启用全双工模式；必须始终通过这些代码之一明确启用它才能激活。

可以使用 'ethtool' 更改收发器类型。

错误消息和常见问题的解释
-------------------------------

### 错误消息
^^^^^^^^^^^^^^

**eth0: 中断中的无限循环，状态 2011**
这是“基本上无害”的消息，表明在该中断周期中驱动程序的工作量过大。当状态为 0x2011 时，您接收数据包的速度超过了它们可以从卡上移除的速度。这种情况在正常运行时应该是罕见或不可能发生的。此错误报告的可能原因包括：

- 启用了“绿色”模式，当没有键盘活动时会减慢处理器速度。
- 其他设备或设备驱动程序占用总线或禁用中断。
检查 `/proc/interrupts` 文件以查看过高的中断计数。定时器中断应该始终比其他中断增加得更快。
**没有接收到的数据包**
^^^^^^^^^^^^^^^^^^^

如果 3c509、3c562 或 3c589 能够成功发送数据包，但从未接收到数据包（如 `/proc/net/dev` 或 `ifconfig` 所报告的），则很可能存在中断线问题。检查 `/proc/interrupts` 以确认网卡确实生成了中断。如果中断计数没有增加，则很可能有两个设备试图使用相同的 ISA IRQ 线导致物理冲突。常见的冲突是与 IRQ10 或 IRQ5 上的声音卡发生冲突，最简单的解决方案是将 3c509 移动到不同的中断线上。如果设备正在接收数据包但 `ping` 不起作用，则存在路由问题。
**/proc/net/dev 中报告的 Tx 载波错误**
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

如果 EtherLink III 显然正在发送数据包，但在 `/proc/net/dev` 中“Tx 载波错误”字段的增加速度与 Tx 数据包计数一样快，那么您很可能有一个未终止的网络或选择了不正确的媒体收发器。
**3c509B 卡在具有 ISA PnP BIOS 的机器上未被检测到**
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

虽然更新后的驱动程序与大多数 PnP BIOS 程序兼容，但并非所有都兼容。这可以通过使用 3Com 提供的设置程序禁用 PnP 支持来解决。
3c509 网卡在超频的机器上未被检测到。

将 `id_read_eeprom()` 中的延迟时间从当前值 500 增加到一个非常高的值，例如 5000。

状态和错误消息解码
-------------------

主状态寄存器中的位含义如下：

=====	======================================
value 	description
=====	======================================
0x01 	中断锁存
0x02 	发送溢出，或接收欠溢出
0x04 	发送完成
0x08 	发送FIFO有可用空间
0x10 	一个完整的接收数据包已到达
0x20 	一个接收数据包开始到达
0x40 	驱动程序请求了一个中断
0x80 	统计计数接近满
=====	======================================

发送（Tx）状态字中的位含义如下：

=====	============================================
value	description
=====	============================================
0x02	窗口外碰撞
0x04	状态堆栈溢出（通常不可能）
0x08	16次碰撞
0x10	发送欠溢出（PCI总线带宽不足）
0x20	发送口吃
0x40	请求发送中断
0x80	状态有效（这应该总是被设置）
=====	============================================

当发生发送错误时，驱动程序会生成一个状态消息，例如：

   eth0: 发送错误，Tx 状态寄存器 82

这里常见的两个值分别是：

0x82
^^^^

窗口外碰撞。这通常发生在另一个以太网主机在半双工网络中被错误地设置为全双工的情况。
0x88
^^^^

16次碰撞。这通常发生在网络异常繁忙时，或者另一个主机在碰撞后没有正确退避的情况下。如果这个错误与 0x82 错误混合出现，则是由于一个主机被错误地设置为全双工（参见上面）。
这两个错误都是网络问题所导致的，这些问题应当得到修正。它们并不代表驱动程序出现故障。
修订历史（本文件）
================================

2002年2月28日 v1.0  DR   新创建；大部分内容基于Becker原始的3c509文档编写
