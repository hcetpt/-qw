.. SPDX-License-Identifier: GPL-2.0

=============================
工业IIO设备缓冲区
=============================

1. 概览
===========

工业I/O核心提供了一种基于触发源的连续数据捕获方法。可以从``/dev/iio:deviceX``字符设备节点同时读取多个数据通道，从而减少CPU负载。具有缓冲支持的设备在``/sys/bus/iio/devices/iio:deviceX/``目录层次结构中有一个额外的子目录，称为bufferY，默认情况下Y为0，适用于只有一个缓冲区的设备。

2. 缓冲属性
====================

一个IIO缓冲区在``/sys/bus/iio/iio:deviceX/bufferY/``下有一个关联的属性目录。下面描述了这些属性：

``length``
----------
读/写属性，表示缓冲区可以存储的总数据样本数（容量）。

``enable``
----------
读/写属性，用于启动/停止缓冲区捕获。该文件应在设置长度和选择扫描元素之后最后写入。如果给定了不支持的通道组合，写入非零值可能会导致错误，例如EINVAL。

``watermark``
-------------
读/写正整数属性，指定要等待的最大扫描元素数量。
轮询将阻塞直到达到水印值。
阻塞读取将等待请求读取的数量或低水印值之间的最小值可用。
非阻塞读取即使样本数量少于水印级别也会从缓冲区中检索可用样本。这允许应用程序在轮询时阻塞并设置超时，在超时到期后读取可用样本，从而保证最大延迟。

数据可用
--------------
只读属性，指示缓冲区中可用的数据字节数。对于输出缓冲区，这表示可用于写入数据的空闲空间量。对于输入缓冲区，这表示可用于读取的数据量。
扫描元素
-------------

与放置在缓冲区中的通道数据相关的元信息称为扫描元素。下面列出了扫描元素的属性：

**_en**

用于启用通道的读/写属性。只有当其值非零时，触发捕获才会包含该通道的数据样本。
**_index**

只读无符号整数属性，指定通道在缓冲区中的位置。请注意，这些位置不依赖于哪些被启用，并且可能不是连续的。因此，用户空间需要结合所有 _en 属性来确定存在哪些通道，并结合相关的 _type 属性来确定数据存储格式。
**_type**

只读属性，包含扫描元素在缓冲区内的数据存储描述，从而决定了从用户空间读取数据的形式。格式为 [be|le]:[s|u]bits/storagebits[Xrepeat][>>shift]，其中：

- **be** 或 **le** 指定大端或小端模式
- **s** 或 **u** 指定是有符号（二进制补码）还是无符号
- **bits** 是有效数据位的数量
- **storagebits** 是该数据在缓冲区中占用的位数（填充后）
- **repeat** 指定位数或存储位数的重复次数。当 repeat 元素为 0 或 1 时，repeat 值会被省略
- **shift** 如果指定了，则是在屏蔽未使用的位之前需要应用的移位量

例如，一个 3 轴加速度计驱动程序，每个轴有 12 位分辨率，数据存储在两个 8 位寄存器中，如下所示：

```
         7   6   5   4   3   2   1   0
       +---+---+---+---+---+---+---+---+
       |D3 |D2 |D1 |D0 | X | X | X | X | (低位字节，地址 0x06)
       +---+---+---+---+---+---+---+---+

         7   6   5   4   3   2   1   0
       +---+---+---+---+---+---+---+---+
       |D11|D10|D9 |D8 |D7 |D6 |D5 |D4 | (高位字节，地址 0x07)
       +---+---+---+---+---+---+---+---+
```

每个轴将具有以下扫描元素类型：

```bash
$ cat /sys/bus/iio/devices/iio:device0/buffer0/in_accel_y_type
le:s12/16>>4
```

用户空间应用程序将把从缓冲区读取的数据样本解释为两个字节的小端模式有符号数据，在屏蔽掉 12 个有效位之前需要右移 4 位。
还值得一提的是，缓冲区中的数据会自然对齐，因此用户空间应用程序需要相应地处理这些缓冲区。例如，假设有一个具有四个通道的驱动程序，其描述如下：
- 通道0：索引：0，类型：be:u16/16>>0
- 通道1：索引：1，类型：be:u32/32>>0
- 通道2：索引：2，类型：be:u32/32>>0
- 通道3：索引：3，类型：be:u64/64>>0

如果所有通道都启用，数据在缓冲区中的对齐方式如下：

          0-1   2   3   4-7  8-11  12  13  14  15  16-23   -> 缓冲区字节编号
        +-----+---+---+-----+-----+---+---+---+---+-----+
        |CHN_0|PAD|PAD|CHN_1|CHN_2|PAD|PAD|PAD|PAD|CHN_3|  -> 缓冲区内容
        +-----+---+---+-----+-----+---+---+---+---+-----+

如果仅启用通道0和通道3，数据在缓冲区中的对齐方式如下：

          0-1   2   3   4   5   6   7  8-15    -> 缓冲区字节编号
        +-----+---+---+---+---+---+---+-----+
        |CHN_0|PAD|PAD|PAD|PAD|PAD|PAD|CHN_3|  -> 缓冲区内容
        +-----+---+---+---+---+---+---+-----+

通常，缓冲区中的数据以原始格式（未缩放且未应用偏移量）存在，但在某些特殊情况下，缓冲区中的数据可能以处理过的形式存在。请注意，这些特殊情况在此文档中并未涉及。
请参阅 ``Documentation/ABI/testing/sysfs-bus-iio`` 获取属性的完整描述。
