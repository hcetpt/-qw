USB 错误代码
~~~~~~~~~~~~~~~

:修订日期: 2004年10月21日

这是（希望是）所有可能的错误代码（及其解释）的文档，这些错误代码可以从USB核心（usbcore）返回。
其中一些是由主机控制器驱动程序（HCDs）返回的，设备驱动程序只能通过USB核心看到。原则上，除了与传输速度相关的行为和某些故障报告的方式外，所有的HCDs应该表现一致。

`usb_submit_urb` 返回的错误码
=================================

非USB特定的：

=============== ===============================================
0                URB 提交正常

``-ENOMEM``       分配内部结构时没有足够的内存
=============== ===============================================

USB特定的：

=======================	=======================================================
``-EBUSY``            URB 已经处于活动状态
``-ENODEV``           指定的USB设备或总线不存在

``-ENOENT``           指定的接口或端点不存在或未启用

``-ENXIO``            主机控制器驱动不支持此类型的URB排队。（视为主机控制器的bug）

``-EINVAL``           a) 指定了无效的传输类型（或不支持）
                       b) 指定了无效或不受支持的周期性传输间隔
                       c) ISO：尝试更改传输间隔
                       d) ISO：`number_of_packets` 小于0
                       e) 其他多种情况

``-EXDEV``            ISO：未指定 `URB_ISO_ASAP` 并且URB调度的所有帧都已过期
``-EFBIG``            主机控制器驱动无法调度如此多的ISO帧
``-EPIPE``            在URB中指定的管道类型与端点的实际类型不符
``-EMSGSIZE``         a) 端点的最大包大小为零；在当前接口替代设置中不可用
                       b) ISO 包比端点的最大包大小大
                       c) 请求的数据传输长度无效：负数或对于主机控制器来说太大
``-EBADR``            控制URB的设置包中的wLength值与URB的transfer_buffer_length不符
=======================	=======================================================
``-ENOSPC``	此请求将超出为周期性传输（中断、等时）预留的USB带宽。

``-ESHUTDOWN``	由于无法解决的问题，设备或主机控制器已被禁用。

``-EPERM``	提交失败，因为设置了``urb->reject``。

``-EHOSTUNREACH``	URB被拒绝，因为设备处于挂起状态。

``-ENOEXEC``	控制URB中不包含Setup数据包。

=======================	=======================================================
通过``in urb->status``或在``iso_frame_desc[n].status``（对于ISO）返回的错误代码
=======================================================================================

USB设备驱动程序只能在完成处理程序中测试URB状态值。这是因为如果HCD在一台CPU上更新这些值的同时，设备驱动程序在另一台CPU上测试它们，则会存在竞争条件。
即使报告了错误，一个传输的实际长度也可能为正数。这是因为在错误阻止进一步的端点I/O之前，可能有一个或多个数据包完成了传输。
对于等时URB，当URB被解除链接、设备被移除、主机控制器被禁用或者总传输长度小于请求长度且设置了``URB_SHORT_NOT_OK``标志时，URB状态值才非零。等时URB的完成处理程序应仅看到``urb->status``设置为零、``-ENOENT``、``-ECONNRESET``、``-ESHUTDOWN``或``-EREMOTEIO``。单个帧描述符的状态字段可能报告更多的状态代码。
===============================	===============================================
0				传输成功完成。

``-ENOENT``			URB被同步地解除链接由
				:c:func:`usb_unlink_urb`

``-EINPROGRESS``		URB仍在等待，尚未有任何结果
				（也就是说，如果驱动程序看到这个状态，则是错误。）

``-EPROTO`` [#f1]_, [#f2]_	a) 位填充错误
				b) 在规定的时间内没有接收到响应数据包
				   （总线转换时间）
				c) 未知的USB错误

``-EILSEQ`` [#f1]_, [#f2]_	a) CRC不匹配
				b) 在规定的时间内没有接收到响应数据包
				   （总线转换时间）
				c) 未知的USB错误

				需要注意的是，通常控制器硬件不会区分情况a)、b)和c)，因此驱动程序无法判断是协议错误、未响应的失败（通常是由于设备断开连接引起的），还是其他某种故障。
``-ETIME`` [#f2]_		在规定的时间内未收到响应数据包。此错误也可能报告为
				``-EPROTO`` 或 ``-EILSEQ``

``-ETIMEDOUT``			同步USB消息函数使用此代码表示传输完成前超时已到期，
				且主机控制器（HC）未报告其他错误

``-EPIPE`` [#f2]_		端点停滞。对于非控制端点，可使用
				:c:func:`usb_clear_halt` 清除此状态

``-ECOMM``			在IN传输过程中，主机控制器接收来自端点的数据的速度
				快于其写入系统内存的速度

``-ENOSR``			在OUT传输过程中，主机控制器无法以足够快的速度从系统内存中
				检索数据以跟上USB数据速率

``-EOVERFLOW`` [#f1]_		端点返回的数据量大于端点的最大数据包大小或剩余缓冲区大小
				"Babble"

``-EREMOTEIO``			从端点读取的数据未能填满指定的缓冲区，并且 `URB_SHORT_NOT_OK`
				设置在 `urb->transfer_flags` 中

``-ENODEV``			设备被移除。通常会有一系列其他错误紧随其后，因为集线器驱动程序
				不能立即检测到设备移除事件

``-EXDEV``			ISO传输仅部分完成（仅设置在 `iso_frame_desc[n].status` 中，
				而不是 `urb->status`）

``-EINVAL``			ISO混乱，如果发生这种情况：记录日志并离开

``-ECONNRESET``			URB通过 :c:func:`usb_unlink_urb` 异步解除链接

``-ESHUTDOWN``			由于无法解决的问题（如物理断开）导致设备或主机控制器被禁用

===============================	===============================================

.. [#f1]

   错误代码如 ``-EPROTO``、``-EILSEQ`` 和 ``-EOVERFLOW`` 通常指示硬件问题，
   如不良设备（包括固件）或电缆

.. [#f2]

   这也是多种类型的主机控制器用来指示因设备断开而导致传输失败的多个代码之一。
   在集线器驱动程序开始断开处理之前的一段时间里，设备可能会针对每个请求接收到此类故障报告
由 `usbcore` 函数返回的错误代码
=========================================

.. note:: 也请期待其他提交和传输状态码

:c:func:`usb_register`:

======================= ===================================
``-EINVAL``		在注册新驱动程序时出错
======================= ===================================

``usb_get_*/usb_set_*()``, 
:c:func:`usb_control_msg`,
:c:func:`usb_bulk_msg()`:

======================= ==============================================
``-ETIMEDOUT``		传输完成前超时已过期
======================= ==============================================
