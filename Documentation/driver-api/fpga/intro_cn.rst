# 引言
=============

FPGA子系统支持在 Linux 下动态重新编程FPGA。FPGA子系统的几个核心目标包括：

* FPGA子系统与供应商无关
* FPGA子系统将上层（用户空间接口和枚举）与了解如何编程特定FPGA的下层分离开来
* 上下层之间不应共享代码。这本应不言而喻。如果看起来有必要，可能需要增加一些框架功能以惠及更多用户。请向linux-fpga邮件列表及维护者寻求解决方案，以扩展该框架以供广泛重用
* 通常，在添加代码时，请考虑未来。计划用于重用

内核中的框架分为以下几部分：

## FPGA 管理器
-------------

如果您正在添加新的FPGA或新的FPGA编程方法，这就是适合您的子系统。低级别的FPGA管理器驱动程序包含如何编程特定设备的知识。此子系统包括fpga-mgr.c中的框架以及注册到它的低级别驱动程序。

## FPGA 桥接器
-----------

FPGA桥接器防止在编程过程中从FPGA或FPGA区域输出错误信号。它们在编程开始前被禁用，并在之后重新启用。FPGA桥接器可以是实际硬件，用于控制通往CPU的总线，也可以是FPGA结构中围绕部分重新配置区域的软（“冻结”）桥接器。此子系统包括fpga-bridge.c及其注册的低级别驱动程序。

## FPGA 区域
-----------

如果您正在添加新的FPGA框架接口，请将其添加到FPGA区域之上。
FPGA区域框架(fpga-region.c)将管理器和桥接器作为可重新配置的区域进行关联。一个区域可以指整个FPGA（全重新配置）或FPGA的部分重新配置区域。
设备树FPGA区域支持(of-fpga-region.c)处理当应用设备树覆盖时重新编程FPGA的情况。
