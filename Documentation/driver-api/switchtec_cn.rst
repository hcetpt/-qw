========================
Linux Switchtec 支持
========================

Microsemi 的 "Switchtec" 系列 PCI 交换设备已经通过标准的 PCI 交换驱动程序在内核中得到支持。然而，Switchtec 设备宣传了一个特殊的管理端点，这可以启用一些额外的功能。这些功能包括：

* 包计数和字节计数
* 固件升级
* 事件和错误日志
* 查询端口链接状态
* 自定义用户固件命令

Switchtec 内核模块实现了这一功能。
接口
=====

与 Switchtec 管理固件进行通信的主要方式是通过内存映射远程过程调用 (MRPC) 接口。命令通过一个 4 字节的命令标识符以及最多 1KB 的特定于命令的数据提交到该接口。固件将通过一个 4 字节的返回码及最多 1KB 的特定于命令的数据响应。该接口一次只处理一个命令。
用户空间接口
=============

MRPC 接口将通过一个简单的字符设备暴露给用户空间：/dev/switchtec#，系统中的每个管理端点都有一个这样的设备。该字符设备具有以下语义：

* 写操作必须至少包含 4 字节且不超过 1028 字节。前 4 个字节将被解释为命令 ID，其余部分将作为输入数据使用。写操作会将命令发送给固件以开始处理。
* 每次写操作必须紧跟着一个读操作。任何两次连续的写操作都会产生错误，而任何不跟在写操作后面的读操作也会产生错误。
* 读操作会在固件完成命令处理并返回 4 字节的命令返回值加上最多 1024 字节的输出数据之前阻塞。（长度将由读取调用的大小参数指定——读取少于 4 字节会产生错误。）

* `poll` 调用也将为需要在等待命令完成的同时执行其他操作的用户空间应用程序提供支持。
该设备还支持以下 IOCTL：

* `SWITCHTEC_IOCTL_FLASH_INFO` - 获取设备中的固件长度和分区数量
* `SWITCHTEC_IOCTL_FLASH_PART_INFO` - 获取闪存中指定分区的地址和长度
* `SWITCHTEC_IOCTL_EVENT_SUMMARY` - 读取一个位图结构，该结构指示所有未清除的事件。
* `SWITCHTEC_IOCTL_EVENT_CTL` - 获取任何事件的当前计数、清除和设置标志。此 ioctl 需要一个包含 `event_id`（事件ID）、`index`（索引）和 `flags`（标志）的 `switchtec_ioctl_event_ctl` 结构体（对于非全局事件，索引是分区号或 PFF 编号）。它返回事件是否已发生、发生的次数以及任何特定于事件的数据。标志可以用于清除计数或启用/禁用在事件发生时的动作。
通过使用 `SWITCHTEC_IOCTL_EVENT_FLAG_EN_POLL` 标志，您可以设置一个事件以触发一个轮询命令并返回 `POLLPRI`。这样，用户空间就可以等待事件的发生。
* `SWITCHTEC_IOCTL_PFF_TO_PORT` 和 `SWITCHTEC_IOCTL_PORT_TO_PFF` 在 PCI 功能框架编号（由事件系统使用）与 Switchtec 逻辑端口 ID 和分区编号（更便于用户使用）之间进行转换。

### 非透明桥接 (NTB) 驱动程序

为 Switchtec 硬件提供的 NTB 硬件驱动位于 `ntb_hw_switchtec` 中。目前，它仅支持配置了恰好 2 个 NT 分区和零个或多个非 NT 分区的交换机。它还需要以下配置设置：

* 两个 NT 分区都必须能够访问彼此的 GAS 空间。因此，在管理设置下的 GAS 访问向量中的比特位必须被设置以支持这一点。
* 内核配置**必须**包含对 NTB 的支持（需要设置 `CONFIG_NTB`）。

NT EP BAR 2 将被动态配置为直接窗口，并且配置文件不需要显式地对其进行配置。

请参阅 Linux 源代码树中的 `Documentation/driver-api/ntb.rst` 以了解 Linux NTB 堆栈的整体概述。`ntb_hw_switchtec` 在此堆栈中作为 NTB 硬件驱动程序工作。
