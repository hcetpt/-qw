== SD 和 MMC 块设备属性 ==

这些属性定义了与 SD 或 MMC 设备关联的块设备。
以下属性为可读写：
=====		================================================
force_ro		即使写保护开关关闭，也强制执行只读访问
=====		================================================

== SD 和 MMC 设备属性 ==

所有属性均为只读：
=============	=================================================
cid			卡识别寄存器
csd			卡特定数据寄存器
scr			SD 卡配置寄存器（仅限 SD）
date			制造日期（来自 CID 寄存器）
fwrev			固件/产品修订版（来自 CID 寄存器）  
				（仅限 SD 和 MMCv1）
hwrev			硬件/产品修订版（来自 CID 寄存器）
				（仅限 SD 和 MMCv1）
manfid			制造商 ID（来自 CID 寄存器）
name			产品名称（来自 CID 寄存器）
oemid			OEM/应用 ID（来自 CID 寄存器）
prv			产品修订版（来自 CID 寄存器）
				（仅限 SD 和 MMCv4）
serial			产品序列号（来自 CID 寄存器）
erase_size		擦除组大小
preferred_erase_size	推荐的擦除大小
raw_rpmb_size_mult	RPMB 分区大小
rel_sectors		可靠写入扇区计数
ocr			操作条件寄存器
dsr			驱动阶段寄存器
cmdq_en			命令队列启用：

					1 => 启用，0 => 未启用
=============	=================================================

关于擦除大小和推荐的擦除大小的说明：

	"erase_size" 是以字节为单位的擦除操作的最小大小。对于 MMC，“erase_size” 是卡报告的擦除组大小。请注意，“erase_size” 不适用于 trim 或安全 trim 操作，在这些操作中，最小大小始终是一个 512 字节的扇区。对于 SD，“erase_size” 如果卡是按块寻址，则为 512，否则为 0。
SD/MMC 卡可以擦除任意大的区域，包括整个卡。在擦除大范围时，出于以下三个原因，可能希望将其分成较小的部分进行：

	     1. 单个擦除命令将使卡上的所有其他 I/O 等待。如果正在擦除整张卡，这不是问题，但是擦除一个分区将使同一卡上另一个分区的 I/O 在擦除期间等待 —— 这可能需要几分钟
2. 能够向用户报告擦除进度
3. 擦除超时变得太大而没有多大用处。因为擦除超时包含了一个乘以擦除区域大小的余量，所以对于大面积来说，这个值最终可能会达到几分钟
“erase_size” 并不是最有效的擦除单元（特别是对于 SD，它只是一个扇区），因此 “preferred_erase_size” 提供了擦除大范围的良好分段大小
对于 MMC，“preferred_erase_size” 如果卡指定了一个，则为高容量擦除大小，否则基于卡的容量。
对于SD卡，“preferred_erase_size”是指由卡片所指定的分配单元大小。
"preferred_erase_size"是以字节为单位的。
关于raw_rpmb_size_mult的说明：

"raw_rpmb_size_mult"是128kB块的倍数。
RPMB的大小（以字节为单位）通过以下公式计算：

    RPMB分区大小 = 128kB × raw_rpmb_size_mult
