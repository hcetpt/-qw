SPDX 许可标识符: GPL-2.0

===========================================
Linux 下的 PTP 硬件时钟基础设施
===========================================

  本补丁集引入了对 IEEE 1588 PTP 时钟的支持到 Linux 中。结合使用 SO_TIMESTAMPING 套接字选项，这提供了一种标准化的方法来开发 PTP 用户空间程序、同步 Linux 与外部时钟以及利用 PTP 硬件时钟的辅助功能。一个新的类驱动程序导出了一个特定于时钟的内核接口和用户空间接口。该基础设施支持一套完整的 PTP 硬件时钟功能：
+ 基本时钟操作
    - 设置时间
    - 获取时间
    - 通过给定的偏移量原子性地调整时钟
    - 调整时钟频率

  + 辅助时钟特性
    - 时间戳外部事件
    - 从用户空间配置周期输出信号
    - 从用户空间访问低通滤波器（LPF）
    - 通过 PPS 子系统同步 Linux 系统时间

PTP 硬件时钟内核 API
=============================

   一个 PTP 时钟驱动程序向类驱动程序注册自身。类驱动程序处理所有与用户空间的交互。时钟驱动程序的作者只需要实现编程时钟硬件的细节。时钟驱动程序通过一个简单的消息传递接口通知类驱动程序异步事件（警报和外部时间戳）。
类驱动程序支持多个 PTP 时钟驱动程序。在常规使用情况下，通常只需要一个 PTP 时钟。然而，在测试和开发过程中，为了允许性能比较，可以在单个系统中拥有不止一个时钟，这是很有用的。

PTP 硬件时钟用户空间 API
=================================

   类驱动程序为每个已注册的时钟创建一个字符设备。用户空间可以使用来自字符设备的打开文件描述符作为 POSIX 时钟 ID，并可以调用 clock_gettime、clock_settime 和 clock_adjtime。这些调用实现了基本的时钟操作。
用户空间程序可以通过标准化的 ioctl 控制时钟。程序可以查询、启用、配置和禁用辅助时钟特性。用户空间可以通过阻塞读取（blocking read()）和 poll() 接收带时间戳的事件。

编写时钟驱动程序
=====================

   时钟驱动程序包括 `include/linux/ptp_clock_kernel.h` 并通过向注册方法呈现一个 'struct ptp_clock_info' 来注册自己。时钟驱动程序必须实现接口中的所有函数。如果某个时钟不提供特定的辅助功能，则驱动程序应该在那些函数中返回 -EOPNOTSUPP。
驱动程序必须确保接口中的所有方法都是可重入的。由于大多数硬件实现将时间值视为一个由两个 32 位寄存器访问的 64 位整数，因此驱动程序应使用 spin_lock_irqsave/spin_unlock_irqrestore 来防止并发访问。这种锁定不能在类驱动程序中实现，因为中断服务例程可能也需要这个锁。

PTP 硬件时钟对 '.adjphase' 的要求
-----------------------------------------------

   'struct ptp_clock_info' 接口有一个 '.adjphase' 函数。
此函数有一系列来自 PHC 的要求以实现其功能。
* PHC 内部实现了一个伺服算法，用于修正通过 `.adjphase` 调用传递的偏移量。
* 当调用其他 PTP 校正功能时，PHC 的伺服算法将被禁用。
**注意：**`.adjphase` 并非简单的基于所提供偏移量“跳跃”调整 PHC 时钟时间的功能。它应当使用内部算法来校正所提供的偏移量。
支持的硬件
===========

   * Freescale eTSEC gianfar

     - 2 个可编程极性的外部触发器时间戳（可选中断）
     - 2 个报警寄存器（可选中断）
     - 3 个周期信号（可选中断）

   * National DP83640

     - 6 个可编程为输入或输出的 GPIO
     - 6 个具有专用功能（LED/JTAG/时钟）的 GPIO 也可以用作通用输入或输出
     - GPIO 输入可以时间戳外部触发器
     - GPIO 输出可以产生周期信号
     - 1 个中断引脚

   * Intel IXP465

     - 辅助从属/主模式快照（可选中断）
     - 目标时间（可选中断）

   * Renesas (IDT) ClockMatrix™

     - 最多 4 个独立的 PHC 通道
     - 集成低通滤波器（LPF），通过 `.adjPhase` 访问（符合 ITU-T G.8273.2 规范）
     - 可编程输出周期信号
     - 可编程输入可以时间戳外部触发器
     - 通过固件（idtcm.bin）进行驱动程序和/或硬件配置
         - LPF 设置（带宽、相位限制、自动保持、物理层辅助功能，根据 ITU-T G.8273.2）
         - 可编程输出 PTP 时钟，任何频率最高可达 1GHz（提供给其他 PHY/MAC 时间戳器、参考时钟给 ASSPs/SoCs/FPGAs）
         - 锁定到 GNSS 输入，GNSS 和用户空间 PHC 控制之间的自动切换（可选）

   * NVIDIA Mellanox

     - GPIO
         - ConnectX-6 Dx 及以后某些版本的产品支持一个 GPIO，它可以时间戳外部触发器，并且还有一个 GPIO 用于产生周期信号
         - ConnectX-5 及更早版本的某些产品支持一个 GPIO，它可以配置为时间戳外部触发器或者产生周期信号
     - PHC 实例
         - 所有 ConnectX 设备都拥有自由运行计数器
         - ConnectX-6 Dx 及以后的设备拥有 UTC 格式的计数器
