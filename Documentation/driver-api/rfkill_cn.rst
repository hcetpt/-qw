===============================
rfkill - RF 关闭开关支持
===============================


.. contents::
   :depth: 2

简介
============

rfkill 子系统提供了一个通用接口，用于禁用系统中的任何无线电发射器。当一个发射器被阻止时，它不应辐射任何功率。
该子系统还提供了对按键响应的能力，并能禁用特定类型（或全部）的发射器。这适用于需要关闭发射器的情况，例如在飞机上。
rfkill 子系统有一个“硬”和“软”阻塞的概念，它们在含义上的区别不大（阻塞 == 发射器关闭），但在是否可以更改方面有所不同：

 - 硬阻塞
   只读无线电阻塞，软件无法覆盖。

 - 软阻塞
   可写无线电阻塞（不一定可读），由系统软件设置。
   
rfkill 子系统有两个参数，`rfkill.default_state` 和 `rfkill.master_switch_mode`，这些参数在 `admin-guide/kernel-parameters.rst` 中有文档说明。
实现细节
======================

rfkill 子系统主要由三个组件组成：

 * rfkill 核心，
 * 已废弃的 rfkill-input 模块（一个输入层处理器，正在被用户空间策略代码取代）以及
 * rfkill 驱动程序
rfkill 核心为内核驱动程序提供了注册其无线电发射器的 API、打开和关闭的方法，以及告知系统关于设备可能实现的硬件禁用状态的方式。
rfkill 核心代码还会通知用户空间状态变化，并提供了让用户空间查询当前状态的方法。请参阅下面的“用户空间支持”部分。
当设备处于硬阻塞状态（通过调用 `rfkill_set_hw_state()` 或从 `query_hw_block` 查询）时，会调用 `set_block()` 来进行额外的软件阻塞，但驱动程序可以忽略该方法调用，因为它们可以使用 `rfkill_set_hw_state()` 函数的返回值来同步软件状态，而不是跟踪 `set_block()` 的调用。事实上，除非硬件确实分别跟踪软阻塞和硬阻塞，否则驱动程序应该使用 `rfkill_set_hw_state()` 的返回值。
内核 API
==========

无线电发射器的驱动程序通常会实现一个 rfkill 驱动程序。
平台驱动程序可能会实现输入设备，如果 rfkill 按钮只是一个按钮的话。如果该按钮影响了硬件，则需要实现一个 rfkill 驱动程序。这也适用于平台提供了开关发射器的方法的情况。
对于某些平台，硬件状态可能在挂起/休眠期间发生变化，在这种情况下，就需要在恢复时更新rfkill核心的当前状态。
要创建一个rfkill驱动程序，驱动程序的Kconfig需要有如下配置：

	依赖于 RFKILL || !RFKILL

以确保当rfkill为模块形式时，该驱动程序不能被内置。!RFKILL的情况允许驱动程序在没有配置rfkill的情况下构建，在这种情况下所有rfkill API仍然可以使用，但将由几乎不产生编译结果的静态内联提供。
当状态发生变化时调用rfkill_set_hw_state()是必要的，对于控制能够被硬性阻塞的设备的rfkill驱动程序来说，除非它们还指定了poll_hw_block()回调（在这种情况下rfkill核心将轮询设备），否则必须这么做。除非你无法通过其他方式获取事件，否则不要这样做。
rfkill提供了每个开关的LED触发器，可以根据开关的状态来驱动LED（被阻塞时为LED_FULL，否则为LED_OFF）。

用户空间支持
=============

推荐使用的用户空间接口是/dev/rfkill，这是一个杂项字符设备，允许用户空间获取和设置rfkill设备及其集合的状态，并通知用户空间关于设备的添加和移除。API是一个简单的读写API，定义在linux/rfkill.h中，其中有一个ioctl命令可以在过渡期间关闭内核中的废弃输入处理程序。
除了这个ioctl命令外，与内核的通信是通过读取(read())和写入(write())'struct rfkill_event'实例完成的。在这个结构中，软阻塞和硬阻塞被适当地分离了（与sysfs不同，见下文），并且用户空间能够获得系统中所有rfkill设备的一致快照。此外，还可以将所有rfkill驱动程序（或指定类型的驱动程序）切换到一种状态，这也更新了热插拔设备的默认状态。
应用程序打开/dev/rfkill后，可以读取所有设备的当前状态。可以通过轮询描述符来获取热插拔或状态更改事件，或者通过监听rfkill核心框架发出的uevent来获取变化。
此外，每个rfkill设备都在sysfs中注册并发出uevent。
rfkill设备发出uevent（带有"change"动作），设置了以下环境变量：

	RFKILL_NAME
	RFKILL_STATE
	RFKILL_TYPE

这些变量的内容对应于上面解释的"name"、"state"和"type"的sysfs文件。
更多详细信息，请参阅Documentation/ABI/stable/sysfs-class-rfkill。
您没有提供需要翻译的文本。请提供需要翻译成中文的句子或词语。
