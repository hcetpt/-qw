### SPDX 许可证标识符：GPL-2.0-only

==================================
PLDM 固件闪存更新库
==================================

`pldmfw` 实现了根据 PLDM 固件更新标准来使用设备上的闪存进行更新的功能。
<https://www.dmtf.org/documents/pmci/pldm-firmware-update-specification-100>
.. toctree::
   :maxdepth: 1

   file-format
   driver-ops

==================================
`pldmfw` 库概述
==================================

`pldmfw` 库旨在被设备驱动程序用于基于遵循 PLDM 标准的固件文件实现设备闪存更新。
它是通过一个操作表实现的，该操作表允许设备驱动程序提供底层设备特定功能。
`pldmfw` 实现了解析 PLDM 固件文件的压缩二进制格式到数据结构中的逻辑，并使用提供的函数操作来判断固件文件是否与设备匹配。如果匹配，则使用由设备驱动程序提供的设备特定实现将记录和组件数据发送给固件。一旦设备固件指示可以执行更新，固件数据就被发送到设备以进行编程。

解析 PLDM 文件
=====================

PLDM 文件格式使用压缩的二进制数据，大多数多字节字段都存储为小端格式。多个数据项长度可变，包括版本字符串、记录数和组件数。
由于这些原因，直接索引记录、记录描述符或组件并不直观。
为了避免大量访问压缩的二进制数据，`pldmfw` 库解析并提取这些数据到更简单的结构中以便于访问。
为了安全地处理固件文件，避免了对多字节字段的未对齐访问，并正确地从小端格式转换到 CPU 主机格式。此外，记录、描述符和组件被存储在链表中。

执行闪存更新
=========================

为了执行闪存更新，`pldmfw` 模块执行以下步骤：

1. 解析固件文件以获取记录和组件信息。
2. 遍历记录并确定文件中的任何记录是否与设备匹配。首次匹配的记录将被使用。
3. 如果匹配的记录提供了包数据，则将此包数据发送到设备。
4. 对于记录中显示的每个组件，将组件数据发送到设备。对于每个组件，固件可能会回应指示更新是否适用的信息。如果任何组件不适用，则取消更新。
5. 对于每个组件，将二进制数据发送到设备的固件进行更新。
6. 在所有组件编程完成后，执行任何最终的特定于设备的操作以完成更新。
