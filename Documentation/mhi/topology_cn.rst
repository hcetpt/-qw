SPDX 许可证标识符: GPL-2.0

============
MHI 拓扑结构
============

本文档提供了有关内核中 MHI 拓扑建模和表示的信息。

MHI 控制器
--------------

MHI 控制器驱动程序管理与 MHI 客户端设备（如外部调制解调器和 WiFi 芯片组）的交互。它也是 MHI 总线的主控器，负责管理主机与设备之间的物理连接。然而，它并不参与实际的数据传输，因为数据传输由物理总线（如 PCIe）来处理。每个控制器驱动程序会根据客户端设备类型暴露通道和事件。
以下是 MHI 控制器驱动程序的作用：

* 打开物理总线并建立到设备的连接
* 配置中断请求 (IRQ)、输入输出内存管理单元 (IOMMU) 和输入输出内存映射 (IOMEM)
* 分配 `struct mhi_controller` 并使用 `mhi_register_controller` 注册到 MHI 总线框架，并配置通道和事件
* 启动上电和关机序列
* 启动设备的挂起和恢复电源管理操作

MHI 设备
----------

MHI 设备是一个逻辑设备，最多绑定两个 MHI 通道以进行双向通信。一旦 MHI 处于上电状态，MHI 核心将根据控制器暴露的通道配置创建 MHI 设备。每个通道或一组通道可以有一个单独的 MHI 设备。
每个支持的设备在以下路径中枚举：

        /sys/bus/mhi/devices/

MHI 驱动程序
----------

MHI 驱动程序是绑定到一个或多个 MHI 设备的客户端驱动程序。MHI 驱动程序通过 MHI 发送和接收高层协议数据包，例如 IP 数据包、调制解调器控制消息和诊断消息。MHI 核心会将 MHI 设备绑定到 MHI 驱动程序。
每个支持的驱动程序在以下路径中枚举：

        /sys/bus/mhi/drivers/

以下是 MHI 驱动程序的作用：

* 使用 `mhi_driver_register` 将驱动程序注册到 MHI 总线框架
* 通过调用 `mhi_prepare_for_transfer` 准备设备进行传输
* 通过调用 `mhi_queue_transfer` 启动数据传输
一旦数据传输完成，调用 mhi_unprepare_from_transfer 来结束数据传输。
