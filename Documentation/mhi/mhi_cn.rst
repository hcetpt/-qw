SPDX 许可证标识符: GPL-2.0

==========================
MHI（调制解调器主机接口）
==========================

本文档提供了关于 MHI 协议的信息。
概述
========

MHI 是由高通创新中心有限公司开发的一种协议。它用于使主机处理器通过高速外围总线或共享内存来控制和与调制解调设备通信。尽管 MHI 可以很容易地适应任何外围总线，但它主要与基于 PCIe 的设备一起使用。MHI 在物理总线上提供逻辑通道，并允许通过至少一个这些逻辑通道传输调制解调器协议，如 IP 数据包、调制解调器控制消息和诊断信息。此外，MHI 协议提供了数据确认功能，并通过一个或多个逻辑通道管理调制解调器的电源状态。

MHI 内部结构
=============

MMIO
----

MMIO（存储器映射 I/O）包括一组设备硬件中的寄存器，这些寄存器通过像 PCIe 这样的外围总线映射到主机内存空间。以下是 MMIO 寄存器空间的主要组成部分：

MHI 控制寄存器：访问 MHI 配置寄存器

MHI BHI 寄存器：BHI（引导主机接口）寄存器由主机在 MHI 初始化之前用于向设备下载固件

信道门铃数组：信道门铃（DB）寄存器由主机用于通知设备有新的工作要做

事件门铃数组：与事件上下文数组相关联，事件门铃（DB）寄存器由主机用于通知设备有新事件可用

调试寄存器：一组寄存器和计数器，由设备用来向主机暴露调试信息，例如性能、功能和稳定性

数据结构
---------------

所有 MHI 使用的数据结构都在主机系统的内存中。通过物理接口，设备可以访问这些数据结构。主机系统内存区域中的 MHI 数据结构和数据缓冲区被映射给设备

信道上下文数组：所有信道配置都组织在信道上下文数据数组中

传输环：主机使用传输环来调度信道的工作项。传输环是以传输描述符（TD）形式组织的循环队列。
事件上下文数组：所有事件配置都组织在事件上下文数据数组中。
事件环：设备使用事件环向主机发送完成和状态转换消息。

命令上下文数组：所有命令配置都组织在命令上下文数据数组中。
命令环：主机使用命令环向设备发送MHI命令。命令环按照命令描述符（CD）的循环队列方式组织。

通道
--------

MHI通道是主机与设备之间的逻辑单向数据管道。MHI中的通道概念类似于USB中的端点。MHI支持最多256个通道，但是特定设备实现可能支持的通道数量少于最大值。
两个单向通道及其关联的传输环形成一个双向数据管道，可用于高层协议传输应用数据包（如IP数据包、调制解调器控制消息、诊断消息等）。每个通道关联一个传输环。

传输环
--------------

主机与设备之间的传输由通道组织并由传输描述符（TD）定义。TD通过传输环管理，这些传输环定义在主机与设备之间的每个通道上，并驻留在主机内存中。TD包含一个或多个环元素（或传输块）：

```
[读指针 (RP)] -----------> [环元素] } TD
[写指针 (WP)]-           [环元素]
                     -    [环元素]
                      ---->[环元素]
                             [环元素]
```

以下是传输环的基本使用方法：

* 主机分配传输环的内存
* 主机在对应的通道上下文中设置基地址指针、读指针和写指针
* 当RP == WP时，环被认为是空的
* 当WP + 1 == RP时，环被认为是满的
* RP 指示设备将要处理的下一个元素
* 当主机有新的缓冲区需要发送时，它会更新带有缓冲信息的环形元素，将 WP 增加到下一个元素，并触发相应的通道 DB

事件环
------

设备向主机报告的事件组织在事件环中，并由事件描述符（ED）定义。事件环用于设备向主机报告数据传输完成状态、命令完成状态和状态变化等事件。事件环是一个位于主机内存中的 ED 数组。每个 ED 包含一个或多个环形元素（或传输块）：

        [读指针 (RP)] ----------->[环形元素] } ED
        [写指针 (WP)]-           [环形元素]
                             -          [环形元素]
                              --------->[环形元素]
                                        [环形元素]

以下是事件环的基本使用方法：

* 主机分配事件环所需的内存
* 主机设置对应通道上下文中的基地址指针、读指针和写指针
* 主机和设备各自保留一份 RP 和 WP 的本地副本
* 当 WP + 1 == RP 时，环被认为是空的（没有待处理的事件）
* 当 RP == WP 时，环被认为是满的（充满事件）
* 当有新事件需要发送时，设备更新 RP 所指向的 ED，将 RP 增加到下一个元素，并触发中断

环形元素
------------

环形元素是一种用于在主机和设备之间传输单个数据块的数据结构。传输环形元素类型包含一个缓冲区指针、缓冲区大小以及额外的控制信息。其他类型的环形元素可能只包含控制和状态信息。对于单缓冲区操作，一个环形描述符由一个元素组成。对于大型多缓冲区操作（如分散/聚集），可以将多个元素链接起来形成更长的描述符。

MHI 操作
==============

MHI 状态
----------

MHI_STATE_RESET
~~~~~~~~~~~~~~~
上电或硬件复位后，MHI 处于复位状态。此时不允许主机访问设备的 MMIO 寄存器空间。
MHI_STATE_READY
~~~~~~~~~~~~~~~
MHI 已准备好进行初始化。主机可以通过编程 MMIO 寄存器开始 MHI 初始化。

MHI_STATE_M0
~~~~~~~~~~~~
MHI 在设备中正在运行并可操作。主机可以通过发出通道启动命令来启动通道。

MHI_STATE_M1
~~~~~~~~~~~~
MHI 操作被设备暂停。当设备检测到物理接口在预设时间内没有活动时，会进入此状态。

MHI_STATE_M2
~~~~~~~~~~~~
MHI 处于低功耗状态。MHI 操作被暂停，设备可能会进入更低的功耗模式。

MHI_STATE_M3
~~~~~~~~~~~~
MHI 操作被主机停止。当主机暂停 MHI 操作时，会进入此状态。

MHI 初始化
--------------

系统启动后，通过物理接口枚举设备。
在 PCIe 的情况下，设备被枚举并分配了 BAR-0 作为设备的 MMIO 寄存器空间。为了在设备中初始化 MHI，主机执行以下操作：

* 分配用于事件、通道和命令数组的 MHI 上下文
* 初始化上下文数组，并准备中断
* 等待设备进入 READY 状态
* 编程 MHI MMIO 寄存器并将设备设置为 MHI_M0 状态
等待设备进入 M0 状态
MHI 数据传输
------------

MHI 数据传输由主机发起，将数据传输到设备。以下是主机向设备传输数据时执行的操作序列：

* 主机准备带有缓冲区信息的传输描述符（TD）
* 主机增加相应传输环的写指针（WP）
* 主机触发通道门铃寄存器（DB 寄存器）
* 设备唤醒以处理传输描述符（TD）
* 设备通过更新结束描述符（ED）为已处理的传输描述符生成完成事件
* 设备增加相应事件环的读指针（RP）
* 设备触发中断请求（IRQ）以唤醒主机
* 主机唤醒并检查事件环以获取完成事件
* 主机更新对应事件环的写指针（WP），以指示数据传输已成功完成
