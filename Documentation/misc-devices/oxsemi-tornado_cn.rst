SPDX许可证标识符: GPL-2.0

====================================================================
关于Oxford Semiconductor PCIe (Tornado) 950串口设备的说明
====================================================================

Oxford Semiconductor PCIe (Tornado) 950串口设备由一个固定的62.5MHz时钟输入驱动，该输入来源于100MHz的PCI Express时钟。波特率生成器产生的波特率通过将该输入频率除以可设置为1到63.875（增量为0.125）的时钟预分频器获得，然后使用与原始8250相同的16位除数来进一步除以1到65535之间的值。最后，使用一个可编程的过采样率，其值可以从4到16，进一步除以该频率，从而确定实际使用的波特率。这样可以获得从15625000bps到0.933bps的波特率。

默认情况下，过采样率设置为16，时钟预分频器设置为33.875，这意味着用于16位除数参考频率为115313.653，这与原始8250使用相同值时的频率115200足够接近，因此可以使用相同的除数值来获得请求的波特率，而无需软件了解额外的时钟控制功能。

过采样率通过TCR寄存器编程，时钟预分频器通过CPR/CPR2寄存器对编程。要将预分频器从默认值33.875切换出去，需要显式启用增强模式，即设置EFR寄存器的第4位。在该模式下，设置MCR寄存器的第7位可以启用预分频器，否则将绕过预分频器，就像设置了值1一样。

此外，向CPR写入任何值都会为了兼容旧软件而清除CPR2，这些旧软件是为没有CPR2中额外预分频器第9位的老式常规PCI Oxford Semiconductor设备编写的。因此，必须按照正确的顺序编程CPR/CPR2寄存器对。

通过这些参数，可以获得从15625000bps到1bps的波特率，对于标准和许多非标准波特率，都可以实现精确或高度准确的实际比特率。

以下是标准和一些非标准波特率的详细数据（包括Oxford Semiconductor文档中提到的数据），给出请求的波特率(r)、实际产生的波特率(a)、与请求波特率的偏差(d)，以及过采样率(tcr)、时钟预分频器(cpr)和除数(div)：

```
r: 15625000, a: 15625000.00, d:  0.0000%, tcr:  4, cpr:  1.000, div:     1
r: 12500000, a: 12500000.00, d:  0.0000%, tcr:  5, cpr:  1.000, div:     1
r: 10416666, a: 10416666.67, d:  0.0000%, tcr:  6, cpr:  1.000, div:     1
r:  8928571, a:  8928571.43, d:  0.0000%, tcr:  7, cpr:  1.000, div:     1
r:  7812500, a:  7812500.00, d:  0.0000%, tcr:  8, cpr:  1.000, div:     1
r:  4000000, a:  4000000.00, d:  0.0000%, tcr:  5, cpr:  3.125, div:     1
r:  3686400, a:  3676470.59, d: -0.2694%, tcr:  8, cpr:  2.125, div:     1
r:  3500000, a:  3496503.50, d: -0.0999%, tcr: 13, cpr:  1.375, div:     1
r:  3000000, a:  2976190.48, d: -0.7937%, tcr: 14, cpr:  1.500, div:     1
r:  2500000, a:  2500000.00, d:  0.0000%, tcr: 10, cpr:  2.500, div:     1
r:  2000000, a:  2000000.00, d:  0.0000%, tcr: 10, cpr:  3.125, div:     1
r:  1843200, a:  1838235.29, d: -0.2694%, tcr: 16, cpr:  2.125, div:     1
r:  1500000, a:  1492537.31, d: -0.4975%, tcr:  5, cpr:  8.375, div:     1
r:  1152000, a:  1152073.73, d:  0.0064%, tcr: 14, cpr:  3.875, div:     1
r:   921600, a:   919117.65, d: -0.2694%, tcr: 16, cpr:  2.125, div:     2
r:   576000, a:   576036.87, d:  0.0064%, tcr: 14, cpr:  3.875, div:     2
r:   460800, a:   460829.49, d:  0.0064%, tcr:  7, cpr:  3.875, div:     5
r:   230400, a:   230414.75, d:  0.0064%, tcr: 14, cpr:  3.875, div:     5
r:   115200, a:   115207.37, d:  0.0064%, tcr: 14, cpr:  1.250, div:    31
r:    57600, a:    57603.69, d:  0.0064%, tcr:  8, cpr:  3.875, div:    35
r:    38400, a:    38402.46, d:  0.0064%, tcr: 14, cpr:  3.875, div:    30
r:    19200, a:    19201.23, d:  0.0064%, tcr:  8, cpr:  3.875, div:   105
r:     9600, a:     9600.06, d:  0.0006%, tcr:  9, cpr:  1.125, div:   643
r:     4800, a:     4799.98, d: -0.0004%, tcr:  7, cpr:  2.875, div:   647
r:     2400, a:     2400.02, d:  0.0008%, tcr:  9, cpr:  2.250, div:  1286
r:     1200, a:     1200.00, d:  0.0000%, tcr: 14, cpr:  2.875, div:  1294
r:      300, a:      300.00, d:  0.0000%, tcr: 11, cpr:  2.625, div:  7215
r:      200, a:      200.00, d:  0.0000%, tcr: 16, cpr:  1.250, div: 15625
r:      150, a:      150.00, d:  0.0000%, tcr: 13, cpr:  2.250, div: 14245
r:      134, a:      134.00, d:  0.0000%, tcr: 11, cpr:  2.625, div: 16153
r:      110, a:      110.00, d:  0.0000%, tcr: 12, cpr:  1.000, div: 47348
r:       75, a:       75.00, d:  0.0000%, tcr:  4, cpr:  5.875, div: 35461
r:       50, a:       50.00, d:  0.0000%, tcr: 16, cpr:  1.250, div: 62500
r:       25, a:       25.00, d:  0.0000%, tcr: 16, cpr:  2.500, div: 62500
r:        4, a:        4.00, d:  0.0000%, tcr: 16, cpr: 20.000, div: 48828
r:        2, a:        2.00, d:  0.0000%, tcr: 16, cpr: 40.000, div: 48828
r:        1, a:        1.00, d:  0.0000%, tcr: 16, cpr: 63.875, div: 61154
```

当波特率基准设置为15625000，并且由于`serial8250_get_baud_rate`强加了无符号16位UART_DIV_MAX限制时，标准波特率低于300bps将无法通过常规方式获取，例如200bps需要将波特率基准除以78125，这超出了无符号16位范围。可以通过历史上的`spd_cust`特性来编码预分频器、过采样率和时钟除数(DLM/DLL)的值，从而在需要时获得这些波特率：

```
 31 29 28             20 19   16 15                            0
 +-----+-----------------+-------+-------------------------------+
 |0 0 0|    CPR2:CPR     |  TCR  |            DLM:DLL            |
 +-----+-----------------+-------+-------------------------------+
```

使用这种编码值作为`struct serial_struct`中的`custom_divisor`字段，并设置`ASYNC_SPD_CUST`标志，通过`TIOCSSERIAL` ioctl(2)传递给内核，例如使用setserial(8)工具及其`divisor`和`spd_cust`参数，然后选择38400bps的波特率。请注意，TCR值为0表示过采样率为16，CPR2/CPR中的预分频器值小于1将被驱动程序钳制为1。

例如，值0x1f4004e2将分别设置CPR2/CPR、TCR和DLM/DLL为0x1f4、0x0和0x04e2，选择预分频器值、过采样率和时钟除数分别为62.500、16和1250。这些参数将设置串口波特率为62500000 / 62.500 / 1250 / 16 = 50bps。

Maciej W. Rozycki  <macro@orcam.me.uk>

.. [OX200] "OXPCIe200 PCI Express Multi-Port Bridge", Oxford Semiconductor, Inc., DS-0045, 10 Nov 2008, Section "950 Mode", pp. 64-65

.. [OX952] "OXPCIe952 PCI Express Bridge to Dual Serial & Parallel Port", Oxford Semiconductor, Inc., DS-0046, Mar 06 08, Section "950 Mode", p. 20

.. [OX954] "OXPCIe954 PCI Express Bridge to Quad Serial Port", Oxford Semiconductor, Inc., DS-0047, Feb 08, Section "950 Mode", p. 20

.. [OX958] "OXPCIe958 PCI Express Bridge to Octal Serial Port", Oxford Semiconductor, Inc., DS-0048, Feb 08, Section "950 Mode", p. 20
