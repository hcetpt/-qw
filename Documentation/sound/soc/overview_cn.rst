============= 
ALSA 系统级芯片层概览
============= 

ALSA 系统级芯片 (ASoC) 层的整体项目目标是为嵌入式系统级芯片处理器（例如 pxa2xx、au1x00、iMX 等）和便携式音频编解码器提供更好的 ALSA 支持。在 ASoC 子系统出现之前，内核中已经有了一些针对 SoC 音频的支持，但是存在一些局限性：  

  * 编解码器驱动程序通常与底层的 SoC CPU 紧密耦合。这并不理想，并且会导致代码重复——例如，Linux 在四种不同的 SoC 平台上具有不同的 wm8731 驱动程序。
  * 没有标准方法来指示用户触发的音频事件（例如耳机/麦克风插入、插入事件后检测到耳机/麦克风）。这些是在便携式设备上常见的事件，通常需要特定于机器的代码在这样的事件之后重新路由音频、启用放大器等。
  * 驱动程序倾向于在播放（或录制）音频时为整个编解码器供电。这对于 PC 来说是好的，但在便携式设备上往往会浪费大量电力。此外，也没有通过更改编解码器过采样率、偏置电流等方式节省电力的支持。

ASoC 设计
=========

ASoC 层旨在解决这些问题，并提供以下功能：  

  * 编解码器独立性。允许在其他平台和机器上重用编解码器驱动程序。
  * 简化编解码器和 SoC 之间的 I2S/PCM 音频接口设置。每个 SoC 接口和编解码器都会向核心注册其音频接口能力，并在应用程序硬件参数已知后进行匹配和配置。
  * 动态音频电源管理 (DAPM)。DAPM 始终自动将编解码器设置为其最低功耗状态。这包括根据编解码器内部音频路由和任何活动流启动/关闭内部电源模块。
  * 减少爆音和咔哒声。通过正确顺序启动/关闭编解码器（包括使用数字静音）可以减少爆音和咔哒声。ASoC 向编解码器发出何时改变电源状态的信号。
  * 机器特有控制：允许机器向声卡添加控制（例如扬声器放大器的音量控制）。
为了实现这一切，ASoC（Audio System on Chip）基本上将嵌入式音频系统拆分成多个可重用的组件驱动程序：

* 编解码器类驱动程序：编解码器类驱动程序与平台无关，包含了音频控制、音频接口功能、编解码器DAPM（动态电源管理）定义和编解码器IO函数。如果需要的话，此类还可以扩展到蓝牙（BT）、调频（FM）和调制解调器（MODEM）集成电路（IC）。编解码器类驱动程序应该是通用代码，可以在任何架构和机器上运行。
* 平台类驱动程序：平台类驱动程序包括音频DMA引擎驱动程序、数字音频接口（DAI）驱动程序（例如I²S、AC97、PCM）以及该平台上的任何音频DSP驱动程序。
* 机器类驱动程序：机器驱动程序类作为粘合层，描述并绑定其他组件驱动程序以形成ALSA（Advanced Linux Sound Architecture，高级Linux声音架构）“声卡设备”。它处理任何特定于机器的控制和机器级别的音频事件（例如，在开始播放时打开放大器）。
