使用M-Audio Audiophile USB与ALSA和JACK的指南
========================================================

版本 1.5

Thibault Le Meur <Thibault.LeMeur@supelec.fr>

本文档是关于如何使用M-Audio Audiophile USB (tm) 设备与ALSA和JACK的指南。

历史记录
=======

* 版本 1.4 - Thibault Le Meur（2007-07-11）

  - 添加了由Hakan Lennestal <Hakan.Lennestal@brfsodrahamn.se> 发现的16位模式下低字节序特性。
  - 修改文档结构。

* 版本 1.5 - Thibault Le Meur（2007-07-12）
  - 添加了AC3/DTS直通信息。

Audiophile USB规格及正确用法
======================================

此部分是对设备功能和限制的重要说明。

该设备有4个音频接口和2个MIDI端口：

 * 模拟立体声输入（Ai）

   - 此端口支持两对线路电平音频输入（1/4" TS 和 RCA）。
   - 当连接1/4" TS（插孔）时，RCA端口将被禁用。

 * 模拟立体声输出（Ao）
 * 数字立体声输入（Di）
 * 数字立体声输出（Do）
 * MIDI 输入（Mi）
 * MIDI 输出（Mo）

内部DAC/ADC具有以下特性：

* 采样深度为16位或24位
* 采样率为8kHz到96kHz
* 两个接口不能同时使用不同的采样深度
此外，Audiophile USB文档给出了以下警告：
  在切换采样深度之前，请退出任何正在运行的音频应用程序。

由于USB 1.1带宽限制，根据所选音频模式的不同，可以同时激活的接口数量有限：

 * 16位/48kHz ==> 4个输入通道 + 4个输出通道

   - Ai + Ao + Di + Do

 * 24位/48kHz ==> 4个输入通道 + 2个输出通道 或 2个输入通道 + 4个输出通道

   - Ai + Ao + Do 或 Ai + Di + Ao 或 Ai + Di + Do 或 Di + Ao + Do

 * 24位/96kHz ==> 2个输入通道 或 2个输出通道（仅半双工）

   - Ai 或 Ao 或 Di 或 Do

数字接口的重要事实：
--------------------------------------------

 * Do 端口还支持环绕编码的AC-3和DTS直通，尽管我没有在Linux下进行过测试。

   - 注意在这种设置中只能启用Do接口。

 * 除了录制数字音频流外，启用Di端口还可以使设备同步到外部采样时钟。

   - 因此，只有在连接了活动数字源的情况下才能启用Di端口。
   - 当没有连接数字源时启用Di可能会导致同步错误（例如以奇怪的采样率播放声音）。

Audiophile USB在ALSA中的MIDI支持
===================================

加载以下模块后，Audiophile USB MIDI端口将自动得到支持：

 * snd-usb-audio
 * snd-seq-midi

无需额外设置。

Audiophile USB在ALSA中的音频支持
====================================

Audiophile USB设备的音频功能由snd-usb-audio模块处理。此模块可以在默认模式（没有任何设备特定参数）下工作，或者在带有设备特定参数“device_setup”的“高级”模式下工作。
默认ALSA驱动模式
------------------------

snd-usb-audio驱动程序的默认行为是在启动时列出设备能力，并在需要时激活所需的模式：例如，如果用户在一个24位深度模式下录音，然后立即切换到16位深度模式，snd-usb-audio模块会动态重新配置设备。
这种方法的优点是让驱动程序能够根据用户需求自动切换采样率和深度。然而，那些在Windows下使用该设备的人知道这不是设备的工作方式：在Windows下，必须在使用m-audio控制面板切换设备工作模式之前关闭应用程序。因此，正如我们将在下一节中看到的那样，这种默认ALSA驱动模式可能导致设备配置错误。
现在让我们回到默认ALSA驱动模式。在这种情况下，Audiophile接口映射到alsa pcm设备的方式如下（假设设备索引为1）：

 * hw:1,0 是 Ao 在播放模式下，Di 在捕获模式下
 * hw:1,1 是 Do 在播放模式下，Ai 在捕获模式下
 * hw:1,2 是 Do 在 AC3/DTS 直通模式下

在此模式下，设备使用大端字节编码，因此支持的音频格式为S16_BE（16位深度模式）和S24_3BE（24位深度模式）。
唯一例外是hw:1,2端口，据报道它是小端字节序（假定支持S16_LE），但实际上只处理S16_BE流。
这已在内核2.6.23及以上版本中修复，现在在默认驱动模式下hw:1,2接口报告为大端字节序。
示例：

* 播放一个编码为S24_3BE的原始文件到Ao端口：

  % aplay -D hw:1,0 -c2 -t raw -r48000 -fS24_3BE test.raw

* 从Ai端口录制一个编码为S24_3BE的原始文件：

  % arecord -D hw:1,1 -c2 -t raw -r48000 -fS24_3BE test.raw

* 播放一个编码为S16_BE的原始文件到Do端口：

  % aplay -D hw:1,1 -c2 -t raw -r48000 -fS16_BE test.raw

* 播放一个ac3样本文件到Do端口：

  % aplay -D hw:1,2 --channels=6 ac3_S16_BE_encoded_file.raw

如果您对默认的Alsa驱动程序模式感到满意，并且没有遇到任何问题，则可以跳过以下章节：
高级模块设置
---------------------

由于上述硬件限制，Alsa驱动程序在默认模式下进行的设备初始化可能会导致设备状态损坏。例如，一个特别烦人的问题是，从Ai接口捕获的声音听起来失真（好像音量增益过高）。
对于有此问题的人，snd-usb-audio模块有一个名为`device_setup`的新模块参数（此参数是在内核版本2.6.17中引入的）。

初始化Audiophile USB的工作模式
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

就Audiophile USB设备而言，此值允许用户指定：

* 采样深度
* 采样率
* 是否使用Di端口

当使用`device_setup=0x00`初始化时，snd-usb-audio模块的行为与省略该参数时相同（参见“默认Alsa驱动程序模式”部分）。

其他模式在以下子节中描述
16位模式
~~~~~~~~~~~~

支持的两种模式是：

* `device_setup=0x01`

  - 16位48kHz模式，Di禁用
  - Ai、Ao、Do可以同时使用
  - hw:1,0在捕获模式下不可用
  - hw:1,2不可用

* `device_setup=0x11`

  - 16位48kHz模式，Di启用
  - Ai、Ao、Di、Do可以同时使用
  - hw:1,0在捕获模式下可用
  - hw:1,2不可用

在此模式下，设备仅以16位模式运行。在内核2.6.23之前，这些设备被报告为大端模式，但实际上它们是小端模式，因此播放文件需要使用以下命令：

  % aplay -D hw:1,1 -c2 -t raw -r48000 -fS16_BE test_S16_LE.raw

其中“test_S16_LE.raw”实际上是小端模式的样本文件。
感谢Hakan Lennestal（他发现了这些模式下的小端模式），已经提交了一个修复程序（预计将在内核2.6.23中发布），Alsa现在报告小端模式接口。因此，现在播放文件只需使用以下命令：

  % aplay -D hw:1,1 -c2 -t raw -r48000 -fS16_LE test_S16_LE.raw

24位模式
~~~~~~~~~~~~

支持的三种模式是：

* `device_setup=0x09`

  - 24位48kHz模式，Di禁用
  - Ai、Ao、Do可以同时使用
  - hw:1,0在捕获模式下不可用
  - hw:1,2不可用

* `device_setup=0x19`

  - 24位48kHz模式，Di启用
  - 可以同时使用{Ai、Ao、Di、Do}中的三个端口
  - hw:1,0在捕获模式下可用，并且必须将活动数字源连接到Di
  - hw:1,2不可用

* `device_setup=0x0D`或`0x10`

  - 24位96kHz模式
  - 此模式下默认启用Di，但不需要连接到活动源
  - 只能同时使用{Ai、Ao、Di、Do}中的一个端口
  - hw:1,0在捕获模式下可用
  - hw:1,2不可用

在此模式下，设备仅符合大端模式（有关aplay命令示例，请参见“默认Alsa驱动程序模式”部分）

AC3带DTS直通模式
~~~~~~~~~~~~~~~~~~~~~~~~

感谢Hakan Lennestal，我收到一份报告说此模式有效：

* `device_setup=0x03`

  - 16位48kHz模式，仅启用Do端口
  - AC3带DTS直通
  - 注意，在此设置下，Do端口映射到pcm设备hw:1,0

在此模式下用于播放AC3/DTS编码的.wav文件的命令行：

  % aplay -D hw:1,0 --channels=6 ac3_S16_LE_encoded_file.raw

如何使用`device_setup`参数
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

可以在以下方式之一提供该参数：

* 通过手动探测设备（作为root用户）：

  # modprobe -r snd-usb-audio  
  # modprobe snd-usb-audio index=1 device_setup=0x09

* 或者在模块配置文件（通常位于/etc/modprobe.d/目录中的.conf文件）中配置模块选项：

      alias snd-card-1 snd-usb-audio  
      options snd-usb-audio index=1 device_setup=0x09

初始化设备时的注意事项
-------------------------------------

* 正确初始化设备需要在设备开启之前向模块提供`device_setup`。因此，如果使用上述“手动探测”方法，请注意在初始化之后再打开设备。
* 如果不遵守这一点，将会导致设备配置错误。在这种情况下，请关闭设备，卸载snd-usb-audio模块，然后再次加载带有正确`device_setup`参数的模块，最后（并且只有此时）再打开设备。
* 如果您已使用有效模式正确初始化了设备，然后想要切换到另一个模式（可能具有不同的采样深度），请也使用以下步骤：

  - 首先关闭设备
  - 卸载snd-usb-audio模块（modprobe -r）
  - 更改`/etc/modprobe.d/*.conf`中的`device_setup`参数
  - 打开设备

* 对于此问题，内核2.6.23中已应用了一种解决方法，但这可能不足以确保设备初始化的“稳定性”。

黑客的技术细节
-----------------------------

本节适用于希望了解设备内部细节以及Alsa如何支持它的黑客。
Audiophile USB的`device_setup`结构
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

如果您想了解Audiophile USB的`device_setup`魔法数字，您需要一些基本的二进制计算知识。但是，这并不是使用该参数所必需的，您可以跳过此部分。
device_setup是一个字节长，其结构如下所示：

```
+---+---+---+---+---+---+---+---+
| b7| b6| b5| b4| b3| b2| b1| b0|
+---+---+---+---+---+---+---+---+
| 0 | 0 | 0 | Di|24B|96K|DTS|SET|
+---+---+---+---+---+---+---+---+
```

其中：

 * b0是`SET`位

   - 如果device_setup已初始化，则必须设置此位

 * b1是`DTS`位

   - 仅当使用带有DTS/AC3的数字输出时才设置此位
   - 此配置未经过测试

 * b2是采样率选择标志

   - 当设置为`1`时，采样率范围为48.1-96kHz
   - 否则，采样率范围为8-48kHz

 * b3是比特深度选择标志

   - 当设置为`1`时，样本长度为24位
   - 否则，样本长度为16位
   - 注意b2隐含了b3，因为96kHz模式仅支持24位样本

 * b4是数字输入标志

   - 当设置为`1`时，设备假定已连接了一个活动的数字源
   - 如果端口上没有看到任何源，则不应启用Di（这会导致同步问题）
   - b4由b2隐含（由于一次只有一个端口被启用，因此不会发生同步错误）

 * b5到b7保留供将来使用，并且必须设置为`0`

   - 可能会成为Ao、Do、Ai，分别对应于b7、b6、b4

注意：

 * 对你给device_setup的值没有任何检查

   - 例如选择0x05（16位96kHz）将回退到0x09，因为b2隐含了b3。但是/var/log/messages中_不会有警告_

 * 由于USB总线限制导致的硬件约束没有进行检查

   - 选择b2将为所有接口准备24位/96kHz，但你只能同时使用一个

USB实现细节
~~~~~~~~~~~~~~~~~~~~

如果你对驱动程序破解不感兴趣，可以安全地跳过此部分。
本节描述了设备的一些内部方面，并总结了通过监视Windows和Linux驱动程序获得的数据。
M-Audio Audiophile USB有7个USB接口：
一个“USB接口”：

 * USB接口编号0
 * USB接口编号1

   - 音频控制功能

 * USB接口编号2

   - 模拟输出

 * USB接口编号3

   - 数字输出

 * USB接口编号4

   - 模拟输入

 * USB接口编号5

   - 数字输入

 * USB接口编号6

   - 符合MIDIMAN怪癖的MIDI接口

每个接口都有5个替代设置（AltSet 1,2,3,4,5），除了：

 * 接口3（数字输出）有一个额外的AltSet编号6
 * 接口5（数字输入）没有AltSet编号3和5

以下是这些替代设置能力的简短描述：

* AltSettings 1对应于

  - 24位深度，48.1-96kHz采样模式
  - 自适应播放（Ao和Do），同步捕获（Ai），或异步捕获（Di）

* AltSettings 2对应于

  - 24位深度，8-48kHz采样模式
  - 异步捕获和播放（Ao、Ai、Do、Di）

* AltSettings 3对应于

  - 24位深度，8-48kHz采样模式
  - 同步捕获（Ai）和自适应播放（Ao、Do）

* AltSettings 4对应于

  - 16位深度，8-48kHz采样模式
  - 异步捕获和播放（Ao、Ai、Do、Di）

* AltSettings 5对应于

  - 16位深度，8-48kHz采样模式
  - 同步捕获（Ai）和自适应播放（Ao、Do）

* AltSettings 6对应于

  - 16位深度，8-48kHz采样模式
  - 同步播放（Do），音频格式类型III IEC1937_AC-3

为了确保设备正确初始化，驱动程序*必须*知道设备将如何使用：

 * 如果选择了DTS，则仅需注册接口2与AltSet编号6
 * 如果使用96KHz，则仅需选择每个接口的AltSet编号1
 * 如果使用24位/48KHz样本，则如果连接了数字输入，则应使用AltSet 2；如果没有连接数字输入，则只使用AltSet编号3
 * 如果使用16位/48KHz样本，则如果连接了数字输入，则应使用AltSet 4；如果没有连接数字输入，则只使用AltSet编号5

当device_setup作为参数传递给snd-usb-audio模块时，parse_audio_endpoints函数使用了一个称为`audiophile_skip_setting_quirk`的怪癖，以防止将不符合device_setup的AltSettings注册到驱动程序中。

Audiophile USB和Jack支持
=================================

本节讨论在Jack中支持Audiophile USB设备的情况。
使用Jackd与该设备时存在两个主要潜在问题：

* 在24位模式下支持Big-Endian设备
* 支持4进/4出通道

直接在Jackd中支持
-------------------

Jack仅在最近版本中支持Big-Endian设备（感谢Andreas Steinmetz的第一个Big-Endian补丁）。我不记得确切何时发布了对Jackd的支持，但可以说，在Jackd版本0.103.0中它几乎可用（仅有一个小bug影响16位Big-Endian设备，但既然你已经仔细阅读了上面的段落，你现在使用内核>=2.6.23，你的16位设备现在已经是Little Endian;-)）
你可以用以下命令运行Jackd进行播放和录音：
```
% jackd -R -dalsa -Phw:1,0 -r48000 -p128 -n2 -D -Chw:1,1
```

使用Alsa plughw
------------------

如果你没有安装最新的Jackd，你可以退回到使用Alsa `plug`转换器。
例如，这里有一种方法来运行具有2个播放通道的Ao和2个从Ai捕获的通道的Jack：
```
% jackd -R -dalsa -dplughw:1 -r48000 -p256 -n2 -D -Cplughw:1,1
```

然而，你可能会看到以下警告消息：
  看起来你在使用ALSA软件“plug”层，可能是使用了ALSA设备“默认”的结果。这比实际效率要低。考虑使用硬件设备而不是使用plug层。

在Jack中获取2个输入和/或输出接口
--------------------------------------

如你所见，这样启动Jack服务器只会启用1个立体声输入（Di或Ai）和1个立体声输出（Ao或Do）。
这是由于以下限制：

* Jack一次只能打开一个捕获设备和一个播放设备
* Audiophile USB被视为2（或3）个Alsa设备：hw:1,0，hw:1,1（可选hw:1,2）

如果你想在Jack中获取Ai+Di和/或Ao+Do支持，你需要将Alsa设备组合成一个逻辑上的“复杂”设备。
如果你想尝试一下，我建议阅读此页面上的信息：http://www.sound-man.co.uk/linuxaudio/ice1712multi.html
虽然它是关于另一个设备（ice1712），但可以适应Audiophile USB设备。
启用多个高保真USB接口以供Jackd使用肯定需要：

* 确保你的Jackd版本包含了MMAP_COMPLEX补丁（参见ice1712页面）
* （可能需要）对alsa-lib/src/pcm/pcm_multi.c文件进行打补丁（参见ice1712页面）
* 在你的.asoundrc文件中定义一个多设备（组合hw:1,0和hw:1,1）
* 使用这个设备启动Jackd

目前我在测试这方面还没有成功，如果你在这方面有任何成功的经验，请给我发一封邮件。
