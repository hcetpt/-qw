=======================
ALSA驱动程序中的模拟操纵杆支持
=======================

2003年10月14日

Takashi Iwai <tiwai@suse.de>

概述
-------

首先，你需要在Linux内核中启用GAMEPORT支持，以便使用带有ALSA驱动程序的操纵杆。关于GAMEPORT支持的详细信息，请参阅Documentation/input/joydev/joystick.rst。
ALSA驱动程序在ISA和PCI卡上的操纵杆支持有所不同。对于ISA（即插即用）卡，通常由独立模块（ns558）处理。而ALSA的PCI驱动程序内置了GAMEPORT支持。因此，当ALSA PCI驱动程序构建在内核中时，CONFIG_GAMEPORT也必须设置为'y'。否则，该卡上的GAMEPORT支持将被无声地禁用。
某些适配器模块在加载时会探测设备的物理连接。最好在加载模块之前插入操纵杆设备，这样更安全。

PCI卡
---------

对于PCI卡，当指定了适当的模块选项时，操纵杆会被启用。某些驱动程序不需要任何选项，并且始终启用操纵杆支持。在早期版本的ALSA中，有一个用于激活操纵杆的动态控制API。然而，由于系统稳定性和资源管理的原因，它已经被改为静态模块选项。
以下PCI驱动程序原生支持操纵杆：
==============	=============	============================================
驱动程序	模块选项	可选值
==============	=============	============================================
als4000	joystick_port	0 = 禁用（默认），1 = 自动检测，
	                       手动：任意地址（例如0x200）
au88x0	N/A	N/A
azf3328	joystick	0 = 禁用，1 = 启用，-1 = 自动（默认）
ens1370	joystick	0 = 禁用（默认），1 = 启用
ens1371	joystick_port	0 = 禁用（默认），1 = 自动检测，
	                       手动：0x200, 0x208, 0x210, 0x218
cmipci	joystick_port	0 = 禁用（默认），1 = 自动检测，
	                       手动：任意地址（例如0x200）
cs4281	N/A	N/A
cs46xx	N/A	N/A
es1938	N/A	N/A
es1968	joystick	0 = 禁用（默认），1 = 启用
sonicvibes	N/A	N/A
trident	N/A	N/A
via82xx [#f1]_	joystick	0 = 禁用（默认），1 = 启用
ymfpci	joystick_port	0 = 禁用（默认），1 = 自动检测，
	                       手动：0x201, 0x202, 0x204, 0x205 [#f2]_
==============	=============	============================================

.. [#f1] 仅适用于VIA686A/B
.. [#f2] 对于YMF744/754芯片，端口地址可以任意选择

以下驱动程序不原生支持GAMEPORT，但有额外的模块。加载相应的模块以添加GAMEPORT支持：
=======	=================
驱动程序	附加模块
=======	=================
emu10k1	emu10k1-gp
fm801	fm801-gp
=======	=================

注意：“pcigame”和“cs461x”模块仅适用于OSS驱动程序
这些ALSA驱动程序（cs46xx、trident和au88x0）内置了GAMEPORT支持
如前所述，ALSA PCI驱动程序内置了GAMEPORT支持，因此你无需加载ns558模块。只需加载“joydev”和相应的适配器模块（例如“analog”）即可。

ISA卡
---------

ALSA ISA驱动程序没有内置的GAMEPORT支持。
相反，您需要加载“ns558”模块，除了“joydev”和适配器模块（例如“analog”）。
