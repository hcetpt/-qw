SPDX 许可证标识符: GPL-2.0

=======================================
Linux NVMe 功能和支持策略
=======================================

此文件解释了决定哪些功能由 Linux NVMe 驱动支持以及哪些不支持的策略。
介绍
============

NVM Express 是一系列开放的标准和信息集合。
Linux NVMe 主机驱动（位于 drivers/nvme/host/）支持实现了 NVM Express (NVMe) 规范系列的设备，目前该系列包括多个文档：

- NVMe 基本规范
- 各种命令集规范（例如 NVM 命令集）
- 各种传输规范（例如 PCIe、光纤通道、RDMA、TCP）
- NVMe 管理接口规范

请参阅 https://nvmexpress.org/developers/ 获取 NVMe 规范。
支持的功能
==================

NVMe 是一个庞大的规范套件，其中包含仅对特定使用场景有用或适合的功能。需要注意的是，Linux 并不旨在实现规范中的每一项功能。每增加一个功能都会引入更多的代码、更多的维护工作，并且可能带来更多的错误。因此，在功能性和 NVMe 主机驱动的可维护性之间存在固有的权衡。
在 Linux NVMe 主机驱动中实现的任何功能必须满足以下要求：

  1. 该功能在官方 NVMe 规范的发布版本中有所规定，或者在 NVMe 网站上公布的已批准的技术提案（TP）中有说明。如果与传输协议无关，则不得与任何 NVMe 规范相矛盾。
  2. 不与 Linux 架构或 NVMe 主机驱动的设计冲突。
  3. 具有明确且无可争议的价值主张，并在社区内达成广泛共识。

通常，NVMe 主机驱动不支持厂商特定的扩展。
强烈建议与 Linux NVMe 和块层维护者合作，并就拟用于 Linux NVMe 主机驱动的规范更改获取反馈，以避免后期出现冲突。
特殊处理（Quirks）
======

有时，开放式标准的实现未能正确实现标准的某些部分。Linux 使用基于标识符的特殊处理来解决此类实现缺陷。特殊处理的目的是处理广泛可用的硬件（通常是消费级硬件），这些硬件没有这些特殊处理将无法被 Linux 用户使用。
通常，这些实现并未经过硬件制造商对Linux的充分测试，或者只是表面测试。
Linux NVMe维护者会根据问题对Linux用户的影响以及对驱动程序可维护性的影响，临时决定是否采用特殊处理（quirks）。
一般来说，特殊处理是最后的手段，如果厂商没有提供固件更新或其他变通方法时才会使用。
对于尚未进入大众市场的硬件，不会在Linux内核中添加特殊处理。
对于未能通过企业级Linux发行版、ChromeOS、Android或其他Linux内核使用者认证的硬件，应在出货前进行修复，而不是依赖于Linux的特殊处理。
