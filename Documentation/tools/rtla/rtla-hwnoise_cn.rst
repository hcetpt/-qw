``spdx 标识符: gpl-2.0``

============
rtla-hwnoise
============

------------------------------------------
检测和量化与硬件相关的噪声
------------------------------------------

:手册部分: 1

概要
========

**rtla hwnoise** [*选项*]

描述
===========

**rtla hwnoise** 收集了在 *中断禁用* 模式下运行的 *osnoise* 跟踪器的周期性摘要。通过禁用中断，进而禁用了线程调度，只允许非屏蔽中断和与硬件相关的噪声。
该工具还允许配置 *osnoise* 跟踪器并收集跟踪器输出。

选项
=======

.. include:: common_osnoise_options.rst

.. include:: common_top_options.rst

.. include:: common_options.rst

示例
=======

在下面的示例中，**rtla hwnoise** 工具设置在具有 8 个核心/16 个线程且启用了超线程的系统上运行在 *1-7* 号 CPU 上。
该工具设置为检测任何高于 *一微秒* 的噪声，并运行 *十分钟*，在会话结束时显示报告摘要：

```bash
# rtla hwnoise -c 1-7 -T 1 -d 10m -q
                                          与硬件相关的噪声
  持续时间:   0 00:10:00 | 时间单位是微秒(us)
  CPU 周期         运行时间        噪声  % CPU 可用   最大噪声   单次最大          硬件          NMI
    1 #599       599000000          138    99.99997           3            3           4           74
    2 #599       599000000           85    99.99998           3            3           4           75
    3 #599       599000000           86    99.99998           4            3           6           75
    4 #599       599000000           81    99.99998           4            4           2           75
    5 #599       599000000           85    99.99998           2            2           2           75
    6 #599       599000000           76    99.99998           2            2           0           75
    7 #599       599000000           77    99.99998           3            3           0           75
```

第一列显示了 *CPU*，第二列显示了工具在一个会话期间运行了多少 *周期*。*运行时间* 是工具实际在 CPU 上运行的时间。*噪声* 列是工具观察到的所有噪声的总和，而 *% CPU 可用* 是 *运行时间* 和 *噪声* 之间的关系。
*最大噪声* 列是工具在一个单个周期内检测到的最大硬件噪声，而 *单次最大* 是看到的最大单次噪声。
*硬件* 和 *NMI* 列显示了工具观察到的 *硬件* 和 *NMI* 噪声发生的总数。
例如，*CPU 3* 在 *599* 个周期中运行了 *1 秒运行时间*。在整个执行过程中，CPU 接收到 *86 微秒* 的噪声，留下 *99.99997%* 的 CPU 时间用于应用程序。在最糟糕的一个周期中，CPU 给应用程序带来了 *4 微秒* 的噪声，但肯定是由多个噪声引起的，因为 *单次最大* 噪声为 *3 微秒*。CPU 有 *硬件噪声*，频率为 *每十分钟六次*。CPU 还有 *NMI*，频率更高：大约 *每秒七次*。
理想情况下，该工具应报告 *0* 与硬件相关的噪声。
例如，通过禁用超线程以消除硬件噪声，并禁用 TSC watchdog 以消除 NMI（可以使用 **rtla hwnoise** 的跟踪选项来识别），在相同的硬件上可以达到理想情况：

```bash
# rtla hwnoise -c 1-7 -T 1 -d 10m -q
                                          与硬件相关的噪声
  持续时间:   0 00:10:00 | 时间单位是微秒(us)
  CPU 周期         运行时间        噪声  % CPU 可用   最大噪声   单次最大          硬件          NMI
    1 #599       599000000            0   100.00000           0            0           0            0
    2 #599       599000000            0   100.00000           0            0           0            0
    3 #599       599000000            0   100.00000           0            0           0            0
    4 #599       599000000            0   100.00000           0            0           0            0
    5 #599       599000000            0   100.00000           0            0           0            0
    6 #599       599000000            0   100.00000           0            0           0            0
    7 #599       599000000            0   100.00000           0            0           0            0
```

参考
======

**rtla-osnoise**(1)

Osnoise 跟踪器文档: <https://www.kernel.org/doc/html/latest/trace/osnoise-tracer.html>

作者
======
由 Daniel Bristot de Oliveira 编写 <bristot@kernel.org>

.. include:: common_appendix.rst
```
