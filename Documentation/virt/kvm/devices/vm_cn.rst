SPDX 许可证标识符: GPL-2.0

====================
通用虚拟机接口
====================

虚拟机“设备”也支持 ioctl 命令 KVM_SET_DEVICE_ATTR、KVM_GET_DEVICE_ATTR 和 KVM_HAS_DEVICE_ATTR。该接口使用与其他设备相同的 struct kvm_device_attr 结构体，但针对的是整个虚拟机的设置和控制。每个虚拟机的具体组和属性取决于架构。

1. 组: KVM_S390_VM_MEM_CTRL
==============================

:架构: s390

1.1. 属性: KVM_S390_VM_MEM_ENABLE_CMMA
-------------------------------------------

:参数: 无
:返回值: 如果已有 vcpu 定义，则返回 -EBUSY；否则返回 0

启用虚拟机的协作内存管理辅助 (CMMA)

1.2. 属性: KVM_S390_VM_MEM_CLR_CMMA
----------------------------------------

:参数: 无
:返回值: 如果 CMMA 未启用则返回 -EINVAL；否则返回 0

清除所有来宾页面的 CMMA 状态，以便任何被标记为未使用的页面将再次被使用，并且可能不会被主机回收

1.3. 属性: KVM_S390_VM_MEM_LIMIT_SIZE
-----------------------------------------

:参数: 在 attr->addr 中提供新的来宾内存限制地址
:返回值: 如果提供的地址不可访问则返回 -EFAULT；
如果虚拟机类型为 UCONTROL 则返回 -EINVAL；
如果给定的来宾内存对于该机器过大则返回 -E2BIG；
如果已有 vcpu 定义则返回 -EBUSY；
如果没有足够的内存用于新的影子来宾映射则返回 -ENOMEM；
否则返回 0

允许用户空间查询当前限制并设置新的最大来宾内存大小限制。此限制将向上取整到 2048 MB、4096 GB 或 8192 TB，因为此限制由页表级别的数量决定。如果不存在限制，我们将设置限制为 KVM_S390_NO_MEM_LIMIT (U64_MAX)。

2. 组: KVM_S390_VM_CPU_MODEL
===============================

:架构: s390

2.1. 属性: KVM_S390_VM_CPU_MACHINE (只读)
---------------------------------------------

允许用户空间检索与机器和 KVM 相关的 CPU 信息：

```c
  struct kvm_s390_vm_cpu_machine {
       __u64 cpuid;           // 主机的 CPUID
       __u32 ibc;             // 主机提供的 IBC 级别范围
       __u8  pad[4];
       __u64 fac_mask[256];   // 由 KVM 启用的 CPU 设施集
       __u64 fac_list[256];   // 主机提供的 CPU 设施集
  }
```

:参数: 存储结构体 kvm_s390_vm_cpu_machine 类型的机器相关 CPU 数据的缓冲区地址
:返回值: 如果提供的地址在内核空间中不可访问，则返回 -EFAULT；
如果没有足够的内存来处理 ioctl，则返回 -ENOMEM；
成功时返回 0

2.2. 属性: KVM_S390_VM_CPU_PROCESSOR (读写)
===============================================

允许用户空间检索或请求更改 vcpu 的 CPU 相关信息：

```c
  struct kvm_s390_vm_cpu_processor {
       __u64 cpuid;           // 当前（将要）被此 vcpu 使用的 CPUID
       __u16 ibc;             // 当前（将要）被此 vcpu 使用的 IBC 级别
       __u8  pad[6];
       __u64 fac_list[256];   // 当前（将要）被此 vcpu 使用的 CPU 设施集
  }
```

KVM 不以任何形式强制或限制 CPU 模型数据。通过 KVM_S390_VM_CPU_MACHINE 获取的信息可以作为合理配置设置的提示。由于设置了额外的设施位而触发的指令拦截需要在 VM 驱动代码中实现。

:参数: 存储/设置结构体 kvm_s390_vm_cpu_processor 类型的处理器相关 CPU 数据的缓冲区地址
:返回值: 如果有一个或多个 vcpu 已经激活（仅在写入情况下），则返回 -EBUSY；
如果提供的地址在内核空间中不可访问，则返回 -EFAULT；
如果没有足够的内存来处理 ioctl，则返回 -ENOMEM；
成功时返回 0
### 2.3. 属性：KVM_S390_VM_CPU_MACHINE_FEAT（只读）

允许用户空间检索可用的 CPU 特性。如果特性由硬件提供并被 KVM 支持，则该特性可用。理论上，CPU 特性甚至可以完全由 KVM 模拟：
```c
struct kvm_s390_vm_cpu_feat {
    __u64 feat[16]; // 位图（1 表示特性可用），MSB 0 编号
};
```
**参数**：加载特性列表的缓冲区地址  
**返回值**：  
- 如果给定地址无法从内核空间访问，则返回 `-EFAULT`；  
- 成功时返回 `0`。

### 2.4. 属性：KVM_S390_VM_CPU_PROCESSOR_FEAT（可读写）

允许用户空间检索或更改 VM 中所有 VCPU 的已启用 CPU 特性。不可用的特性不能被启用。
参见 :ref:`KVM_S390_VM_CPU_MACHINE_FEAT` 以获取参数结构的描述。
**参数**：存储/加载特性列表的缓冲区地址  
**返回值**：  
- 如果给定地址无法从内核空间访问，则返回 `-EFAULT`；  
- 如果尝试启用不可用的 CPU 特性，则返回 `-EINVAL`；  
- 如果至少有一个 VCPU 已经定义，则返回 `-EBUSY`；  
- 成功时返回 `0`。

### 2.5. 属性：KVM_S390_VM_CPU_MACHINE_SUBFUNC（只读）

允许用户空间在不经过任何 IBC 设置过滤的情况下检索可用的 CPU 子功能。这些子功能通过查询或“测试位”子功能传递给来宾 VCPU，并用于 cpacf 函数、plo 和 ptff 等。
一个子功能块只有在 KVM_S390_VM_CPU_MACHINE 包含引入受影响指令的 STFL(E) 位时才有效。如果受影响的指令通过“查询子功能”指示子功能，则响应块包含在返回的结构中。如果受影响的指令通过“测试位”机制指示子功能，则子功能代码包含在返回的结构中（MSB 0 编号）：
```c
struct kvm_s390_vm_cpu_subfunc {
    u8 plo[32];           // 始终有效（ESA/390 特性）
    u8 ptff[16];          // 在有 TOD 时钟引导时有效
    u8 kmac[16];          // 在有消息安全辅助时有效
    u8 kmc[16];           // 在有消息安全辅助时有效
    u8 km[16];            // 在有消息安全辅助时有效
    u8 kimd[16];          // 在有消息安全辅助时有效
    u8 klmd[16];          // 在有消息安全辅助时有效
    u8 pckmo[16];         // 在有消息安全辅助扩展 3 时有效
    u8 kmctr[16];         // 在有消息安全辅助扩展 4 时有效
    u8 kmf[16];           // 在有消息安全辅助扩展 4 时有效
    u8 kmo[16];           // 在有消息安全辅助扩展 4 时有效
    u8 pcc[16];           // 在有消息安全辅助扩展 4 时有效
    u8 ppno[16];          // 在有消息安全辅助扩展 5 时有效
    u8 kma[16];           // 在有消息安全辅助扩展 8 时有效
    u8 kdsa[16];          // 在有消息安全辅助扩展 9 时有效
    u8 reserved[1792];    // 预留用于未来的指令
};
```
**参数**：加载子功能块的缓冲区地址
### 返回值:
- 如果给定的地址无法从内核空间访问，则返回 `-EFAULT`；
- 成功时返回 `0`。

2.6. 属性: KVM_S390_VM_CPU_PROCESSOR_SUBFUNC（读/写）
-------------------------------------------------------
此属性允许用户空间检索或更改要为虚拟机的所有 VCPU 指示的 CPU 子功能。只有在内核和硬件支持可用的情况下，此属性才可使用。
内核使用配置的子功能块向客户机指示。一个子功能块只有在其关联的 STFL(E) 位没有被用户空间禁用时才会被使用（即所查询的指令实际对客户机可用）。
如果没有写入数据，读取将会失败。在这种情况下将使用 IBC 来确定可用的子功能，这将保证向后兼容性。
有关参数结构的描述，请参阅 :ref:`KVM_S390_VM_CPU_MACHINE_SUBFUNC`。

**参数**: 用于存储/加载子功能块的缓冲区地址
**返回值**: 
- 如果给定的地址无法从内核空间访问，则返回 `-EFAULT`；
- 在读取时，如果尚未写入任何数据，则返回 `-EINVAL`；
- 如果至少有一个 VCPU 已经定义，则返回 `-EBUSY`；
- 成功时返回 `0`。

3. 组: KVM_S390_VM_TOD
=========================

**架构**: s390

3.1. 属性: KVM_S390_VM_TOD_HIGH
------------------------------------
允许用户空间设置/获取 TOD 时钟扩展（u8）（已被 KVM_S390_VM_TOD_EXT 取代）。
**参数**: 用户空间中用于存储数据（u8）的缓冲区地址
**返回值**: 
- 如果给定的地址无法从内核空间访问，则返回 `-EFAULT`；
- 如果设置 TOD 时钟扩展到非 0 值不被支持，则返回 `-EINVAL`；
- 对于 PV 客户机（TOD 由超监视器管理），返回 `-EOPNOTSUPP`。

3.2. 属性: KVM_S390_VM_TOD_LOW
-----------------------------------
允许用户空间设置/获取按照 POP 定义的 TOD 时钟寄存器的第 0 到 63 位（u64）。
**参数**: 用户空间中用于存储数据（u64）的缓冲区地址
**返回值**: 
- 如果给定的地址无法从内核空间访问，则返回 `-EFAULT`；
- 对于 PV 客户机（TOD 由超监视器管理），返回 `-EOPNOTSUPP`。

3.3. 属性: KVM_S390_VM_TOD_EXT
-----------------------------------
允许用户空间设置/获取按照 POP 定义的 TOD 时钟寄存器的第 0 到 63 位（u64）。如果客户机 CPU 模型支持 TOD 时钟扩展（u8），则也允许用户空间获取/设置它。如果客户机 CPU 模型不支持该扩展，则将其存储为 0，并且不允许设置为非 0 值。
### 参数：用户空间中用于存储数据的缓冲区地址 (kvm_s390_vm_tod_clock)
- 返回值：如果给定的地址无法从内核空间访问，则返回 `-EFAULT`；
          如果设置 TOD 时钟扩展到非零值不被支持，则返回 `-EINVAL`；
          对于 PV 客户机（TOD 由超管管理），返回 `-EOPNOTSUPP`。

### 4. 组：KVM_S390_VM_CRYPTO
============================

#### 架构：s390

##### 4.1 属性：KVM_S390_VM_CRYPTO_ENABLE_AES_KW (写操作)
------------------------------------------------------
允许用户空间启用 AES 密钥包装，包括生成新的包装密钥。
- 参数：无
- 返回值：0

##### 4.2 属性：KVM_S390_VM_CRYPTO_ENABLE_DEA_KW (写操作)
------------------------------------------------------
允许用户空间启用 DEA 密钥包装，包括生成新的包装密钥。
- 参数：无
- 返回值：0

##### 4.3 属性：KVM_S390_VM_CRYPTO_DISABLE_AES_KW (写操作)
-------------------------------------------------------
允许用户空间禁用 AES 密钥包装，并清除包装密钥。
- 参数：无
- 返回值：0

##### 4.4 属性：KVM_S390_VM_CRYPTO_DISABLE_DEA_KW (写操作)
-------------------------------------------------------
允许用户空间禁用 DEA 密钥包装，并清除包装密钥。
- 参数：无
- 返回值：0

### 5. 组：KVM_S390_VM_MIGRATION
===============================

#### 架构：s390

##### 5.1 属性：KVM_S390_VM_MIGRATION_STOP (写操作)
------------------------------------------------
允许用户空间停止迁移模式，这对于 PGSTE 迁移是必需的。当迁移模式未激活时设置此属性将不起作用。
- 参数：无
- 返回值：0

##### 5.2 属性：KVM_S390_VM_MIGRATION_START (写操作)
-------------------------------------------------
允许用户空间启动迁移模式，这对于 PGSTE 迁移是必需的。当迁移模式已经激活时设置此属性将不起作用。所有内存槽必须启用脏页跟踪，否则返回 `-EINVAL`。如果任何内存槽未启用脏页跟踪，则迁移模式会自动停止。
- 参数：无
- 返回值：如果没有足够的空闲内存来启动迁移模式，则返回 `-ENOMEM`；如果虚拟机状态无效（例如没有定义内存），则返回 `-EINVAL`；成功时返回 0。
5.3. 属性：KVM_S390_VM_MIGRATION_STATUS（只读）
--------------------------------------------------

允许用户空间查询迁移模式的状态
:参数: 用户空间中用于存储数据的缓冲区地址（u64）；如果迁移模式禁用，则数据为0；如果启用，则为1
:返回值: 如果给定地址在内核空间中不可访问，返回-EFAULT；成功时返回0

6. 组：KVM_ARM_VM_SMCCC_CTRL
============================

:架构: arm64

6.1. 属性：KVM_ARM_VM_SMCCC_FILTER（写入/无返回）
---------------------------------------------

:参数: 指向一个 `struct kvm_smccc_filter` 的指针

:返回值:

        ======  ===========================================
        EEXIST  范围与先前插入或保留的范围重叠
        EBUSY   虚拟机中的某个 vCPU 已经运行过
        EINVAL  过滤器配置无效
        ENOMEM  分配 SMCCC 过滤器的内核表示内存失败
        ======  ===========================================

请求安装一个描述如下所示的 SMCCC 调用过滤器：

    enum kvm_smccc_filter_action {
            KVM_SMCCC_FILTER_HANDLE = 0,
            KVM_SMCCC_FILTER_DENY,
            KVM_SMCCC_FILTER_FWD_TO_USER,
    };

    struct kvm_smccc_filter {
            __u32 base;
            __u32 nr_functions;
            __u8 action;
            __u8 pad[15];
    };

过滤器定义为一组不重叠的范围。每个范围定义了对范围内 SMCCC 调用应采取的操作。用户空间可以通过连续调用此属性来插入多个范围到过滤器中。
KVM 默认配置是允许所有实现的 SMCCC 调用。因此，用户空间可以稀疏地定义 SMCCC 过滤器，仅描述修改默认行为的范围。
`struct kvm_smccc_filter` 表达的范围是 [``base``, ``base + nr_functions``)。不允许范围跨越，即用户空间不能依赖于 ``base + nr_functions`` 溢出。
SMCCC 过滤器适用于由客户机发起的 SMC 和 HVC 调用。SMCCC 过滤器控制内核中的 SMCCC 调用仿真，并且在其他与 SMCCC 调用交互的接口之前生效（例如，超调用位图寄存器）。
操作：

 - ``KVM_SMCCC_FILTER_HANDLE``: 允许内核处理客户机的 SMCCC 调用。强烈建议用户空间不要显式描述允许的 SMCCC 调用范围
- ``KVM_SMCCC_FILTER_DENY``: 在内核中拒绝客户机的 SMCCC 调用并返回到客户机
- ``KVM_SMCCC_FILTER_FWD_TO_USER``: 将客户机的 SMCCC 调用转发到用户空间，并提供退出原因 ``KVM_EXIT_HYPERCALL``
``pad`` 字段保留供将来使用，必须为零。如果该字段非零，KVM 可能会返回 ``-EINVAL``。

KVM 保留了 'Arm Architecture Calls' 范围的功能 ID，并将拒绝定义这些范围中任何部分的过滤器尝试：

        =========== ===============
        起始地址     结束地址（含）
        =========== ===============
        0x8000_0000 0x8000_FFFF
        0xC000_0000 0xC000_FFFF
        =========== ===============
