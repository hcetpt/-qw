... SPDX 许可证标识符: GPL-2.0

=============================
s390 上的 KVM DIAGNOSE 调用
=============================

s390 上的 KVM 支持 DIAGNOSE 调用以进行超调用，包括本地超调用和其他 s390 虚拟机监控程序中选定的超调用。
请注意，位编号遵循通常的 s390 规则（最高有效位在左边）。
一般说明
---------------

由来宾发起的 DIAGNOSE 调用会导致强制拦截。这意味着所有支持的 DIAGNOSE 调用都需要由 KVM 或其用户空间处理。
所有 KVM 支持的 DIAGNOSE 调用都使用 RS-a 格式：

  --------------------------------------
  |  '83'  | R1 | R3 | B2 |     D2     |
  --------------------------------------
  0        8    12   16   20           31

第二个操作数地址（通过基址/偏移量计算获得）不用于寻址数据。相反，该地址的第 48 到 63 位指定功能代码，而第 0 到 47 位被忽略。
支持的 DIAGNOSE 功能代码根据所使用的用户空间而有所不同。对于非 KVM 特定的 DIAGNOSE 功能代码，请参阅定义这些功能代码的 s390 虚拟机监控程序文档。
功能代码 'X'500 的 DIAGNOSE - KVM virtio 函数
-----------------------------------------------------

如果功能代码指定为 0x500，则执行各种与 virtio 相关的功能。
通用寄存器 1 包含 virtio 子功能代码。支持的 virtio 子功能取决于 KVM 的用户空间。通常，用户空间提供 s390-virtio（子代码 0-2）或 virtio-ccw（子代码 3）。
完成 DIAGNOSE 指令后，通用寄存器 2 包含函数的返回代码，该代码可以是一个返回代码或特定子代码值。
子代码 0 - s390-virtio 通知和早期控制台 printk
    由用户空间处理
子代码 1 - s390-virtio 重置
    由用户空间处理
子代码 2 - s390-virtio 设置状态
    由用户空间处理

子代码 3 - virtio-ccw 通知
    由用户空间或 KVM（ioeventfd 情况）处理

通用寄存器 2 包含一个子通道标识符，表示要通知的 virtio-ccw 代理设备的子通道
通用寄存器 3 包含要通知的 virtqueue 的编号
通用寄存器 4 包含一个 64 位标识符供 KVM 使用（即 kvm_io_bus 的 cookie）。如果通用寄存器 4 不包含有效的标识符，则忽略它

在完成 DIAGNOSE 调用后，通用寄存器 2 可能包含一个 64 位标识符（在 kvm_io_bus cookie 情况下），或者如果发生内部错误则包含一个负的错误值

有关此超调用的讨论，请参阅 virtio 标准

DIAGNOSE 功能码 'X'501 - KVM 断点
----------------------------------------------

如果功能码指定为 0x501，则可以执行断点功能
此功能码由用户空间处理
此诊断功能码没有子功能，也不使用任何参数
### 诊断功能代码 'X'9C - 自愿时间片让出

#### 通用寄存器 1 包含目标 CPU 地址

在使用共享主机 CPU 的虚拟机监控程序（如 LPAR、KVM 或 z/VM）的来宾中，使用功能代码 0x9c 的 DIAGNOSE 可能通过将运行来宾 CPU 的主机 CPU 让出给另一个来宾 CPU（最好是包含指定目标 CPU 的逻辑 CPU）来提高系统性能。

### DIAG 'X'9C 转发

来宾可能会发送一个 DIAGNOSE 0x9c 以让出到某个其他 vcpu。例如，Linux 来宾试图让出到当前持有自旋锁但未运行的 vcpu。然而，在主机上，支持该 vcpu 的实际物理 CPU 本身可能并未运行。

将来宾最初发送的 DIAGNOSE 0x9c 转发给支持的物理 CPU 希望能够导致该 CPU 进而使来宾的 vcpu 被调度。

#### diag9c_forwarding_hz

这是 KVM 内核参数，用于指定每秒最大转发 DIAGNOSE 0x9c 的次数，以避免出现 DIAGNOSE 0x9c 转发风暴。
- 值为 0 表示关闭转发。
