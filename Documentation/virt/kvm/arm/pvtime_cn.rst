SPDX 许可证标识符: GPL-2.0

ARM64 的半虚拟化时间支持
=======================

ARM 规范 DEN0057/A 定义了 AArch64 客户机的半虚拟化时间支持标准：

https://developer.arm.com/docs/den0057/a

KVM/arm64 通过提供一些虚拟机监控程序服务调用来实现此规范中被窃取的时间部分，以支持半虚拟化客户机获取其执行过程中被窃取的时间量。定义了两个新的 SMCCC 兼容的超调用：

* PV_TIME_FEATURES: 0xC5000020
* PV_TIME_ST:       0xC5000021

这些超调用仅在 SMC64/HVC64 调用约定中可用，因为 32 位 ARM 客户机不支持半虚拟化时间。应在调用 PV_TIME_FEATURES 之前使用 SMCCC 1.1 的 ARCH_FEATURES 机制探测 PV_TIME_FEATURES 超调用的存在。

**PV_TIME_FEATURES**

    ============= ========    =================================================
    函数 ID:      (uint32)    0xC5000020
    PV_call_id:   (uint32)    需要查询支持的函数
    目前仅支持 PV_TIME_ST
    返回值:       (int64)     NOT_SUPPORTED (-1) 或 SUCCESS (0)，表示相关 PV-time 功能是否受虚拟机监控程序支持
    ============= ========    =================================================

**PV_TIME_ST**

    ============= ========    ==============================================
    函数 ID:      (uint32)    0xC5000021
    返回值:       (int64)     该 VCPU 的被窃取时间数据结构的 IPA。失败时返回：
                              NOT_SUPPORTED (-1)
    ============= ========    ==============================================

PV_TIME_ST 返回的 IPA 应由客户机像普通内存一样进行映射，并具有内部和外部写回缓存属性，在内部共享域中。保证从返回的 IPA 中有总共 16 字节的数据由虚拟机监控程序有意义地填充（见下面的结构）。

**被窃取时间**

PV_TIME_ST 超调用指向的结构如下：

+-------------+-------------+-------------+----------------------------+
| 字段         | 字节长度    | 字节偏移量  | 描述                        |
+=============+=============+=============+============================+
| 版本号       |      4      |      0      | 对于版本 1.0 必须为 0        |
+-------------+-------------+-------------+----------------------------+
| 属性         |      4      |      4      | 必须为 0                     |
+-------------+-------------+-------------+----------------------------+
| 被窃取时间   |      8      |      8      | 无符号纳秒表示的被窃取时间，|
|             |             |             | 表示该 VCPU 线程在物理 CPU 上|
|             |             |             | 被迫未运行的时间量            |
+-------------+-------------+-------------+----------------------------+

结构中的所有值都以小端字节序存储。
虚拟机监控程序将在调度 VCPU 之前更新此结构。它将存在于分配给客户机的正常内存的保留区域中。客户机不应尝试写入此内存。每个 VCPU 都有一个这样的结构。
建议预留一个或多个 64k 页面专门用于这些结构，并且不用于其他目的，这使得客户机可以使用 64k 页面映射该区域，并避免与其他内存属性冲突。
对于用户空间接口，请参阅
:ref:`文档/virt/kvm/devices/vcpu.rst <kvm_arm_vcpu_pvtime_ctrl>`。 

（注：这里的`:ref:`是ReStructuredText标记语言中的引用格式，用于指向文档内的其他部分。）
