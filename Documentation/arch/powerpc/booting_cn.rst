SPDX 许可证标识符: GPL-2.0

设备树启动
-----------

在开发 Linux/ppc64 内核的过程中，特别是在引入除了旧的 IBM pSeries/iSeries 对之外的新平台类型时，决定实施一些严格的规则来规范内核入口和引导程序与内核之间的接口，以避免像 ppc32 内核入口点那样变得混乱无序以及添加新平台的方式。遗留的 iSeries 平台违反了这些规则，因为它早于这个方案出现，但是不会接受任何不符合这些规则的新板支持进入主分支。此外，自从 arch/powerpc 架构合并了 ppc32 和 ppc64 之后，新的 32 位平台和迁移到 arch/powerpc 的 32 位平台也将被要求遵循这些规则。
主要的要求是存在一个格式遵循 Open Firmware 规范的设备树。然而，为了方便嵌入式板供应商，内核并不需要设备树表示系统中的每个设备，而只需要某些节点和属性的存在。例如，内核不需要为系统中的每个 PCI 设备创建节点。必须有 PCI 主机桥节点，以提供中断路由信息和内存/IO 范围等。同时，也推荐定义芯片上设备和其他不符合现有 OF 规范的总线的节点。这为内核探测这些设备并匹配驱动程序提供了极大的灵活性，无需硬编码各种表格。这也使得板供应商可以进行较小的硬件升级，而不必显著影响内核代码或造成特殊情况的代码杂乱。

### 入口点
~~~~~~~~~~~

内核只有一个入口点，在内核镜像的开始位置。该入口点支持两种调用约定：

a) 从 Open Firmware 启动。如果您的固件兼容 Open Firmware (IEEE 1275) 或者提供了一个 OF 兼容的客户端接口 API（不强制支持“interpret”回调的 Forth 词），则可以使用以下方式进入内核：

- r5：根据 IEEE 1275 定义的 OF 回调指针，绑定到 powerpc。目前仅支持 32 位客户端接口。

- r3, r4：初始化 RAM 映像（initrd）的地址和长度，或者为 0。

- MMU 可能已打开或关闭；内核将运行位于 arch/powerpc/kernel/prom_init.c 中的 trampoline 代码来从 Open Firmware 提取设备树和其他信息，并构建一个扁平化的设备树（如 b) 所述）。prom_init() 然后会重新进入内核使用第二种方法。此 trampoline 代码在固件环境中运行，固件应该在此期间处理所有异常。
b) 直接携带扁平化设备树块进入。此入口点由 a) 在 OF trampoline 之后调用，也可以由不支持 Open Firmware 客户端接口的引导程序直接调用。它还被“kexec”用于实现在一个正在运行的内核中热启动新的内核。本文档将更详细地描述这种方法，因为 a) 方法仅仅是标准的 Open Firmware，因此应根据定义它的各种标准文档和其对 PowerPC 平台的绑定来实现。入口点定义如下：

- r3：指向 RAM 中设备树块（定义在第二章）的物理指针。

- r4：指向内核本身的物理指针。此指针用于汇编代码在进入内核时正确禁用 MMU（如果你是以 MMU 开启且非 1:1 映射的方式进入内核）。

- r5：NULL（以区别于方法 a）

关于 SMP 入口的说明：要么你的固件将其他 CPU 放置在某个睡眠循环或自旋循环中，在 ROM 中你可以通过软重置或其他手段唤醒它们，那么你无需关心；要么你需要带着所有 CPU 进入内核。如何通过方法 b) 做到这一点将在本文件的后续版本中描述。

板支持（平台）不是排他性的配置选项。可以在单一内核镜像中构建任意一组板支持。内核将根据设备树的内容“知道”使用哪些函数集。因此，你应该：

a) 在 arch/powerpc/Kconfig 中作为 _布尔_ 选项添加你的平台支持，参考 PPC_PSERIES、PPC_PMAC 和 PPC_MAPLE 的示例。后者可能是开始的一个好的板支持示例。

b) 创建你的主平台文件 "arch/powerpc/platforms/myplatform/myboard_setup.c"，并在条件依赖于你的 `CONFIG_` 选项的情况下将其添加到 Makefile 中。此文件将定义一个类型为 "ppc_md" 的结构体，其中包含通用代码将使用的各种回调，以便访问你的平台特定代码。

一个内核镜像可能支持多个平台，但前提是这些平台具有相同的核心架构。单一内核构建不能同时支持 Book E 配置和经典 Powerpc 架构的配置。
