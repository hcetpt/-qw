SPDX 许可证标识符: GPL-2.0

===========================
飞思卡尔 BookE32 的 KASLR
===========================

KASLR 代表 内核地址空间布局随机化。
本文档试图解释飞思卡尔 BookE32 中 KASLR 的实现。KASLR 是一个安全特性，它阻止了依赖于内核内部位置知识的攻击尝试。由于已经支持 CONFIG_RELOCATABLE，我们需要做的是将内核映射或复制到适当的位置并重新定位。飞思卡尔 Book-E 系列期望低内存通过固定的 TLB 条目 (TLB1) 映射。TLB1 条目不适合直接在随机化区域中映射内核，因此我们选择将内核复制到适当的位置并重启以重新定位。
熵是从启动横幅和定时器基地址导出的，这些会在每次构建和引导时变化。这种方式并不是非常安全，因此还可以通过设备树中的 /chosen/kaslr-seed 节点由引导加载程序传递额外的熵。
我们将使用低内存的前 512MB 来随机化内核镜像。这部分内存将被划分为 64MB 区域。我们将使用熵的低 8 位来决定 64MB 区域的索引。然后，在 64MB 区域内选择一个 16KB 对齐的偏移量来放置内核：

    KERNELBASE

        |-->   64MB   <--|
        |               |
        +---------------+    +----------------+---------------+
        |               |....|    |kernel|    |               |
        +---------------+    +----------------+---------------+
        |                         |
        |----->   offset    <-----|

                              kernstart_virt_addr

要启用 KASLR，请设置 CONFIG_RANDOMIZE_BASE=y。如果启用了 KASLR 并且想在运行时禁用它，请在内核命令行中添加 "nokaslr"。
