KASAN 在 powerpc 架构上仅支持 32 位和 Radix 64 位。

32 位支持
==============

在 32 位系统中，KASAN 支持 hash 和 nohash MMU（内存管理单元）。阴影区域位于内核虚拟内存空间的顶部，紧挨着 fixmap 区域，并占用整个内核虚拟内存空间的八分之一。对于 vmalloc 区域的监控是可选的，除非构建时包含了模块，在这种情况下它是必需的。

64 位支持
==============

目前，仅支持 radix MMU。对于 hash 和 Book3E 处理器存在一些版本，曾在邮件列表中出现过，但还没有任何版本被合并。

在 Book3S 上支持 KASAN 比较棘手：

- 最好能支持内联监控，以便能够捕获用轮廓模式无法捕获的堆栈问题。
- 内联监控需要一个固定的偏移量。
- Book3S 在启动期间以关闭转换的方式（"真实模式"）运行代码，包括大量用于确定 MMU 特性的通用设备树解析代码。
- 有些代码——最显著的是大量 KVM 代码——在启动后也以关闭转换的方式运行。
- 因此，任何偏移量都必须指向无论转换开启还是关闭时都有效的内存位置。
一种方法是放弃内联式（inline）的工具插入。这样一来，启动时的检查可以推迟到MMU设置完成之后进行，并且我们可以不对启动后在无地址转换状态下运行的代码进行任何工具插入。这就是当前的做法。

为了避免这种限制，KASAN的影子区域必须放置在线性映射内部，使用与线性映射其他部分相同的高位技巧。这很棘手：

- 我们希望将其放置在物理内存的起始位置附近。理论上，我们可以在运行时根据物理内存的大小来确定这一点，但这需要能够任意重定位内核，这基本上就是KASLR中最棘手的部分。鉴于不想同时实现这两种复杂的功能，我们希望一旦Book3S平台实现了KASLR后，再回过头来解决这个问题。
- 另一种选择是将影子区域放置在内存的末尾，但这要求在编译时就知道系统有多少连续的物理内存。这是一个重大的权衡，有一些不幸的后果：无法处理不连续的物理内存、对于物理内存小于指定值的机器完全无法启动、以及对于物理内存大于指定值的机器来说，多余的内存无法被利用。这些后果被认为不可接受。
