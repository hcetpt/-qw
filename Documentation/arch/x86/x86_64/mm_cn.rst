SPDX 许可证标识符: GPL-2.0

=================
内存管理
=================

使用四级页表的完整虚拟内存映射
====================================================

.. note::
   
 - 负地址，例如“-23 TB”，是以字节为单位的绝对地址，从 64 位地址空间的顶部向下计数。当同时以绝对地址和距离顶部的距离表示时更容易理解布局。
   例如，0xffffe90000000000 == -23 TB，它比 64 位地址空间的顶部（ffffffffffffffff）低 23 TB。
   随着我们接近地址空间的顶部，表示法会从 TB 变为 GB 然后变为 MB/KB。
 - “16M TB”乍一看可能显得奇怪，但相比“16 EB”，它是一种更易于识别的方式，后者很少有人能一眼看出是 16 EB（即 16 艾字节）。
 这也很好地展示了 64 位地址空间的巨大程度。
::

  ========================================================================================================================
      开始地址    |   偏移量   |     结束地址     |  大小   | 虚拟内存区域描述
  ========================================================================================================================
                    |            |                  |         |
   0000000000000000 |    0       | 00007fffffffffff |  128 TB | 用户空间虚拟内存，每 mm 不同
  __________________|____________|__________________|_________|___________________________________________________________
                    |            |                  |         |
   0000800000000000 | +128 TB    | ffff7fffffffffff | ~16M TB | ... 极大，几乎 64 位宽的非规范虚拟内存地址空洞，直到 -128 TB
                    |            |                  |         |     的内核映射开始偏移位置
__________________|____________|__________________|_________|___________________________________________________________
                                                              |
                                                              | 内核空间虚拟内存，在所有进程中共享：
  ____________________________________________________________|___________________________________________________________
                    |            |                  |         |
   ffff800000000000 | -128 TB    | ffff87ffffffffff |    8 TB | ... 保护空洞，也为虚拟机保留
   ffff880000000000 | -120 TB    | ffff887fffffffff |  0.5 TB | LDT 重映射用于 PTI
   ffff888000000000 | -119.5 TB  | ffffc87fffffffff |   64 TB | 所有物理内存的直接映射（page_offset_base）
   ffffc88000000000 |  -55.5 TB  | ffffc8ffffffffff |  0.5 TB | ... 未使用的空洞
   ffffc90000000000 |  -55 TB    | ffffe8ffffffffff |   32 TB | vmalloc/ioremap 空间（vmalloc_base）
   ffffea0000000000 |  -23 TB    | ffffe9ffffffffff |    1 TB | ... 未使用的空洞
   ffffeb0000000000 |  -22 TB    | ffffebffffffffff |    1 TB | 虚拟内存映射（vmemmap_base）
   ffffec0000000000 |  -20 TB    | fffffbffffffffff |   16 TB | KASAN 影子内存
  __________________|____________|__________________|_________|____________________________________________________________
                                                              |
                                                              | 从此处开始与 56 位的布局相同：
  ____________________________________________________________|____________________________________________________________
                    |            |                  |         |
   fffffc0000000000 |   -4 TB    | fffffdffffffffff |    2 TB | ... 未使用的空洞
                    |            |                  |         | KASLR 的 vaddr_end
   fffffe0000000000 |   -2 TB    | fffffe7fffffffff |  0.5 TB | cpu_entry_area 映射
   fffffe8000000000 |   -1.5 TB  | fffffeffffffffff |  0.5 TB | ... 未使用的空洞
   ffffff0000000000 |   -1 TB    | ffffff7fffffffff |  0.5 TB | %esp 修复堆栈
   ffffff8000000000 | -512 GB    | ffffffeeffffffff |  444 GB | ... 未使用的空洞
   ffffffef00000000 |  -68 GB    | fffffffeffffffff |   64 GB | EFI 区域映射空间
   ffffffff00000000 |   -4 GB    | ffffffff7fffffff |    2 GB | ... 未使用的空洞
   ffffffff80000000 |   -2 GB    | ffffffff9fffffff |  512 MB | 内核文本映射，映射到物理地址 0
   ffffffff80000000 |-2048 MB    |                  |         |
   ffffffffa0000000 |-1536 MB    | fffffffffeffffff | 1520 MB | 模块映射空间
   ffffffffff000000 |  -16 MB    |                  |         |
      FIXADDR_START | ~-11 MB    | ffffffffff5fffff | ~0.5 MB | 内核内部 fixmap 范围，大小和偏移可变
   ffffffffff600000 |  -10 MB    | ffffffffff600fff |    4 kB | 旧版 vsyscall ABI
   ffffffffffe00000 |   -2 MB    | ffffffffffffffff |    2 MB | ... 未使用的空洞
  __________________|____________|__________________|_________|___________________________________________________________


使用五级页表的完整虚拟内存映射
====================================================

.. note::

 - 使用 56 位地址，用户空间内存扩展了 512 倍，从 0.125 PB 增加到 64 PB。所有内核映射都下移到 -64 PB 的起始偏移位置，并且许多区域扩展以支持更大的物理内存。
::

  ========================================================================================================================
      开始地址    |   偏移量   |     结束地址     |  大小   | 虚拟内存区域描述
  ========================================================================================================================
                    |            |                  |         |
   0000000000000000 |    0       | 00ffffffffffffff |   64 PB | 用户空间虚拟内存，每 mm 不同
  __________________|____________|__________________|_________|___________________________________________________________
                    |            |                  |         |
   0100000000000000 |  +64 PB    | feffffffffffffff | ~16K PB | ... 极大，仍然几乎是 64 位宽的非规范虚拟内存地址空洞，直到 -64 PB
                    |            |                  |         |     的内核映射起始偏移位置
__________________|____________|__________________|_________|___________________________________________________________
                                                              |
                                                              | 在所有进程中共享的内核空间虚拟内存：
  ____________________________________________________________|___________________________________________________________
                    |            |                  |         |
   ff00000000000000 |  -64 PB    | ff0fffffffffffff |    4 PB | ... 保护空洞，也为虚拟机保留
   ff10000000000000 |  -60 PB    | ff10ffffffffffff | 0.25 PB | LDT 重映射用于 PTI
   ff11000000000000 |  -59.75 PB | ff90ffffffffffff |   32 PB | 所有物理内存的直接映射（page_offset_base）
   ff91000000000000 |  -27.75 PB | ff9fffffffffffff | 3.75 PB | ... 未使用的空洞
   ffa0000000000000 |  -24 PB    | ffd1ffffffffffff | 12.5 PB | vmalloc/ioremap 空间（vmalloc_base）
   ffd2000000000000 |  -11.5 PB  | ffd3ffffffffffff |  0.5 PB | ... 未使用的空洞
   ffd4000000000000 |  -11 PB    | ffd5ffffffffffff |  0.5 PB | 虚拟内存映射（vmemmap_base）
   ffd6000000000000 |  -10.5 PB  | ffdeffffffffffff | 2.25 PB | ... 未使用的空洞
   ffdf000000000000 |   -8.25 PB | fffffbffffffffff |   ~8 PB | KASAN 影子内存
  __________________|____________|__________________|_________|____________________________________________________________
                                                              |
                                                              | 从此处开始与 47 位的布局相同：
  ____________________________________________________________|____________________________________________________________
                    |            |                  |         |
   fffffc0000000000 |   -4 TB    | fffffdffffffffff |    2 TB | ... 未使用的空洞
                    |            |                  |         | KASLR 的 vaddr_end
   fffffe0000000000 |   -2 TB    | fffffe7fffffffff |  0.5 TB | cpu_entry_area 映射
   fffffe8000000000 |   -1.5 TB  | fffffeffffffffff |  0.5 TB | ... 未使用的空洞
   ffffff0000000000 |   -1 TB    | ffffff7fffffffff |  0.5 TB | %esp 修复堆栈
   ffffff8000000000 | -512 GB    | ffffffeeffffffff |  444 GB | ... 未使用的空洞
   ffffffef00000000 |  -68 GB    | fffffffeffffffff |   64 GB | EFI 区域映射空间
   ffffffff00000000 |   -4 GB    | ffffffff7fffffff |    2 GB | ... 未使用的空洞
   ffffffff80000000 |   -2 GB    | ffffffff9fffffff |  512 MB | 内核文本映射，映射到物理地址 0
   ffffffff80000000 |-2048 MB    |                  |         |
   ffffffffa0000000 |-1536 MB    | fffffffffeffffff | 1520 MB | 模块映射空间
   ffffffffff000000 |  -16 MB    |                  |         |
      FIXADDR_START | ~-11 MB    | ffffffffff5fffff | ~0.5 MB | 内核内部 fixmap 范围，大小和偏移可变
   ffffffffff600000 |  -10 MB    | ffffffffff600fff |    4 kB | 旧版 vsyscall ABI
   ffffffffffe00000 |   -2 MB    | ffffffffffffffff |    2 MB | ... 未使用的空洞
  __________________|____________|__________________|_________|___________________________________________________________

架构定义了一个 64 位虚拟地址。实现可以支持较少位数。目前支持的是 48 和 57 位虚拟地址。位 63 到最高有效实现位被符号扩展。
这会导致用户空间和内核地址之间出现空洞，如果你将它们解释为无符号数值的话。
直接映射覆盖了系统中直到最高内存地址的所有内存（这意味着在某些情况下，它也可能包括 PCI 内存空洞）。
我们将 EFI 运行时服务映射到 'efi_pgd' 的程序页目录 (PGD) 中的一个 64GB 大的虚拟内存窗口（这个大小是任意的，如果需要的话可以稍后增加）。
这些映射不属于任何其他内核 PGD，并且仅在 EFI 运行时调用期间可用。
请注意，如果启用了 CONFIG_RANDOMIZE_MEMORY，则所有物理内存、vmalloc/ioremap 空间和虚拟内存映射都会被随机化。
它们的顺序会被保留，但它们的基础会在启动早期进行偏移。
在修改这里的任何内容时，请务必小心处理 KASLR。KASLR 地址范围除了 KASAN 阴影区域外，不得与任何其他部分重叠，这是正确的，因为启用 KASAN 会禁用 KASLR。
对于 4 级和 5 级布局，最后 2MB 孔中的 STACKLEAK_POISON 值为：ffffffffffff4111。
