### AMD内存加密

安全内存加密 (SME) 和安全加密虚拟化 (SEV) 是 AMD 处理器上的特性。

SME 提供了使用标准 x86 页表将单个内存页标记为加密的能力。被标记为加密的页面在从 DRAM 读取时会自动解密，在写入 DRAM 时会自动加密。因此，SME 可用于保护 DRAM 内容免受对系统的物理攻击。

SEV 支持以加密形式运行虚拟机 (VM)，其中来宾 VM 的代码和数据受到保护，只有在 VM 内部才能获得解密版本。SEV 来宾 VM 包含私有内存和共享内存的概念。私有内存使用特定于来宾的密钥进行加密，而共享内存可能使用管理程序密钥进行加密。当启用 SME 时，管理程序密钥与 SME 中使用的密钥相同。

当页表项中设置了加密位（下面介绍如何确定其位置）时，页面即被视为加密。加密位也可以在 cr3 寄存器中指定，允许页全局目录 (PGD) 表被加密。每级页表也可以通过在其指向下一个表的页表项中设置加密位来加密。这使得整个页表层次结构可以被加密。需要注意的是，仅因为 cr3 中设置了加密位，并不意味着整个层次结构都被加密。每个层次中的页表项都需要设置加密位以实现这一点。理论上，你可以只在 cr3 中设置加密位，以便 PGD 被加密，但不在 PGD 项中设置加密位，导致该项指向的页目录 (PUD) 不被加密。

当启用 SEV 时，指令页面和来宾页表始终被视为私有的。来宾内的所有 DMA 操作必须在共享内存上执行。由于在 64 位或 32 位 PAE 模式下，内存加密位由来宾操作系统控制，在所有其他模式下，SEV 硬件强制将内存加密位置为 1。

SME 和 SEV 的支持可以通过 CPUID 指令确定。CPUID 功能 0x8000001f 报告与 SME 相关的信息：

    0x8000001f[eax]:
        第 0 位指示是否支持 SME
        第 1 位指示是否支持 SEV
    0x8000001f[ebx]:
        第 5 到第 0 位：用于激活内存加密的页表位号
        第 11 到第 6 位：启用内存加密时物理地址空间减少的位数（这仅影响系统物理地址，不影响来宾物理地址）

如果存在对 SME 的支持，则可以使用 MSR 0xc00100010 (MSR_AMD64_SYSCFG) 来确定 SME 是否已启用和/或启用内存加密：

    0xc0010010:
        第 23 位：0 = 内存加密功能已禁用
                  1 = 内存加密功能已启用

如果支持 SEV，则可以使用 MSR 0xc0010131 (MSR_AMD64_SEV) 来确定 SEV 是否处于活动状态：

    0xc0010131:
        第 0 位：0 = 内存加密未处于活动状态
                  1 = 内存加密处于活动状态

Linux 依赖于 BIOS 设置此位，前提是 BIOS 已经确定启用内存加密所导致的物理地址空间减少（参见上面的 CPUID 信息）不会与系统的地址空间资源需求发生冲突。如果 Linux 启动时该位没有被设置，则 Linux 本身不会设置它，因此不可能启用内存加密。

Linux 内核中 SME 的状态可以这样记录：

    - 支持：
      CPU 支持 SME（通过 CPUID 指令确定）
    - 启用：
      支持并且 MSR_AMD64_SYSCFG 的第 23 位被设置
    - 活动：
      支持、启用并且 Linux 内核正在积极地将加密位应用于页表项（内核中的 SME 遮罩非零）
SME也可以在BIOS中启用和激活。如果在BIOS中启用了SME并激活了它，那么所有的内存访问都将被加密，并且没有必要激活Linux内存加密支持。
如果BIOS仅仅启用了SME（设置了MSR_AMD64_SYSCFG的第23位），则可以通过在内核命令行上提供mem_encrypt=on来启用内存加密。但是，如果BIOS没有启用SME，即使默认配置为启用或指定了mem_encrypt=on命令行参数，Linux也无法激活内存加密。

安全嵌套分页（SNP）
===================

SEV-SNP引入了新的特性（SEV_FEATURES[1:63]），这些特性可以由虚拟机监视器（hypervisor）为了增强安全性而启用。其中一些特性需要客户机实现才能正确运行。下表列出了在各种可能的客户机/虚拟机监视器SNP特性支持情况下的预期客户机行为：
+-----------------+---------------+---------------+------------------+
| 特性被虚拟机监视器启用 | 客户机需要实现 | 客户机有实现 | 客户机启动行为 |
+=================+===============+===============+==================+
|      否         |      否       |      否       |     正常启动     |
|                 |               |               |                  |
+-----------------+---------------+---------------+------------------+
|      否         |      是       |      否       |     正常启动     |
|                 |               |               |                  |
+-----------------+---------------+---------------+------------------+
|      否         |      是       |      是       |     正常启动     |
|                 |               |               |                  |
+-----------------+---------------+---------------+------------------+
|      是         |      否       |      否       | 带特性的启动     |
+-----------------+---------------+---------------+------------------+
|      是         |      是       |      否       | 平稳启动失败     |
+-----------------+---------------+---------------+------------------+
|      是         |      是       |      是       | 带特性的启动     |
+-----------------+---------------+---------------+------------------+

更多细节请参阅AMD64 APM[1] 第2卷：15.34.10 SEV_STATUS MSR

安全虚拟机服务模块（SVSM）
==========================
SNP提供了一项名为虚拟机权限级别（VMPL）的功能，该功能定义了四个不同的权限级别，客户软件可以在这些级别上运行。最高权限级别是0，数值更高的数字具有较低的权限。
更多详情请参阅AMD64 APM第2卷“15.35.7 虚拟机权限级别”，文档ID：24593
使用该特性时，不同的服务可以在不同的保护级别上运行，除了客户操作系统外，仍然在安全的SNP环境中运行。
它们可以向客户提供服务，例如vTPM。
当客户机不运行在VMPL0时，它需要与运行在VMPL0的软件进行通信以执行特权操作或与安全服务交互。例如，PVALIDATE操作**必须**在VMPL0执行。
在这种情况下，通常称运行在VMPL0上的软件为安全虚拟机服务模块（SVSM）。SVSM的发现以及用于与其通信的API在“适用于SEV-SNP客户的安全虚拟机服务模块”（docID：58019）中有详细记录。
（上述文档的最新版本可以通过搜索引擎如duckduckgo.com找到，只需输入：

  site:amd.com "适用于SEV-SNP客户的安全虚拟机服务模块"，docID：58019

例如。）
