======================
RISC-V Linux 启动映像头
======================

:作者: Atish Patra <atish.patra@wdc.com>
:日期: 2019年5月20日

本文档仅描述了 RISC-V Linux 的启动映像头的细节。
下面的 64 字节头部存在于解压缩后的 Linux 内核映像中：

```plaintext
u32 code0;           /* 可执行代码 */
u32 code1;           /* 可执行代码 */
u64 text_offset;     /* 映像加载偏移量，小端字节序 */
u64 image_size;      /* 实际映像大小，小端字节序 */
u64 flags;           /* 内核标志，小端字节序 */
u32 version;         /* 此头部的版本 */
u32 res1 = 0;        /* 预留 */
u64 res2 = 0;        /* 预留 */
u64 magic = 0x5643534952; /* 魔数，小端字节序，“RISCV” */
u32 magic2 = 0x05435352;  /* 第二个魔数，小端字节序，“RSC\x05” */
u32 res3;            /* 为 PE COFF 偏移预留 */
```

此头部格式与 PE/COFF 头部兼容，并且很大程度上受到了 ARM64 头部的启发。因此，将来可以将 ARM64 和 RISC-V 的头部合并为一个通用头部。
注释
=====

- 此头部也被重用于支持 RISC-V 的 EFI 存根。EFI 规范要求在内核映像的开头有 PE/COFF 映像头部，以便将其作为 EFI 应用程序加载。为了支持 EFI 存根，code0 被替换为 “MZ” 魔术字符串，而 res3（位于偏移量 0x3c）指向剩余的 PE/COFF 头部。
- version 字段表示头部的版本号。

    ==========  =============
    Bits 0:15   次版本号
    Bits 16:31  主版本号
    ==========  =============

  这保证了新旧版本头部之间的兼容性。当前版本定义为 0.2。
- 从版本 0.2 开始，“magic”字段已被弃用。在未来的版本中，它可能会被删除。最初，该字段本应与 ARM64 头部中的“magic”字段匹配，但不幸的是未能做到这一点。“magic2”字段取代了它，与 ARM64 头部相匹配。
- 在当前头部中，flags 字段只有一个标志位
=====  ====================================
 Bit 0  内核字节顺序。如果是大端则为 1，小端则为 0
=====  ====================================

- 映像大小对于引导加载器加载内核映像是必需的。否则，启动会失败。
您没有提供需要翻译的文本。请提供需要翻译成中文的英文或其他语言的文本。
