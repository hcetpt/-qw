SPDX 许可证标识符: GPL-2.0

RISC-V Linux 用户 ABI
=====================

/proc/cpuinfo 中的 ISA 字符串排序
------------------------------------

ISA 字符串中 ISA 扩展名称的标准顺序在无特权规范的第 27 章中定义。
该规范在提到排序时使用了模糊的措辞，例如“应当”，因此根据我们的需求，以下规则适用：

1. 单字母扩展位于首位，并按标准顺序排列
单字母扩展的标准顺序为 "IMAFDQLCBKJTPVH"
2. 所有多字母扩展将通过下划线与其他扩展分隔
3. 额外的标准扩展（以 'Z' 开头）将排在单字母扩展之后且在任何更高特权扩展之前
4. 对于额外的标准扩展，紧随 'Z' 后的第一位字母传统上表示最接近的字母表分类扩展。如果存在多个 'Z' 扩展，则首先按照上述标准顺序按类别排序，然后在同一类别内按字母顺序排序
5. 标准监督级扩展（以 'S' 开头）将列在标准无特权扩展之后。如果存在多个监督级扩展，则按字母顺序排列
6. 标准机器级扩展（以 'Zxm' 开头）将列在所有较低特权的标准扩展之后。如果存在多个机器级扩展，则按字母顺序排列
7. 非标准扩展（以 'X' 开头）将列在所有标准扩展之后。如果存在多个非标准扩展，则按字母顺序排列
一个遵循上述顺序的例子字符串如下所示：

   rv64imadc_zifoo_zigoo_zafoo_sbar_scar_zxmbaz_xqux_xrux

/proc/cpuinfo 中的 "isa" 和 "hart isa" 行
-------------------------------------------

/proc/cpuinfo 中的 "isa" 行描述了内核识别并实现在所有内核上的 RISC-V ISA 扩展的最低公有部分。相反，“hart isa”行描述了内核在特定内核上所识别的一组扩展，即使这些扩展可能不会出现在系统中的所有内核上。
在这两种情况下，扩展的存在仅能保证硬件具有所描述的能力。要让扩展的能力完全为用户空间程序所用，可能还需要额外的内核支持或策略更改。
同样地，对于S模式的扩展，出现在这些行中并不意味着内核正在利用该扩展，或者该特性将在由该内核管理的客户虚拟机（VM）中可见。
相反地，如果这些行中没有出现某个扩展，并不一定意味着硬件不支持该特性。运行中的内核可能没有识别出该扩展，或者有意将其从列表中移除。
### 对齐错误访问

对齐错误的标量访问在用户空间中是被支持的，但它们的性能可能较差。对齐错误的向量访问仅在支持Zicclsm扩展的情况下才被支持。
