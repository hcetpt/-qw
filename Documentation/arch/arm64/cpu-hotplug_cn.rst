SPDX 许可证标识符: GPL-2.0
.. _cpuhp_index:

====================
CPU 热插拔与 ACPI
====================

在 ARM64 领域中，CPU 热插拔通常是指内核使用 PSCI 将 CPU 上线/下线。本文档涉及的是 ACPI 固件允许将启动时未可用的 CPU 在稍后的时间加入到系统中。
`possible` 和 `present` 是指 Linux 视角下的 CPU 状态。

物理系统的 CPU 热插拔 - 启动时不存在的 CPU
----------------------------------------------------------

对于物理系统来说，需要标记那些“可能”存在但当前“不在场”的 CPU 为“在场”。例如，在双插槽机器中，其中一个插槽中的处理器可以在系统运行时被替换。
这种功能目前不支持。
在 ARM64 领域中，CPU 不是一个单一设备，而是系统的一部分。
没有支持在系统运行过程中物理添加（或移除）CPU 的系统，并且 ACPI 无法充分描述这种情况。
例如，新 CPU 带来了新的缓存，但是平台的缓存拓扑是在一个静态表——PPTT 中描述的。缓存如何在 CPU 之间共享是不可发现的，必须由固件来描述。
例如，每个 CPU 的 GIC 分发器必须在启动期间由驱动程序访问以发现系统范围内的支持特性。ACPI 的 MADT GICC 结构可以描述与禁用 CPU 关联的分发器，但不能描述该分发器是否可访问，只能说明它不是“始终开启”的。
ARM64 的 ACPI 表格假定所有描述的内容都是“在场”的。

虚拟系统的 CPU 热插拔 - 启动时未启用的 CPU
---------------------------------------------------------

虚拟系统的优势在于所有系统可能拥有的属性都可以在启动时被描述。此类设备由于是模拟的，所以不存在实际的电源域考虑。
虚拟系统上的 CPU 热插拔是被支持的。它与物理 CPU 热插拔不同，因为在描述中所有资源都被标记为“存在”，但固件可能会将 CPU 标记为禁用。固件仅影响 CPU 的在线/离线行为。例如，在一台虚拟机启动时只有一个 CPU，而当云编排器部署工作负载后可以添加额外的 CPU。

对于虚拟机而言，VMM（如 QEMU）扮演着固件的角色。
虚拟热插拔作为固件策略实施，影响哪些 CPU 可以上线。固件可以通过 PSCI 的返回码来执行其策略，例如“DENIED”。

ACPI 表必须描述虚拟机的所有资源。固件希望从启动时（或之后）就禁用的 CPU 不应该在 MADT GICC 结构中被“启用”，但应该设置“可在线”位，以表明它们可以在稍后启用。引导 CPU 必须被标记为“启用”。始终开启的 GICR 结构必须用于描述重新分配器。

被描述为“可在线”但未被“启用”的 CPU 可以通过 DSDT 的处理器对象的 _STA 方法设置为启用状态。在虚拟系统上，_STA 方法必须始终报告 CPU 为“存在”。固件策略的变化可以通过设备检查或弹出请求通知给操作系统。

在静态表中被描述为“启用”的 CPU 不应由固件动态修改其 _STA。像 kexec 这样的软重启特性会从这些静态表中重读系统的静态属性，并可能在这些表不再描述运行中的系统时出现故障。Linux 将在稍后的启动过程中从 _STA 方法中重新发现系统的动态属性。
