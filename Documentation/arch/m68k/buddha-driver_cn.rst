============= Amiga 佛像 (Buddha) 和 Catweasel IDE 驱动 ==============
  
Amiga 佛像 (Buddha) 和 Catweasel IDE 驱动（ide.c 的一部分）由 Geert Uytterhoeven 根据以下规格编写：

------------------------------------------------------------------------

佛像 IDE 控制器以及 Catweasel Zorro-II 版本中佛像部分的寄存器映射。

自动配置已按照 Commodore 在其手册中描述的方式实现，没有使用任何技巧（例如将某些地址线排除在等式之外...）
如果你想自行配置这块板卡（例如让 Linux 内核来配置这张卡），请参考 Commodore 的文档。读取字节信息应提供以下信息：

- 制造商编号：4626 ($1212)
- 产品编号：0 （Catweasel Z-II 的产品编号为 42）
- 序列号：0
- ROM 向量：$1000

该卡应该是 Z-II 板卡，大小为 64K，不在自由内存列表内，ROM 向量有效，板卡上没有第二个自动配置设备，没有空间偏好，并支持“永久静音”设置。
设置基址应该分两步进行，正如 Amiga Kickstart 所做的那样：8 位地址的低四位写入到 $4a，然后整个字节写入到 $48，此时写入 $4a 的次数无关紧要，只要不触碰 $48 即可。在写入 $48 后，整张卡会从 $e8 消失，并映射到刚写入的新地址。确保先写入 $4a，否则你找到板卡的机会只有 1/16 :-)
即使映射到 $e8，本地内存映射仍然有效：

==============  ===================================================
$0-$7e		 自动配置空间，参见 Z-II 文档
$80-$7fd		预留

$7fe		速度选择寄存器：读写
		 （具体描述见下文）

$800-$8ff		IDE 选择 0（端口 0，寄存器集 0）

$900-$9ff		IDE 选择 1（端口 0，寄存器集 1）

$a00-$aff		IDE 选择 2（端口 1，寄存器集 0）

$b00-$bff		IDE 选择 3（端口 1，寄存器集 1）

$c00-$cff		IDE 选择 4（端口 2，寄存器集 0，
				仅 Catweasel 支持！）

$d00-$dff		IDE 选择 5（端口 3，寄存器集 1，
				仅 Catweasel 支持！）

$e00-$eff		本地扩展端口，在 Catweasel Z-II 上，
				Catweasel 寄存器也映射在这里
永远不要触碰，使用 multidisk.device！

$f00		只读，字节访问：位 7 显示 IDE 端口 0 的 IRQ 线状态
$f01-$f3f		$f00 的镜像

$f40		只读，字节访问：位 7 显示 IDE 端口 1 的 IRQ 线状态
$f41-$f7f		$f40 的镜像

$f80		只读，字节访问：位 7 显示 IDE 端口 2 的 IRQ 线状态
				（仅 Catweasel 支持！）
$f81-$fbf		$f80 的镜像

$fc0		只写：向此寄存器写入任意值将启用从 IDE 端口到 Zorro 总线的 IRQ 传递。该机制是为与有缺陷或固件存在问题的硬盘兼容而实现的，这些硬盘在启动时可能会拉高 IRQ 线。如果始终将中断传递给总线，则计算机可能无法启动。一旦启用，此标志将无法再次禁用。软件无法确定该标志的状态（为什么需要呢？如果确实需要，请告诉我！）
$fc1-$fff		$fc0 的镜像

$1000-$ffff	佛像 ROM，ROM 芯片中的偏移量为 $1000。ROM 芯片的地址 $0 至 $fff 无法读取。ROM 是字节宽度的，并且映射到偶数地址
IDE端口会发出INT2中断。可以通过读取三个寄存器（对于Buddha仅两个）$f00、$f40和$f80来读取IDE端口的IRQ线电平。这样可以处理多个I/O请求，并且很容易确定哪个驱动程序需要响应INT2中断。Buddha和Catweasel扩展板可以发出INT6中断。为I/O模块和系统操作员的I/O模块提供了一个单独的记忆体映射。

IDE端口通过地址线A2至A4供电，就像Amiga 1200和Amiga 4000的IDE端口一样。这样现有的驱动程序可以轻松地移植到Buddha上。一个move.l指令从IDE端口的同一地址读取两个字，因为每个字都被镜像一次。不能使用movem指令，但这并不必要，因为你只能用这种技术加速68000系统。具有快速内存的68020系统使用move.l更快。

如果你使用IDE端口的镜像寄存器并且A6设置为1，Buddha不会关心你在速度寄存器中选择的速度（参见下面的详细信息）。当A6设置为1时（例如端口0，寄存器集0的地址是$840），将进行780ns访问。这些寄存器应用于硬盘/CD-ROM命令访问，因为根据ATA-X3T9手册，命令访问是以字节宽度进行的，需要较慢的速度。

关于速度寄存器：该寄存器是字节宽度的，只使用最高三位（位7到5）。位4必须始终设置为1以与以后版本的Buddha兼容（如果我更新这个版本的话）。我认为我永远不会使用最低四位，但按照定义它们必须被设置为1。

表中的值需要左移5位并与$1f（这设置了最低5位）进行或运算。

所有的时间都具有以下共同点：Select和IOR/IOW同时上升。IOR和IOW相对于Zorro总线上的时钟有大约30ns的传播延迟，这就是为什么数值不是71的倍数。一个时钟周期持续71ns（在PAL系统的14.18MHz下准确为70.5ns）。

值0（重置后的默认值）
   497ns Select（7个时钟周期），IOR/IOW在172ns后（2个时钟周期）
   （与Amiga 1200在其IDE端口上没有加速卡时相同的定时）

值1
   639ns Select（9个时钟周期），IOR/IOW在243ns后（3个时钟周期）

值2
   781ns Select（11个时钟周期），IOR/IOW在314ns后（4个时钟周期）

值3
   355ns Select（5个时钟周期），IOR/IOW在101ns后（1个时钟周期）

值4
   355ns Select（5个时钟周期），IOR/IOW在172ns后（2个时钟周期）

值5
   355ns Select（5个时钟周期），IOR/IOW在243ns后（3个时钟周期）

值6
   1065ns Select（15个时钟周期），IOR/IOW在314ns后（4个时钟周期）

值7
   355ns Select（5个时钟周期），IOR/IOW在101ns后（1个时钟周期）

当使用A6=1访问IDE寄存器（例如$84x）时，无论你在速度寄存器中选择了什么，定时总是模式0 8位兼容：

781ns Select，IOR/IOW在4个时钟周期后（等于314ns）激活

所有具有非常短的Select信号（355ns快速访问）的时间都取决于系统中使用的加速卡：有时总线接口会插入另外两个时钟周期，使整个访问时间延长到497ns。这不会影响控制器的可靠性和卡的性能，因为这种情况并不常见。

所有的时间都是计算得出的，并且只通过测量确认，这使我能够计数时钟周期。如果系统由非28.37516MHz振荡器（例如NTSC频率28.63636MHz）时钟，则每个时钟周期会缩短到略小于70ns（不值得一提）。你可能会想到通过超频系统来获得一些性能提升，但你将需要一个多同步监视器或者图形卡，并且你的内部磁盘驱动器将会出现问题，因此你不应该这样调整你的Amiga。

为了让你编写既与Buddha兼容又与Catweasel Z-II兼容的软件，Buddha的行为就像一个没有在第三个IDE端口连接任何设备的Catweasel Z-II。在Buddha上，IRQ寄存器$f80始终显示“此处无IRQ”。对第三个IDE端口的访问在Buddha上进入数据的涅槃状态。
詹斯·申恩菲尔德 1997年2月19日

更新于 1997年5月27日

电子邮件：sysop@nostalgic.tng.oche.de

请注意，电子邮件地址中的拼写错误 "nostlgic" 实际上可能是 "nostalgic"。
