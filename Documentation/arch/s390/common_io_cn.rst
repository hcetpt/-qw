======================
S/390 公共 I/O 层
======================

命令行参数、procfs 和 debugfs 条目
===================================================

命令行参数
-----------------------

* ccw_timeout_log

  在出现 ccw 设备超时时启用调试信息的日志记录。
* cio_ignore = device[,device[,..]]

  device := {all | [!]ipldev | [!]condev | [!]<devno> | [!]<devno>-<devno>}

  指定的设备将被公共 I/O 层忽略；不会对这些设备进行检测和设备感知。与问题设备相关联的子通道将被视为未连接任何设备。
  被忽略的设备之后可以取消忽略；请参阅“/proc 条目”部分了解详情。
  必须按照总线 ID（0.x.abcd）或十六进制设备编号（0xabcd 或 abcd，为了向后兼容 2.4 版本）来指定设备。如果你给出一个设备编号 0xabcd，它将被解释为 0.0.abcd。
  可以使用 "all" 关键字来忽略所有设备。"ipldev" 和 "condev" 关键字分别用来指代基于 CCW 的引导设备和 CCW 控制台设备（这些关键字可能只有结合 "!" 运算符才有用）。"!" 运算符会导致 I/O 层不忽略某个设备。
  命令行是从左到右解析的。
  例如::

    cio_ignore=0.0.0023-0.0.0042,0.0.4711

  将忽略从 0.0.0023 到 0.0.0042 以及 0.0.4711（如果被检测到）的所有设备。
  作为另一个例子::

    cio_ignore=all,!0.0.4711,!0.0.fd00-0.0.fd02

  将忽略所有设备，但不包括 0.0.4711、0.0.fd00、0.0.fd01 和 0.0.fd02。
  默认情况下，没有设备被忽略。

/proc 条目
-------------

* /proc/cio_ignore

  列出被公共 I/O 层忽略的设备范围（按总线 ID 表示）。
可以通过向 `/proc/cio_ignore` 管道输入来取消忽略特定或所有设备。
- `free all` 将取消忽略所有被忽略的设备；
- `free <设备范围>, <设备范围>, ...` 将取消忽略指定的设备
例如，如果设备 0.0.0023 到 0.0.0042 和 0.0.4711 被忽略了，

  - `echo free 0.0.0030-0.0.0032 > /proc/cio_ignore`
    将取消忽略设备 0.0.0030 至 0.0.0032，并且将保留设备 0.0.0023
    到 0.0.002f、0.0.0033 到 0.0.0042 和 0.0.4711 的忽略状态；
  - `echo free 0.0.0041 > /proc/cio_ignore` 将进一步取消忽略设备
    0.0.0041；
  - `echo free all > /proc/cio_ignore` 将取消忽略所有剩余被忽略的
    设备
当设备被取消忽略时，会执行设备识别和感应，并尽可能通知设备驱动程序，从而使设备对系统可用。请注意，取消忽略是异步进行的。
您还可以通过向 `/proc/cio_ignore` 管道输入来添加要忽略的设备范围；`add <设备范围>, <设备范围>, ...` 将忽略指定的设备
注意：虽然已知设备可以被添加到要忽略的设备列表中，但这样做不会产生任何影响。但是，如果这样的设备消失后重新出现，则会被忽略。要使已知设备消失，需要使用“purge”命令（见下文）
例如：

	`echo add 0.0.a000-0.0.accc, 0.0.af00-0.0.afff > /proc/cio_ignore`

  将把 0.0.a000-0.0.accc 和 0.0.af00-0.0.afff 添加到被忽略的设备列表中
您可以通过以下方式移除已知但已被忽略的设备：

	`echo purge > /proc/cio_ignore`

  所有被忽略但仍注册且未在线（=未使用）的设备将被取消注册，从而从系统中移除
设备可以通过总线 ID（0.x.abcd）指定，或者为了与 2.4 版本向后兼容，也可以用十六进制的设备编号（0xabcd 或 abcd）指定。给出为 0xabcd 的设备编号将被解释为 0.0.abcd
* `/proc/cio_settle`

  对此文件的写入请求将被阻塞，直到处理完所有排队的 cio 操作。这将允许用户空间在更改 cio_ignore 或硬件配置后等待影响设备可用性的待处理工作完成。
对于 2.4 版本中 /proc 文件系统里包含的一些信息（具体来说，是 /proc/subchannels 和 /proc/chpids），请参阅 driver-model.txt。

原先存储在 /proc/irq_count 中的信息现在移到了 /proc/interrupts 中。

**debugfs 目录条目**
-------------------

* /sys/kernel/debug/s390dbf/cio_*/ （S/390 调试特性）

  该调试特性生成了一些视图来保存各种调试输出：

- /sys/kernel/debug/s390dbf/cio_crw/sprintf
    来自处理挂起的通道报告字（机器检查处理）的消息。
- /sys/kernel/debug/s390dbf/cio_msg/sprintf
    来自通用 I/O 层的各种调试消息。
- /sys/kernel/debug/s390dbf/cio_trace/hex_ascii
    记录通用 I/O 层函数调用日志，并且如果适用的话，记录这些函数被哪些子通道调用，以及一些数据结构（如错误情况下的 irb）的转储。

可以通过将数字 0 到 6 管道到 /sys/kernel/debug/s390dbf/cio_*/level 来改变日志记录的详细程度；有关 S/390 调试特性的详细文档，请参阅（Documentation/arch/s390/s390dbf.rst）。
