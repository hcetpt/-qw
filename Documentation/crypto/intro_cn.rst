内核加密API接口规范
======================

介绍
------------

内核加密API提供了一组丰富的加密密码，以及其它数据转换机制，并提供了调用这些方法的手段。本文档包含了API的描述，并提供了示例代码。

为了理解和正确使用内核加密API，需要对其结构进行简要解释。根据架构，API可以分为不同的组件。基于架构规范，为加密算法开发人员提供了提示。API函数调用文档的链接在文章结尾给出。

内核加密API将所有算法称为“变换”。因此，通常用于表示变换的变量名为“tfm”。除了加密操作外，内核加密API还知道压缩变换，并以与密码相同的方式处理它们。

内核加密API服务于以下实体类型：

- 请求加密服务的消费者
- 可以通过内核加密API被消费者调用的数据转换实现（通常是密码）

此规范旨在为内核加密API的消费者以及实现密码的开发者提供指导。然而，它不讨论所有可由数据转换实现（即注册到内核加密API的密码算法和其它转换（如CRC或甚至压缩算法））可用的API调用。

注意：术语“变换”和密码算法在这里可以互换使用。

术语
-----------

变换实现是实际的代码或硬件接口，用于实现特定的变换，并且具有精确定义的行为。

变换对象（TFM）是变换实现的一个实例。一个特定的变换实现可以与多个变换对象关联。每个这样的变换对象由加密API的消费者或其他变换持有。当加密API消费者请求一个变换实现时，会分配变换对象。然后，消费者会获得一个包含变换对象（TFM）的结构。

包含变换对象的结构也可以被称为“密码句柄”。这样的密码句柄始终遵循反映此类密码句柄适用API调用的以下阶段：

1. 初始化密码句柄
2. 执行所有适用于该句柄的预定加密操作，其中加密句柄必须为每次API调用提供。
3. 销毁一个加密句柄
在使用初始化API调用时，会创建一个加密句柄并返回给用户。因此，请参阅所有与用户预期接收的数据结构类型相关的初始化API调用，并随后进行使用。这些初始化API调用都遵循相同的命名规范crypto_alloc*。
转换上下文是与转换对象关联的私有数据。
