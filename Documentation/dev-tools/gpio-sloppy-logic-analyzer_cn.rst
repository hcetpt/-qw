### SPDX 许可证标识符: GPL-2.0

=============================================
基于 Linux 内核 GPIO 的简易逻辑分析器
=============================================

:作者: 沃尔夫拉姆·桑

简介
============

本文档简要介绍了如何在隔离的 CPU 上运行基于 GPIO 的内核简易逻辑分析器。
简易逻辑分析器将利用系统上的一些 GPIO 线路作为输入模式，快速采样这些数字线路。如果满足奈奎斯特准则，则会生成一个时间序列日志，其中包含这些线路上的大致波形。一种使用方法是通过电线（即数字探针）分析连接到这些 GPIO 线路的外部流量，充当常见的逻辑分析器。
另一种特性是在外围设备的 I/O 单元可以同时用作 GPIO 输入模式时监视这些设备上的数据。这意味着你可以在没有连线的情况下监视 I2C 流量（如果你的硬件支持的话）。在引脚控制子系统中，这样的引脚控制器被称为“非严格”：特定的引脚可以同时用于特定的外围设备和 GPIO 输入线路。
请注意，这是一个最后手段的分析器，可能会受到延迟、非确定性代码路径和不可屏蔽中断的影响。之所以称为“简易”，是有原因的。然而，对于远程开发来说，在获得初步视图并辅助进一步调试方面，它可能很有用。

设置
=====

你的内核必须启用 CONFIG_DEBUG_FS 和 CONFIG_CPUSETS。理想情况下，你的运行环境不会使用 cpuset，否则隔离 CPU 核心将更容易。如果你确实需要 cpuset，请确保简易逻辑分析器的辅助脚本不会干扰你的其他设置。
告诉内核哪些 GPIO 被用作探针。对于基于设备树的系统，你需要使用以下绑定。因为这些绑定仅用于调试，所以没有官方的模式::

    i2c-analyzer {
            compatible = "gpio-sloppy-logic-analyzer";
            probe-gpios = <&gpio6 21 GPIO_OPEN_DRAIN>, <&gpio6 4 GPIO_OPEN_DRAIN>;
            probe-names = "SCL", "SDA";
    };

请注意，你必须为指定的每个 GPIO 提供名称。目前最多支持 8 个探针。理论上 32 个是可能的，但尚未实现。

使用
=====

逻辑分析器可以通过 debugfs 中的文件进行配置。但是，强烈建议不要直接使用它们，而是使用脚本 `tools/gpio/gpio-sloppy-logic-analyzer`。除了更全面地检查参数外，该脚本还将隔离 CPU 核心，以便在测量过程中受到最小的干扰。
该脚本有一个帮助选项来解释参数。对于上述设备树片段中分析的 Renesas Salvator-XS 板上的 400kHz I2C 总线，使用的设置如下：隔离的 CPU 应当是 CPU1，因为它是一个 big.LITTLE 架构中的大核心。由于 CPU1 是默认值，我们不需要任何参数。总线速度为 400kHz。因此，采样定理告诉我们至少需要以 800kHz 的频率采样。然而，I2C 启动条件中两个信号的下降沿发生得更快，所以我们需要更高的采样频率，例如 `-s 1500000` 表示 1.5MHz。此外，我们不希望立即开始采样，而是等待空闲总线上出现启动条件。因此，我们需要设置触发器为 SDA 的下降沿而 SCL 保持高电平，即 `-t 1H+2F`。最后是持续时间，假设这里为 15ms，结果参数为 `-d 15000`。因此，总的命令为::

    gpio-sloppy-logic-analyzer -s 1500000 -t 1H+2F -d 15000

请注意，进程会返回到提示符，但在后台仍然有一个子进程正在进行采样。除非这个子进程已经完成，否则在当前或指定目录中找不到结果文件。对于上述示例，我们需要触发 I2C 通信::

    i2cdetect -y -r <你的总线编号>

结果是一个 .sr 文件，可以使用免费的 `sigrok`_ 项目中的 PulseView 或 sigrok-cli 处理。这是一个包含二进制样本数据的压缩文件，也可以被其他软件处理。文件名是逻辑分析器实例名称加上自纪元以来的时间戳。
.. _sigrok: https://sigrok.org/
