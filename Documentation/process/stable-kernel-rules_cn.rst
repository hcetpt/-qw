关于Linux -stable版本发布的一切你想要了解的内容
=================================================

关于哪些补丁可以被接受，哪些不可以被接受进入“-stable”树的规则如下：

- 该补丁或其等效修复必须已经存在于Linux主线（上游）版本中。
- 它必须显然是正确的，并且经过测试。
- 它不能超过100行（包括上下文）。
- 它必须遵循`提交补丁规则 <submittingpatches>`__。
- 它必须修复一个实际困扰人们的bug，或者仅仅添加一个设备ID。具体来说：

  - 它修复了一个问题，例如oops、挂起、数据损坏、真正的安全问题、硬件特性、构建错误（但不包括标记为CONFIG_BROKEN的问题），或者其他“哦，这不好”的问题。

- 经用户报告的分布内核中的严重问题也可以考虑，前提是它们修复了显著的性能或交互性问题。由于这些修复不太明显并且存在潜在的隐性回归风险，因此只应由分布内核维护者提交，并附带Bugzilla条目的链接（如果存在）和有关用户可见影响的附加信息。
- 不接受诸如“这可能是个问题...”类型的补丁，例如“理论上的竞态条件”，除非同时提供了如何利用该漏洞的解释。
- 不接受对用户没有实际益处的“微小”修复（如拼写更改、空格清理等）。
向-stable树提交补丁的流程
----------------------------------------------------

.. note::

   安全补丁不应仅通过-stable审核流程处理，而应遵循 :ref:`Documentation/process/security-bugs.rst <securitybugs>` 中的程序。
提交变更到-stable树有三种方式：

1. 在提交主线合并的补丁描述中添加一个“稳定标签”。
2. 请求稳定团队采纳已经并入主线的补丁。
3. 向稳定团队提交一个等同于已并入主线变更的补丁。

下面各节将详细介绍每种选项。
:ref:`option_1` 是**强烈**推荐的方式，因为它最简单且最常见；
:ref:`option_2` 主要适用于提交时未考虑回退的情况；
:ref:`option_3` 是前两种选项的替代方案，适用于需要对已并入主线的补丁进行调整以应用于较旧系列（例如由于API变更）的情况。
使用选项2或3时，你可以请求将你的变更包含在特定的稳定系列中。这样做时，请确保该修复或其等效版本适用于所有仍受支持的较新稳定树，并已提交或已存在于其中。这有助于防止用户在更新时遇到的回归问题，例如，如果为5.19-rc1合并的修复被回退到5.10.y，但未回退到5.15.y。
.. _option_1:

选项1
********

为了让你提交的补丁在主线合并后自动被稳定树采纳，在签名字段中添加以下标签：

  Cc: stable@vger.kernel.org

当修复未公开的安全漏洞时，请改用 ``Cc: stable@kernel.org``：这样可以减少通过'git send-email'意外公开修复的风险，因为发往该地址的邮件不会被投递到任何地方。
一旦补丁被并入主线，无需作者或子系统维护者做其他事情，它就会被应用到稳定树上。
为了向稳定团队发送额外的指令，请使用类似shell风格的内联注释来传递任意或预定义的说明：

* 指定用于cherry picking的补丁附加先决条件：

    Cc: <stable@vger.kernel.org> # 3.3.x: a1f84a3: sched: 检查空闲状态
    Cc: <stable@vger.kernel.org> # 3.3.x: 1b9508f: sched: 限制新空闲进程
    Cc: <stable@vger.kernel.org> # 3.3.x: fd21073: sched: 修复亲和力逻辑
    Cc: <stable@vger.kernel.org> # 3.3.x
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

  标签序列的意义如下：

    git cherry-pick a1f84a3
    git cherry-pick 1b9508f
    git cherry-pick fd21073
    git cherry-pick <此提交>

  注意，对于一个补丁系列，您无需列出该系列中已经存在的补丁作为先决条件。例如，如果您有以下补丁系列：

    patch1
    patch2

  其中patch2依赖于patch1，如果已经标记了patch1以供稳定版本合并，则无需将patch1列为patch2的先决条件。
* 指出内核版本先决条件：

    Cc: <stable@vger.kernel.org> # 3.3.x

  标签的意义如下：

    git cherry-pick <此提交>

  对于每个从指定版本开始的"-stable"树
注意，如果稳定团队可以从Fixes:标签推断出合适的版本，则这种标记是不必要的。
* 延迟补丁的合并：

    Cc: <stable@vger.kernel.org> # 在-rc3之后

* 指出已知问题：

    Cc: <stable@vger.kernel.org> # 请参见补丁描述，需要调整以适应<= 6.3版本

此外，还有一种稳定的标签变体，您可以使用它使稳定团队的反向移植工具（如AUTOSEL或查找包含'Fixes:'标签的提交的脚本）忽略某个变更：

     Cc: <stable+noautosel@kernel.org> # 原因在此处，并且必须存在

.. _option_2:

选项2
********

如果补丁已经被合并到主线，向stable@vger.kernel.org发送一封电子邮件，内容包括补丁的主题、提交ID、您认为应该应用的理由以及希望将其应用到哪些内核版本。

.. _option_3:

选项3
********

在确认遵循上述规则后，将补丁发送到stable@vger.kernel.org，并提及希望其应用于哪些内核版本。这样做时，您必须在提交的更改日志中用单独的一行注明上游提交ID，如下所示：

  commit <sha1> 上游提交
或者替代地：

  [ 上游提交 <sha1> ]

如果提交的补丁与原始上游补丁不同（例如因为需要根据旧API进行调整），则必须在补丁描述中非常清晰地记录并证明这一点。
提交后的跟进
------------------------

当补丁被接受进入队列时，发件人会收到ACK；如果补丁被拒绝，则会收到NAK。这一响应可能需要几天时间，具体取决于稳定团队成员的日程安排。
如果被接受，补丁将被添加到-stable队列中，由其他开发者和相关子系统维护者进行审核。
审核周期
------------

- 当-stable维护者决定进行审核周期时，补丁将被发送给审核委员会，并抄送给受影响区域的维护者（除非提交者本身就是该区域的维护者），同时抄送给linux-kernel邮件列表。
- 审核委员会有48小时的时间来ACK或NAK该补丁。
- 如果补丁被委员会成员拒绝，或者 linux-kernel 成员对补丁提出异议，指出维护者和成员未曾意识到的问题，该补丁将从队列中移除。
- 已确认（ACKed）的补丁将作为候选发布（-rc）的一部分再次发布，供开发者和测试人员进行测试。
- 通常只发布一个 -rc 版本，但如果存在未解决的问题，某些补丁可能会被修改或移除，或者额外的补丁可能会被加入队列。然后会发布额外的 -rc 版本并进行测试，直到没有问题为止。
- 对 -rc 发布的响应可以通过邮件列表发送带有任何所需测试信息的 "Tested-by:" 邮件。这些 "Tested-by:" 标签将被收集并添加到发布的提交中。
- 在审查周期结束时，新的 -stable 版本将包含所有已排队并通过测试的补丁。
- 安全补丁将直接由安全内核团队接受进入 -stable 分支，并不经过正常的审查周期。如需了解更多详细信息，请联系内核安全团队。

分支
----

- 补丁队列，包括已完成版本和在开发中的版本，可以在以下位置找到：

    https://git.kernel.org/pub/scm/linux/kernel/git/stable/stable-queue.git

- 所有稳定内核版本的最终发布和带标签的版本可以在每个版本的单独分支中找到：

    https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git

- 所有稳定内核版本的候选发布可以在此处找到：

    https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux-stable-rc.git/

  .. warning::
     -stable-rc 分支是稳定队列的一个时间快照，并且会频繁变化，因此经常需要重新基线。它仅应用于测试目的（例如，供持续集成系统使用）。

审查委员会
----------

- 审查委员会由志愿承担此任务的若干内核开发者组成，还有一些非志愿的开发者。
