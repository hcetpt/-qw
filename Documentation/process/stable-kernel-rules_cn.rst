你一直想知道的关于 Linux -stable 发布版的所有信息
===============================================================

有关哪些补丁会被接受，哪些不会被接受到 "-stable" 树中的规则如下：

- 该补丁或其等效修复必须已经存在于 Linux 主线（上游）版本中。
- 必须显而易见是正确的，并且经过了测试。
- 不得超过 100 行（包括上下文）。
- 必须遵循
  :ref:`文档/过程/提交补丁.rst <submittingpatches>`
  中的规定。
- 必须修复一个真实存在的问题，例如引起困扰的 bug 或仅添加设备 ID。具体来说：
  
  - 它修复了一个问题，如崩溃、系统挂起、数据损坏、真正的安全问题、硬件特性、构建错误（但不包括标记为 CONFIG_BROKEN 的项目），或者一些“哦，这可不好”的问题。

- 用户报告的、对发行版内核有严重影响的问题也可能被考虑，前提是它们修复了显著的性能或交互性问题。由于这类修复不是那么明显，存在潜在回退的风险较高，因此只应由发行版内核维护者提交，并附上指向 Bugzilla 条目的补充说明（如果存在），以及关于用户可见影响的额外信息。
- 不接受诸如“这可能是个问题...”之类的情况，比如“理论上的竞态条件”，除非同时提供了如何利用此 bug 的解释。
- 不接受对用户没有益处的“微不足道”的修复（如拼写更改、空白清理等）。
向-stable分支提交补丁的流程
----------------------------------------------------

.. note::

   安全补丁不应仅通过-stable审查流程处理，而应遵循
   :ref:`Documentation/process/security-bugs.rst <securitybugs>` 中的程序。
有三种方式可以向-stable分支提交变更：

1. 在您提交主线合并的补丁描述中添加“稳定标签”
2. 请求稳定团队采纳已经合并到主线的补丁
3. 向稳定团队提交与已合并到主线的变更等效的补丁
下面的各节将详细介绍每种选项。
:ref:`option_1` 是**强烈**推荐的方式，它既简单也是最常见的做法。
:ref:`option_2` 主要适用于在提交时未考虑回退的情况。
:ref:`option_3` 是对前两种方式的补充，适用于需要对已合并到主线的补丁进行调整以适应较老版本（例如，由于API变更）的情形。
当使用选项2或3时，您可以请求将您的变更包含在特定的稳定系列中。这样做时，请确保修复或其等效方案在所有受支持的较新稳定分支中适用、已提交或已存在。这有助于防止用户在更新后可能遇到的回归问题，例如，如果一个为5.19-rc1合并的修复被回退到5.10.y，但没有回退到5.15.y。
.. _option_1:

选项1
******

为了使您提交主线合并的补丁能自动被-stable分支采纳，请在签核区域添加如下标签：

```
Cc: stable@vger.kernel.org
```

如果您正在修复未公开的安全漏洞，则应使用 ``Cc: stable@kernel.org``：这样可以减少通过 'git send-email' 不经意间向公众暴露修复的可能性，因为发往该地址的邮件不会被投递至任何地方。
一旦补丁被合并到主线，无需作者或子系统维护者做任何额外工作，它就会被应用到稳定的分支上。
为了向稳定版团队发送额外的指示，请使用类似Shell风格的内联注释来传递任意或预定义的备注：

* 指定用于选择性合并的额外补丁前提条件： 

    Cc: <stable@vger.kernel.org> # 3.3.x: a1f84a3: 调度: 检查是否空闲
    Cc: <stable@vger.kernel.org> # 3.3.x: 1b9508f: 调度: 限制新空闲进程的速率
    Cc: <stable@vger.kernel.org> # 3.3.x: fd21073: 调度: 修复亲和力逻辑
    Cc: <stable@vger.kernel.org> # 3.3.x
    签名确认: Ingo Molnar <mingo@elte.hu>

  这个标签序列意味着：

    git cherry-pick a1f84a3
    git cherry-pick 1b9508f
    git cherry-pick fd21073
    git cherry-pick <这个提交>

  注意，对于一个补丁系列，你不必列出该系列中已有的补丁作为前提条件。例如，如果你有以下补丁系列：

    补丁1
    补丁2

  其中补丁2依赖于补丁1，如果你已经为补丁1标记了稳定版包含，则不需要将补丁1列为补丁2的前提条件。
* 指出内核版本前提条件：

    Cc: <stable@vger.kernel.org> # 3.3.x

  这个标签意味着：

    git cherry-pick <这个提交>

  对于每个从指定版本开始的“-stable”树
注意，如果稳定版团队可以从“Fixes:”标签中推断出合适的版本，则这种标记是不必要的。
* 延迟补丁的选择性合并：

    Cc: <stable@vger.kernel.org> # 在-rc3之后

* 指出已知问题：

    Cc: <stable@vger.kernel.org> # 参见补丁描述，需要对<= 6.3进行调整

此外，还有一种稳定的标签变体，你可以用它来使稳定版团队的回退工具（例如AUTOSEL或寻找包含“Fixes:”标签的提交的脚本）忽略某个更改：

     Cc: <stable+noautosel@kernel.org> # 原因写在这里，并且必须存在

.. _option_2:

选项2
*****

如果补丁已经被合并到主线，向stable@vger.kernel.org发送一封邮件，包含补丁的主题、提交ID、你认为应该应用的理由以及你希望它应用于哪些内核版本。
.. _option_3:

选项3
*****

验证补丁遵循上述规则后，将其发送到stable@vger.kernel.org，并指出你希望它应用于哪些内核版本。在这样做时，你必须在提交的变更日志中以单独的一行记录上游提交ID，位于提交文本之上，如下所示：

  提交 <sha1> 上游
或者可替换为：

  [ 上游提交 <sha1> ]

如果提交的补丁与原始上游补丁有所不同（例如因为必须针对旧API进行调整），则必须在补丁描述中非常清楚地记录并说明理由。

提交后的跟进
------------------

当补丁被接受进入队列时，发件人会收到ACK；如果补丁被拒绝，则会收到NAK。根据稳定版团队成员的日程安排，这个响应可能需要几天时间。
如果被接受，补丁将被添加到-stable队列中，供其他开发者及相关子系统维护者审查。
审查周期
------------

- 当-stable维护者决定进行审查周期时，补丁将被发送给审查委员会，并发送给受影响区域的补丁维护者（除非提交者本身就是该区域的维护者），同时抄送给linux-kernel邮件列表。
- 审查委员会有48小时的时间来ACK或NAK这个补丁。
- 如果委员会成员拒绝了补丁，或者 linux-kernel 成员对补丁提出异议，指出了维护者和成员未曾意识到的问题，该补丁将从队列中移除。
- 已确认（ACKed）的补丁将作为候选版本（-rc）的一部分再次发布，供开发者和测试人员进行测试。
- 通常只发布一个 -rc 版本，但如果存在未解决的问题，某些补丁可能需要修改或删除，或者额外的补丁可能会加入队列。随后会发布并测试更多的 -rc 版本，直到没有发现任何问题为止。
- 对于 -rc 版本的反馈可以通过邮件列表发送带有“Tested-by:”标签的邮件，并附上想要提供的测试信息。这些“Tested-by:”标签将会被收集并添加到发布提交中。
- 在审查周期结束时，包含所有已排队和测试过的补丁的新 -stable 版本将被发布。
- 安全补丁将直接由安全内核团队接受进入 -stable 分支，而不需经过正常的审查流程。如需了解此过程的更多详细信息，请联系内核安全团队。
- 分支
-----

- 完成版本和在开发中的版本的补丁队列可以在以下位置找到：

    https://git.kernel.org/pub/scm/linux/kernel/git/stable/stable-queue.git

- 所有稳定内核版本的最终和标记发布的分支可以在以下位置找到：

    https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git

- 所有稳定内核版本的候选版本可以在此处找到：

    https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux-stable-rc.git/

  .. warning::
     -stable-rc 分支是稳定队列树的一个时间点快照，并且会频繁变化，因此会被经常重置基础。它仅应用于测试目的（例如，被持续集成系统使用）。
- 审查委员会
----------------

- 审查委员会由志愿承担此任务的内核开发者组成，也包括一些未主动申请但被纳入其中的成员。
