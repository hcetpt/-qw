====
CVEs
====

常见漏洞和暴露（CVE®）编号最初是为了以一种明确无误的方式识别、定义和编目公开披露的安全漏洞而开发的。随着时间的推移，这些编号在内核项目中的实用性逐渐下降，并且CVE编号经常被不恰当地分配给不适当的原因。正因为如此，内核开发社区倾向于避免使用它们。然而，持续要求分配CVE和其他形式安全标识符的压力以及内核社区之外个人和公司的滥用行为表明，内核社区应该对这些分配有控制权。
Linux内核开发者团队确实有能力为潜在的Linux内核安全问题分配CVE编号。这种分配独立于：doc:`正常的Linux内核安全漏洞报告流程<../process/security-bugs>`。
所有分配给Linux内核的CVE编号列表可以在linux-cve邮件列表存档中找到，详见 https://lore.kernel.org/linux-cve-announce/ 。要接收已分配的CVE通知，请`订阅 <https://subspace.kernel.org/subscribing.html>`_ 该邮件列表。

流程
====

作为正常稳定版本发布过程的一部分，负责CVE编号分配的开发者会识别出可能涉及安全问题的内核变更，并自动为它们分配CVE编号。这些分配会定期在linux-cve-announce邮件列表上公布。
请注意，由于Linux内核在系统中的层次，几乎任何漏洞都可能被利用来破坏内核的安全性，但在修复时往往无法明显看出其可利用性。因此，CVE分配团队非常谨慎，为他们识别出的所有bug修复分配CVE编号。这解释了为什么Linux内核团队发布的CVE数量看似很大。
如果CVE分配团队遗漏了某个用户认为应该分配CVE的特定修复，请通过<cve@kernel.org>发送电子邮件，团队将与您合作处理。请注意，不应将任何潜在安全问题发送到此别名，它仅用于已发布内核树中修复的CVE分配。如果您发现了一个未修复的安全问题，请遵循：doc:`正常的Linux内核安全漏洞报告流程<../process/security-bugs>`。
对于Linux内核中未修复的安全问题，不会自动分配CVE；只有在修复可用并应用于稳定的内核树之后才会自动分配，并通过原始修复的git提交ID进行跟踪。如果希望在问题解决之前分配CVE，请联系内核CVE分配团队<cve@kernel.org>，从他们的预留标识符批次中获取一个标识符。
对于当前未被Stable/LTS内核团队积极支持的内核版本中发现的任何问题，不会分配CVE。目前支持的内核分支列表可在 https://kernel.org/releases.html 找到。

已分配CVE的争议
================

对特定内核变更所分配的CVE提出争议或修改的权利仅归属于受影响子系统的维护者。这一原则确保了漏洞报告的高度准确性和问责制。只有那些具有深厚专业知识并对子系统有深入了解的人才能有效地评估报告漏洞的有效性和范围，并确定其适当的CVE指定。任何试图在指定权限之外修改或争议CVE的行为都可能导致混乱、报告不准确，最终导致系统受损。

无效的CVE
==========

如果在仅由某个Linux发行版支持的Linux内核中发现了一个安全问题，这是由于该发行版所做的更改，或者由于发行版支持的内核版本不再是kernel.org支持的版本之一，那么Linux内核CVE团队不能为其分配CVE，必须向该Linux发行版请求。
任何非内核CVE分配团队针对活跃支持的内核版本分配的CVE不应被视为有效CVE。请通知内核CVE分配团队<cve@kernel.org>，以便他们可以通过CNA补救程序使其失效。
特定CVE的适用性
==============================

由于Linux内核可以以多种不同的方式使用，并且外部用户可以通过多种不同的方式访问它，或者根本无法访问，因此任何特定CVE的适用性由Linux用户自行确定，而不是由CVE分配团队来决定。请不要联系我们试图确定任何特定CVE的适用性。

此外，由于源代码树非常庞大，而任何一个系统只使用源代码树的一小部分，因此所有Linux用户都应意识到大量已分配的CVE对其系统并不相关。

简而言之，我们不了解您的使用场景，也不知道您使用了内核的哪些部分，因此我们无法确定某个特定CVE是否对您的系统相关。

一如既往，最好是采用所有发布的内核更改，因为这些更改是由许多社区成员作为一个统一的整体进行测试的，而不是单独挑选个别更改。请注意，对于许多错误，解决问题的方法并不是通过单一的更改实现的，而是通过多个修复的累积效果实现的。理想情况下，所有问题的所有修复都应该分配CVE，但有时我们可能会忽略某些修复，因此请假设一些没有分配CVE的更改可能也是相关的。
