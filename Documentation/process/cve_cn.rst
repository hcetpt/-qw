== Common Vulnerabilities and Exposures (CVEs) ==

Common Vulnerabilities and Exposures (CVE®) 编号被开发为一种明确的方式，用于识别、定义和编目公开披露的安全漏洞。随着时间的推移，这些编号对于内核项目而言用处逐渐减少，并且经常被不适当地分配给不恰当的问题。正因为如此，内核开发社区倾向于避免使用它们。然而，持续要求分配 CVE 及其他形式安全标识符的压力以及内核社区之外个人和公司的滥用行为表明，内核社区应该对这些分配有控制权。
Linux 内核开发者团队确实有能力为潜在的 Linux 内核安全问题分配 CVE 编号。这种分配独立于 [正常的 Linux 内核安全漏洞报告流程](../process/security-bugs)。
所有为 Linux 内核分配的 CVE 编号列表可以在 [linux-cve 邮件列表](https://lore.kernel.org/linux-cve-announce/) 的存档中找到。为了获得已分配的 CVE 编号的通知，请[订阅该邮件列表](https://subspace.kernel.org/subscribing.html)。

== 流程 ==

作为常规稳定版本发布过程的一部分，负责 CVE 编号分配的开发者会识别出可能涉及安全问题的内核变更，并自动为其分配 CVE 编号。这些分配会在 [linux-cve-announce 邮件列表](https://lore.kernel.org/linux-cve-announce/) 中定期公布。
需要注意的是，由于 Linux 内核在系统中的层次，几乎任何缺陷都可能被利用来危害内核的安全性，但在修复时，这种可能性往往并不明显。因此，CVE 分配团队非常谨慎，为他们识别到的所有缺陷修复分配 CVE 编号。这解释了为什么 Linux 内核团队会发布大量的 CVE 编号。
如果 CVE 分配团队遗漏了一个用户认为应该分配 CVE 的特定修复，请通过 cve@kernel.org 发送邮件给他们，团队将会与您合作处理。请注意，此别名仅用于为已发布的内核树中的修复分配 CVE，不应发送任何潜在的安全问题。如果您发现未修复的安全问题，请遵循 [正常的 Linux 内核安全漏洞报告流程](../process/security-bugs)。
对于 Linux 内核中未修复的安全问题，不会自动分配 CVE 编号；只有在修复可用并应用于稳定的内核树之后才会自动分配，并且将根据原始修复的 Git 提交 ID 进行追踪。如果有人希望在问题得到解决之前就分配一个 CVE，请联系内核 CVE 分配团队（cve@kernel.org），以便从他们的预留标识符批次中获取标识符。
对于不再由稳定/长期支持 (LTS) 内核团队积极支持的内核版本中发现的任何问题，都不会分配 CVE 编号。当前支持的内核分支列表可在 https://kernel.org/releases.html 找到。

== 已分配 CVE 的争议 ==

对于特定内核变更所分配的 CVE 的争议或修改权限仅属于受该问题影响的相关子系统的维护者。这一原则确保了漏洞报告的高度准确性和责任性。只有具备深厚专业知识和对该子系统深入了解的个人才能有效地评估报告的漏洞的有效性和范围，并确定其适当的 CVE 标识。任何试图在指定权限之外修改或争议 CVE 的尝试都可能导致混乱、不准确的报告，并最终导致系统受损。

== 无效的 CVE ==

如果在仅由某个 Linux 发行版支持的 Linux 内核中发现了安全问题（因为该发行版进行了更改或支持的内核版本不再属于 kernel.org 支持的版本），那么 Linux 内核 CVE 团队无法为此分配 CVE 编号，必须向该 Linux 发行版请求。
对于任何活跃支持的内核版本，除内核 CVE 分配团队之外的任何组织分配的针对 Linux 内核的 CVE 编号不应被视为有效。请通知内核 CVE 分配团队（cve@kernel.org），以便他们可以通过 CNA 纠正程序使此类条目失效。
特定CVE的适用性
=================

由于Linux内核可以以多种不同的方式使用，并且外部用户可以通过许多不同的方式访问它，或者根本无法访问，因此任何特定CVE的适用性取决于Linux用户自行判断，而不是由CVE分配团队来决定。请不要联系我们试图确定任何特定CVE的适用性。

此外，由于源代码树非常庞大，而任何一个系统只使用其中的一小部分，所有Linux用户都应该意识到，大量已分配的CVE可能与他们的系统无关。

简而言之，我们不了解您的具体应用场景，也不知道您使用了内核的哪些部分，因此我们无法判断某个特定CVE是否对您的系统相关。

一如既往，最好是采纳所有发布的内核更新，因为这些更新是由社区成员作为一个整体进行测试的，而不是作为单独挑选的个别更新。同时需要注意的是，对于许多问题，解决办法往往不是通过单一的更改实现的，而是通过多个修复累加起来共同解决问题。理想情况下，所有的修复都会被分配一个CVE编号，但有时我们可能会忽略一些修复，因此可以假设一些没有分配CVE编号的更改可能也与您的情况相关。
