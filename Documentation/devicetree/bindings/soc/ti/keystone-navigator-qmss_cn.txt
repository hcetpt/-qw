* 德州仪器 Keystone Navigator 队列管理子系统 (QMSS) 驱动程序

在 Keystone 系统级芯片 (SoC) 上的 QMSS（队列管理器子系统）是构成 Keystone 多核 Navigator 的主要硬件子系统之一。QMSS 包括队列管理器、打包数据结构处理器 (PDSP)、链接 RAM、描述符池和基础设施包直接内存访问 (DMA)。

队列管理器是一个硬件模块，负责加速包队列的管理。通过向特定内存映射位置写入或读取描述符地址来对数据包进行入队/出队操作。PDSP 执行与 QMSS 相关的功能，如累积、服务质量 (QoS) 或事件管理。链接 RAM 寄存器用于链接存储在描述符 RAM 中的描述符。描述符 RAM 可配置为内部或外部内存。

QMSS 驱动程序负责管理 PDSP 设置、链接 RAM 区域、队列池管理（分配、推送、弹出和通知）以及描述符池管理。

必需属性：
- 兼容性 : 必须为 "ti,keystone-navigator-qmss"
: 对于 K2G SoC 上的 QMSS，必须为 "ti,66ak2g-navss-qm"
- 时钟 : 指向该设备参考时钟的 phandle
- 队列范围 : <起始编号> 设备的队列总数范围
- linkram0 : <地址大小> 用于内部链接 RAM，其中大小为总链接 RAM 条目数
- linkram1 : <地址大小> 用于外部链接 RAM，其中大小为总外部链接 RAM 条目数。如果地址被指定为 "0"，驱动程序将分配内存
- `qmgrs`         : 描述 SoC 上各个队列管理器的子节点。在 Keystone 1 设备上应该只有一个这样的节点，在 Keystone 2 设备上可以有多个节点。
- `managed-queues` : 每个队列管理器实例所管理的实际队列，指定格式为 `<"基础队列编号" "队列数量">`。
- `reg`         : 设备寄存器集的地址和大小。寄存器区域应按以下顺序指定：
    - 队列预览（Peek）区域
    - 队列状态 RAM
    - 队列配置区域
    - 描述符内存设置区域
    - 用于队列推送（Push）的队列管理/队列代理区域
    - 用于队列弹出（Pop）的队列管理/队列代理区域
对于K2G系统级芯片（SoC）上的QMSS，按照以下顺序使用QM寄存器索引：
- 队列预览区域
- 队列配置区域
- 队列管理/队列代理区域，用于队列的推送(Push)/弹出(Pop)
- 队列池：子节点将队列范围分类到不同的池中
队列范围被分组为三种类型的池：
    - `qpend`：可中断队列的池
    - `通用`：通用队列的池，主要用于空闲描述符队列或发送DMA队列
    - `累加器`：PDSP累加器通道上的队列池
每个范围可以具有以下属性：
  -- `qrange`：每个队列范围使用的队列数量，指定为`<基础队列编号> <队列数量>`
  -- `interrupts`：可选属性，用于指定可中断队列的中断映射。驱动程序还会根据CPU掩码设置中断亲和性提示。
  -- `qalloc-by-id`：可选属性，用于指定此范围内的队列只能通过队列ID分配
  -- `accumulator`：累加器通道规范。QMSS中的任何一个PDSP都可以加载累加器固件。该固件的任务是轮询选定数量的队列以查找已推送到队列中的描述符。从队列中弹出描述符，并将其放置在主机提供的缓冲区中。当列表满或经过编程的时间段后，累加器会触发一个中断，让主机读取缓冲区中的描述符信息。此固件有16、32和48通道版本。这些通道中的每一个都可以配置来监控连续的32个队列。累加器通道属性如下指定：
      `pdsp-id, channel, entries, pacing mode, latency`
      `pdsp-id`：运行累加器固件的QMSS PDSP，其中配置了通道
      `channel`：累加器通道号
      `entries`：累加器描述符列表的大小
      `pacing mode`：中断节拍模式
          0：无，即仅在列表满时中断
          1：自上次中断以来的时间延迟
          2：自第一个新数据包以来的时间延迟
          3：自最后一个新数据包以来的时间延迟
      `latency`：以微秒为单位指定的中断延迟时间
  -- `multi-queue`：可选属性，用于指定通道需要监控最多32个队列，从基础队列编号开始
### 描述符区域 : 子节点描述了用于Keystone导航包DMA描述符的内存区域。描述符所用的内存将由驱动程序分配。

- **id** : 在QMSS中的区域编号。
- **region-spec** : 指定了区域内描述符的数量，格式为 `<"描述符数量" "描述符大小">`。
- **link-index** : 起始索引，即该区域中第一个描述符的索引。

#### 可选属性：
- **dma-coherent** : 如果DMA操作是连贯的，则此属性存在。
- **pdsps** : 子节点描述PDSP配置。
  - **firmware** : 要加载到PDSP上的固件。
  - **id** : 运行固件的QMSS PDSP。
  - **reg** : PDSP寄存器集的地址和大小。

### 寄存器区域应按以下顺序指定：
- **PDSP内部RAM区域**
这段配置描述了一个基于TI Keystone架构的QMSS (Queue Management Subsystem) 的设备树片段。下面是中文翻译：

- PDSP 控制/状态区域寄存器
- QMSS 中断分配器寄存器
- PDSP 命令接口区域

示例：

qmss: qmss@2a40000 { 
    兼容性 = "ti,keystone-qmss"; 
    dma-一致性; 
    地址单元数量 = <1>; 
    大小单元数量 = <1>; 
    时钟 = <&chipclk13>; 
    范围; 
    队列范围 = <0 0x4000>; 
    linkram0 = <0x100000 0x8000>; 
    linkram1 = <0x0 0x10000>; 

    qmgrs { 
        地址单元数量 = <1>; 
        大小单元数量 = <1>; 
        范围; 
        qmgr0 { 
            管理队列 = <0 0x2000>; 
            寄存器 = <0x2a40000 0x20000>, 
                        <0x2a06000 0x400>, 
                        <0x2a02000 0x1000>, 
                        <0x2a03000 0x1000>, 
                        <0x23a80000 0x20000>, 
                        <0x2a80000 0x20000>; 
        }; 

        qmgr1 { 
            管理队列 = <0x2000 0x2000>; 
            寄存器 = <0x2a60000 0x20000>, 
                        <0x2a06400 0x400>, 
                        <0x2a04000 0x1000>, 
                        <0x2a05000 0x1000>, 
                        <0x23aa0000 0x20000>, 
                        <0x2aa0000 0x20000>; 
        }; 
    }; 
    队列池 { 
        qpend { 
            qpend-0 { 
                队列范围 = <658 8>; 
                中断 = <0 40 0xf04 0 41 0xf04 0 42 0xf04 
                       0 43 0xf04 0 44 0xf04 0 45 0xf04 
                       0 46 0xf04 0 47 0xf04>; 
            }; 
            qpend-1 { 
                队列范围 = <8704 16>; 
                中断 = <0 48 0xf04 0 49 0xf04 0 50 0xf04 
                       0 51 0xf04 0 52 0xf04 0 53 0xf04 
                       0 54 0xf04 0 55 0xf04 0 56 0xf04 
                       0 57 0xf04 0 58 0xf04 0 59 0xf04 
                       0 60 0xf04 0 61 0xf04 0 62 0xf04 
                       0 63 0xf04>; 
                按ID分配队列; 
            }; 
            qpend-2 { 
                队列范围 = <8720 16>; 
                中断 = <0 64 0xf04 0 65 0xf04 0 66 0xf04 
                       0 67 0xf04 0 68 0xf04 0 69 0xf04 
                       0 70 0xf04 0 71 0xf04 0 72 0xf04 
                       0 73 0xf04 0 74 0xf04 0 75 0xf04 
                       0 76 0xf04 0 77 0xf04 0 78 0xf04 
                       0 79 0xf04>; 
            }; 
        }; 
        通用目的 { 
            gp-0 { 
                队列范围 = <4000 64>; 
            }; 
            netcp-tx { 
                队列范围 = <640 9>; 
                按ID分配队列; 
            }; 
        }; 
        累加器 { 
            acc-0 { 
                队列范围 = <128 32>; 
                累加器 = <0 36 16 2 50>; 
                中断 = <0 215 0xf01>; 
                多队列; 
                按ID分配队列; 
            }; 
            acc-1 { 
                队列范围 = <160 32>; 
                累加器 = <0 37 16 2 50>; 
                中断 = <0 216 0xf01>; 
                多队列; 
            }; 
            acc-2 { 
                队列范围 = <192 32>; 
                累加器 = <0 38 16 2 50>; 
                中断 = <0 217 0xf01>; 
                多队列; 
            }; 
            acc-3 { 
                队列范围 = <224 32>; 
                累加器 = <0 39 16 2 50>; 
                中断 = <0 218 0xf01>; 
                多队列; 
            }; 
        }; 
    }; 
    描述符区域 { 
        地址单元数量 = <1>; 
        大小单元数量 = <1>; 
        范围; 
        区域-12 { 
            ID = <12>; 
            区域规格 = <8192 128>; /* 描述符数量 描述符大小 */ 
            link-index = <0x4000>; 
        }; 
    }; 
    pdsp { 
        地址单元数量 = <1>; 
        大小单元数量 = <1>; 
        范围; 
        pdsp0@2a10000 { 
            寄存器 = <0x2a10000 0x1000>, 
                        <0x2a0f000 0x100>, 
                        <0x2a0c000 0x3c8>, 
                        <0x2a20000 0x4000>; 
            ID = <0>; 
        }; 
    }; 
} /* qmss */

注意，这里使用了设备树语法来描述硬件资源，包括内存映射寄存器、中断和队列等配置。
