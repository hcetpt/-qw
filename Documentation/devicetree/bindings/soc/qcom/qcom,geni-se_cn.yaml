# SPDX-许可证标识符: (GPL-2.0 或 BSD-2-Clause)
%YAML 1.2
---
$id: http://devicetree.org/schemas/soc/qcom/qcom,geni-se.yaml#
$schema: http://devicetree.org/meta-schemas/core.yaml#

标题: 基于GENI的Qualcomm通用外设（QUP）封装控制器

维护者:
  - Bjorn Andersson <bjorn.andersson@linaro.org>

描述: |
  通用接口（GENI）为基础的Qualcomm通用外设（QUP）封装是一种可编程模块，支持广泛的串行接口如UART、SPI、I2C、I3C等。单个QUP模块最多可以提供8个串行接口，通过其内部的串行引擎实现。基于GENI串行引擎的QUP封装控制器被建模为一个节点，该节点可以有零个或多个子节点，每个子节点代表一个串行引擎。
属性:
  compatible:
    枚举:
      - qcom,geni-se-qup
      - qcom,geni-se-i2c-master-hub

  reg:
    描述: QUP封装公共寄存器地址和长度
maxItems: 1

  clock-names:
    minItems: 1
    maxItems: 2

  clocks:
    minItems: 1
    maxItems: 2

  "#address-cells":
    常量: 2

  "#size-cells":
    常量: 2

  ranges: true

  interconnects:
    maxItems: 1

  interconnect-names:
    常量: qup-core

  iommus:
    maxItems: 1

  dma-coherent: true

必需:
  - compatible
  - reg
  - clock-names
  - clocks
  - "#address-cells"
  - "#size-cells"
  - ranges

模式属性:
  "spi@[0-9a-f]+$":
    类型: 对象
    描述: 基于GENI串行引擎的SPI控制器。SPI在主模式下支持高达50MHz的速度，支持多达四个芯片选择，数据路径从4位到32位可编程，并支持多种协议变体
$ref: /schemas/spi/qcom,spi-geni-qcom.yaml#

  "i2c@[0-9a-f]+$":
    类型: 对象
    描述: 基于GENI串行引擎的I2C控制器
$ref: /schemas/i2c/qcom,i2c-geni-qcom.yaml#

  "serial@[0-9a-f]+$":
    类型: 对象
    描述: 基于GENI串行引擎的UART控制器
$ref: /schemas/serial/qcom,serial-geni-qcom.yaml#

allOf:
  - 如果:
      属性:
        compatible:
          包含:
            常量: qcom,geni-se-i2c-master-hub
    则:
      属性:
        clock-names:
          项:
            - 常量: s-ahb

        clocks:
          项:
            - 描述: 从AHB时钟

        iommus: false

      模式属性:
        "spi@[0-9a-f]+$": false
        "serial@[0-9a-f]+$": false
    否则:
      属性:
        clock-names:
          项:
            - 常量: m-ahb
            - 常量: s-ahb

        clocks:
          项:
            - 描述: 主AHB时钟
            - 描述: 从AHB时钟

additionalProperties: false

示例:
  - |
    #include <dt-bindings/clock/qcom,gcc-sdm845.h>
    #include <dt-bindings/interrupt-controller/arm-gic.h>

    soc {
        #address-cells = <2>;
        #size-cells = <2>;

        geniqup@8c0000 {
            compatible = "qcom,geni-se-qup";
            reg = <0 0x008c0000 0 0x6000>;
            clock-names = "m-ahb", "s-ahb";
            clocks = <&gcc GCC_QUPV3_WRAP_0_M_AHB_CLK>,
                <&gcc GCC_QUPV3_WRAP_0_S_AHB_CLK>;
            #address-cells = <2>;
            #size-cells = <2>;
            ranges;

            i2c0: i2c@a94000 {
                compatible = "qcom,geni-i2c";
                reg = <0 0xa94000 0 0x4000>;
                interrupts = <GIC_SPI 358 IRQ_TYPE_LEVEL_HIGH>;
                clock-names = "se";
                clocks = <&gcc GCC_QUPV3_WRAP0_S5_CLK>;
                pinctrl-names = "default", "sleep";
                pinctrl-0 = <&qup_1_i2c_5_active>;
                pinctrl-1 = <&qup_1_i2c_5_sleep>;
                #address-cells = <1>;
                #size-cells = <0>;
            };

            uart0: serial@a88000 {
                compatible = "qcom,geni-uart";
                reg = <0 0xa88000 0 0x7000>;
                interrupts = <GIC_SPI 355 IRQ_TYPE_LEVEL_HIGH>;
                clock-names = "se";
                clocks = <&gcc GCC_QUPV3_WRAP0_S0_CLK>;
                pinctrl-names = "default", "sleep";
                pinctrl-0 = <&qup_1_uart_3_active>;
                pinctrl-1 = <&qup_1_uart_3_sleep>;
            };
        };
    };
