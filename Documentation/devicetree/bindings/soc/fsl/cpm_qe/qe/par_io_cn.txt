* 并行 I/O 端口

此节点为具有 QE 支持的 CPU 配置并行 I/O 端口。
该节点应位于树中的 "soc" 节点内。对于每个使用并行 I/O 端口的设备，都应该创建一个子节点。
有关更多信息，请参阅下面的引脚配置节点定义。
所需属性：
- device_type ： 应为 "par_io"
- reg ： 寄存器集的偏移及其长度
- num-ports ： 并行 I/O 端口的数量

示例：
```
par_io@1400 {
	reg = <1400 100>;
	#address-cells = <1>;
	#size-cells = <0>;
	device_type = "par_io";
	num-ports = <7>;
	ucc_pin@1 {
		.....
};
```

请注意，“par_io”节点已过时，不应在新的设备树中使用。相反，每个并行 I/O 银行应通过其自己的 gpio-controller 节点来表示：

所需属性：
- #gpio-cells ： 应为 "2"
- compatible ： 应为 "fsl,<chip>-qe-pario-bank", "fsl,mpc8323-qe-pario-bank"
- reg ： 寄存器集的偏移及其长度
- gpio-controller ： 识别 gpio 控制器的节点
示例：

`qe_pio_a`：gpio-controller@1400 {
	#gpio-cells = <2>;
	compatible = "fsl,mpc8360-qe-pario-bank",
	"fsl,mpc8323-qe-pario-bank";
	reg = <0x1400 0x18>;
	gpio-controller;
};

`qe_pio_e`：gpio-controller@1460 {
	#gpio-cells = <2>;
	compatible = "fsl,mpc8360-qe-pario-bank",
			     "fsl,mpc8323-qe-pario-bank";
	reg = <0x1460 0x18>;
	gpio-controller;
};

这里描述了两个 GPIO 控制器设备，分别是 `qe_pio_a` 和 `qe_pio_e`。每个控制器都定义了以下属性：
- `#gpio-cells = <2>`：表示 GPIO 引脚配置单元的数量为2。
- `compatible`：指定了与该控制器兼容的设备类型。
- `reg`：定义了设备的寄存器地址范围。
- `gpio-controller`：标记此设备为 GPIO 控制器。
