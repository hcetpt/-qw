# SPDX-文件许可人: GPL-2.0-only 或 BSD-2-Clause
%YAML 1.2
---
$id: http://devicetree.org/schemas/mfd/ti,tps6594.yaml#
$schema: http://devicetree.org/meta-schemas/core.yaml#

title: TI TPS6594 电源管理集成电路

maintainers:
  - Julien Panis <jpanis@baylibre.com>

description:
  TPS6594 是一种电源管理集成电路，它提供了稳压器以及其他特性，
  如 GPIO、RTC、看门狗、ESM（错误信号监视器）以及管理设备状态的
  PFSM（预配置有限状态机）。TPS6594 是一个超级集设备，而 TPS6593 和
  LP8764 是它的衍生产品。

properties:
  compatible:
    enum:
      - ti,lp8764-q1
      - ti,tps6593-q1
      - ti,tps6594-q1
      - ti,tps65224-q1

  reg:
    description: I2C 从设备地址或 SPI 芯片选择编号
maxItems: 1

  ti,primary-pmic:
    type: boolean
    description: |
      标识 SPMI 总线上的主电源管理 IC
为了使多个 PMIC 设备同步电源状态变化，PMIC 设备中实现了一种多 PMIC 同步方案。
通过 SPMI 总线来完成这一目标：主 PMIC 是 SPMI 总线上的控制器设备，而次级 PMIC
是 SPMI 总线上的目标设备。
system-power-controller: true

  gpio-controller: true

  '#gpio-cells':
    const: 2
    description: |
      第一个单元是引脚编号，第二个单元用于指定标志
更多信息请参阅 ../gpio/gpio.txt
interrupts:
    maxItems: 1

  regulators:
    type: object
    description: 由该控制器提供的稳压器列表
patternProperties:
      "^buck([1-5]|12|34|123|1234)$":
        type: object
        $ref: /schemas/regulator/regulator.yaml#

        unevaluatedProperties: false

      "^ldo[1-4]$":
        type: object
        $ref: /schemas/regulator/regulator.yaml#

        unevaluatedProperties: false

    allOf:
      - if:
          required:
            - buck12
        then:
          properties:
            buck123: false
            buck1234: false
      - if:
          required:
            - buck123
        then:
          properties:
            buck34: false
      - if:
          required:
            - buck1234
        then:
          properties:
            buck34: false

    additionalProperties: false

patternProperties:
  "^buck([1-5]|12|34|123|1234)-supply$":
    description: 每个 buck 的输入供电句柄
"^ldo[1-4]-supply$":
    description: 每个 LDO 的输入供电句柄
这段代码是 Device Tree (设备树) 的描述，用于定义硬件组件及其配置。下面是对这段代码的中文翻译：

```yaml
# 必需字段:
- 兼容性
- 寄存器地址
- 中断

# 不允许额外属性

# 示例
- |
  #include <dt-bindings/interrupt-controller/arm-gic.h>
  i2c {  # I2C 总线
      #address-cells = <1>;  # 地址单元格数量为1
      #size-cells = <0>;  # 大小单元格数量为0

      tps6593: pmic@48 {  # PMIC 设备，I2C 地址为 0x48
          compatible = "ti,tps6593-q1";  # 兼容性声明，与 TI TPS6593-Q1 芯片兼容
          reg = <0x48>;  # 设备的寄存器地址
          ti,primary-pmic;  # TI 主电源管理 IC
          system-power-controller;  # 系统电源控制器

          gpio-controller;  # GPIO 控制器
          #gpio-cells = <2>;  # GPIO 单元格数量为2

          pinctrl-names = "default";  # 引脚控制名称
          pinctrl-0 = <&pmic_irq_pins_default>;  # 默认引脚控制配置
          interrupt-parent = <&mcu_gpio0>;  # 中断父设备
          interrupts = <0 IRQ_TYPE_EDGE_FALLING>;  # 中断请求，IRQ 类型下降沿触发

          buck123-supply = <&vcc_3v3_sys>;  # Buck123 供电来自 vcc_3v3_sys
          buck4-supply = <&vcc_3v3_sys>;  # Buck4 供电来自 vcc_3v3_sys
          buck5-supply = <&vcc_3v3_sys>;  # Buck5 供电来自 vcc_3v3_sys
          ldo1-supply = <&vcc_3v3_sys>;  # LDO1 供电来自 vcc_3v3_sys
          ldo2-supply = <&vcc_3v3_sys>;  # LDO2 供电来自 vcc_3v3_sys
          ldo3-supply = <&buck5>;  # LDO3 供电来自 Buck5
          ldo4-supply = <&vcc_3v3_sys>;  # LDO4 供电来自 vcc_3v3_sys

          regulators {  # 电压调节器
              buck123: buck123 {  # Buck123
                  regulator-name = "vcc_core";  # 名称
                  regulator-min-microvolt = <750000>;  # 最小输出电压（微伏）
                  regulator-max-microvolt = <850000>;  # 最大输出电压（微伏）
                  regulator-boot-on;  # 启动时打开
                  regulator-always-on;  # 始终保持开启状态
              };

              buck4: buck4 {  # Buck4
                  regulator-name = "vcc_1v1";  # 名称
                  regulator-min-microvolt = <1100000>;  # 最小输出电压（微伏）
                  regulator-max-microvolt = <1100000>;  # 最大输出电压（微伏）
                  regulator-boot-on;  # 启动时打开
                  regulator-always-on;  # 始终保持开启状态
              };

              buck5: buck5 {  # Buck5
                  regulator-name = "vcc_1v8_sys";  # 名称
                  regulator-min-microvolt = <1800000>;  # 最小输出电压（微伏）
                  regulator-max-microvolt = <1800000>;  # 最大输出电压（微伏）
                  regulator-boot-on;  # 启动时打开
                  regulator-always-on;  # 始终保持开启状态
              };

              ldo1: ldo1 {  # LDO1
                  regulator-name = "vddshv5_sdio";  # 名称
                  regulator-min-microvolt = <3300000>;  # 最小输出电压（微伏）
                  regulator-max-microvolt = <3300000>;  # 最大输出电压（微伏）
                  regulator-boot-on;  # 启动时打开
                  regulator-always-on;  # 始终保持开启状态
              };

              ldo2: ldo2 {  # LDO2
                  regulator-name = "vpp_1v8";  # 名称
                  regulator-min-microvolt = <1800000>;  # 最小输出电压（微伏）
                  regulator-max-microvolt = <1800000>;  # 最大输出电压（微伏）
                  regulator-boot-on;  # 启动时打开
                  regulator-always-on;  # 始终保持开启状态
              };

              ldo3: ldo3 {  # LDO3
                  regulator-name = "vcc_0v85";  # 名称
                  regulator-min-microvolt = <850000>;  # 最小输出电压（微伏）
                  regulator-max-microvolt = <850000>;  # 最大输出电压（微伏）
                  regulator-boot-on;  # 启动时打开
                  regulator-always-on;  # 始终保持开启状态
              };

              ldo4: ldo4 {  # LDO4
                  regulator-name = "vdda_1v8";  # 名称
                  regulator-min-microvolt = <1800000>;  # 最小输出电压（微伏）
                  regulator-max-microvolt = <1800000>;  # 最大输出电压（微伏）
                  regulator-boot-on;  # 启动时打开
                  regulator-always-on;  # 始终保持开启状态
              };
          };
      };
  };
```

请注意，这段翻译尽量保持了原文的结构和风格，以便更好地理解其内容。
