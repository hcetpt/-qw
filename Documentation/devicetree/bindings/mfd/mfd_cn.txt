### 多功能设备 (MFD)

这些设备集成了异构硬件模块的核心，包含了不止一种非唯一但具有不同功能的硬件。

一个典型的MFD可以是：

- 一个混合信号ASIC（专用集成电路），通过外部总线连接，有时是一个PMIC（电源管理集成电路），采用较低的技术节点（粗糙硅）制造，用于处理诸如音频放大器、LED驱动器、电平转换器、PHY（如USB或以太网等物理接口）、稳压器等模拟驱动器。
- 一系列内存寄存器，包含“各种系统寄存器”，也称为系统控制器“syscon”或任何其他包含混合不相关硬件设备的内存范围。

#### 可选属性：

- `compatible`：`"simple-mfd"` — 这表示操作系统应该将MFD设备的所有子节点视为独立的设备，因此不需要父设备提供资源。类似于`"simple-bus"`指示如何将子节点视为简单内存映射总线的子节点。对于更复杂的设备，如果核心驱动需要探测寄存器来确定哪些子设备存在等情况下，不应该使用这种方式。在后一种情况下，子设备将由操作系统决定。
- `ranges`：描述与父设备之间的地址映射关系。应设置子设备的基本地址为0，父设备地址空间内的物理地址，以及地址映射的长度。
- `#address-cells`：指定用于表示物理基地址的单元格数量。如果使用`ranges`，则必须存在。
- `#size-cells`：指定用于表示地址大小的单元格数量。如果使用`ranges`，则必须存在。

#### 示例：

```plaintext
foo@1000 { 
    compatible = "syscon", "simple-mfd";
    reg = <0x01000 0x1000>;

    led@8.0 {
        compatible = "register-bit-led";
        offset = <0x08>;
        mask = <0x01>;
        label = "myled";
        default-state = "on";
    };
};
```
在这个示例中，`foo@1000` 是一个MFD设备，它通过`reg`指定了其地址范围。其中`led@8.0`是该MFD下的一个子设备，是一个寄存器位LED，具有特定的偏移量和掩码，以及默认状态为“打开”的标签。
