# SPDX-License-Identifier: (GPL-2.0-only OR BSD-2-Clause)
# 版权所有 (c) 2021 Aspeed Technology Inc
%YAML 1.2
---
$id: http://devicetree.org/schemas/mfd/aspeed-lpc.yaml#
$schema: http://devicetree.org/meta-schemas/core.yaml#

标题: Aspeed 低引脚数 (LPC) 总线控制器

维护者:
  - Andrew Jeffery <andrew@aj.id.au>
  - Chia-Wei Wang <chiawei_wang@aspeedtech.com>

描述:
  LPC 总线是一种用于桥接主机 CPU 到多个低带宽外围设备的方式，在 PCI[0] 时代取代了 ISA 总线的使用。Aspeed LPC 控制器的主要用途是在总线上作为从属设备（通常在基板管理控制器 SoC 中），但在某些条件下，它也可以承担总线主控的角色。
LPC 控制器作为一个多功能设备来表示，以涵盖其混合功能，包括但不限于：

  * IPMI 块传输[2] 控制器

  * LPC 主机接口控制器管理向主机暴露的功能，例如 LPC 固件中心周期、LPC 至 AHB 映射配置、UART 管理和总线监听配置
* 一组 SuperIO[3] 暂存寄存器，允许实现例如主机与基板管理控制器之间交接的自定义硬件管理协议
此外，LPC 控制器的状态影响了管脚复用配置，因此控制器的主机部分作为 syscon 暴露，作为一种仲裁访问的方式。
属性:
  compatible:
    items:
      - enum:
          - aspeed,ast2400-lpc-v2
          - aspeed,ast2500-lpc-v2
          - aspeed,ast2600-lpc-v2
      - const: simple-mfd
      - const: syscon

  reg:
    maxItems: 1

  "#address-cells":
    const: 1

  "#size-cells":
    const: 1

  ranges: true

模式属性:
  "^lpc-ctrl@[0-9a-f]+$":
    类型: 对象
    additionalProperties: false

    描述: |
      LPC 主机接口控制器管理向主机暴露的功能，例如
      LPC 固件中心周期、LPC 至 AHB 映射配置、UART 管理和总线监听配置
属性:
      compatible:
        items:
          - enum:
              - aspeed,ast2400-lpc-ctrl
              - aspeed,ast2500-lpc-ctrl
              - aspeed,ast2600-lpc-ctrl

      reg:
        maxItems: 1

      clocks:
        maxItems: 1

      memory-region:
        maxItems: 1
        描述: LPC 至 AHB 映射区域的内存预留句柄

      flash:
        $ref: /schemas/types.yaml#/definitions/phandle
        描述: 包含要通过 LPC 至 AHB 映射暴露的闪存的 SPI 闪存控制器

    required:
      - compatible
      - clocks

  "^reset-controller@[0-9a-f]+$":
    类型: 对象
    additionalProperties: false

    描述:
      ASPEED SoC 中的 UART 可能会将其复位与 LPC 总线的复位状态绑定在一起。某些系统可能选择修改此配置

    属性:
      compatible:
        items:
          - enum:
              - aspeed,ast2400-lpc-reset
              - aspeed,ast2500-lpc-reset
              - aspeed,ast2600-lpc-reset

      reg:
        maxItems: 1

      '#reset-cells':
        const: 1

    required:
      - compatible
      - '#reset-cells'

  "^lpc-snoop@[0-9a-f]+$":
    类型: 对象
    additionalProperties: false

    描述:
      LPC 监听接口允许 BMC 监听并记录主机写入目标 LPC I/O 端口的数据字节
属性:
      compatible:
        items:
          - enum:
              - aspeed,ast2400-lpc-snoop
              - aspeed,ast2500-lpc-snoop
              - aspeed,ast2600-lpc-snoop

      reg:
        maxItems: 1

      interrupts:
        maxItems: 1

      snoop-ports:
        $ref: /schemas/types.yaml#/definitions/uint32-array
        描述: 要监听的 LPC I/O 端口

    required:
      - compatible
      - interrupts
      - snoop-ports

  "^uart-routing@[0-9a-f]+$":
    $ref: /schemas/soc/aspeed/uart-routing.yaml#
    描述: LPC 寄存器空间下的 UART 路由控制

必需:
  - compatible
  - reg
  - "#address-cells"
  - "#size-cells"
  - ranges

additionalProperties:
  类型: 对象

示例:
  - |
    #include <dt-bindings/interrupt-controller/arm-gic.h>
    #include <dt-bindings/clock/ast2600-clock.h>

    lpc: lpc@1e789000 {
        compatible = "aspeed,ast2600-lpc-v2", "simple-mfd", "syscon";
        reg = <0x1e789000 0x1000>;

        #address-cells = <1>;
        #size-cells = <1>;
        ranges = <0x0 0x1e789000 0x1000>;

        lpc_ctrl: lpc-ctrl@80 {
            compatible = "aspeed,ast2600-lpc-ctrl";
            reg = <0x80 0x80>;
            clocks = <&syscon ASPEED_CLK_GATE_LCLK>;
            memory-region = <&flash_memory>;
            flash = <&spi>;
        };

        lpc_reset: reset-controller@98 {
            compatible = "aspeed,ast2600-lpc-reset";
            reg = <0x98 0x4>;
            #reset-cells = <1>;
        };

        lpc_snoop: lpc-snoop@90 {
            compatible = "aspeed,ast2600-lpc-snoop";
            reg = <0x90 0x8>;
            interrupts = <GIC_SPI 144 IRQ_TYPE_LEVEL_HIGH>;
            snoop-ports = <0x80>;
        };
    };
