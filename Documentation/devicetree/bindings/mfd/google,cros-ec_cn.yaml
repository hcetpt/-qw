# SPDX-许可证标识符: (GPL-2.0-only 或 BSD-2-Clause)
%YAML 1.2
---
$id: http://devicetree.org/schemas/mfd/google,cros-ec.yaml#
$schema: http://devicetree.org/meta-schemas/core.yaml#

标题: ChromeOS 嵌入式控制器

维护者:
  - Benson Leung <bleung@chromium.org>
  - Guenter Roeck <groeck@chromium.org>

描述:
  Google 的 ChromeOS EC 是一个与应用处理器 (AP) 进行通信并实现多种功能（如键盘控制和电池充电）的微控制器。
EC 可以通过各种接口（I2C、SPI 等）连接，兼容字符串指定了正在使用的接口。
属性:
  compatible:
    oneOf:
      - 描述:
          对于通过 I2C 连接的 EC 实现
        const: google,cros-ec-i2c
      - 描述:
          对于通过 SPI 连接的 EC 实现
        const: google,cros-ec-spi
      - 描述:
          对于通过 SPI 连接的 FPMCU 实现
        items:
          - const: google,cros-ec-fp
          - const: google,cros-ec-spi
      - 描述:
          对于通过 RPMSG 连接的 EC 实现
        const: google,cros-ec-rpmsg
      - 描述:
          对于通过 UART 连接的 EC 实现
        const: google,cros-ec-uart

  controller-data: true

  google,cros-ec-spi-pre-delay:
    描述:
      此属性指定 CS 信号被激活与第一个时钟脉冲之间的时间延迟（单位：微秒）
    $ref: /schemas/types.yaml#/definitions/uint32
    默认值: 0

  google,cros-ec-spi-msg-delay:
    描述:
      此属性指定消息之间的延迟时间（单位：微秒）
    $ref: /schemas/types.yaml#/definitions/uint32
    默认值: 0

  google,has-vbc-nvram:
    描述:
      一些 EC 实现包含一小段非易失性内存空间，用于存储验证引导上下文数据。此布尔标志用于指定该非易失性内存是否存在。
Here's the translation into Chinese:

类型: 布尔值

mediatek,rpmsg-name:
描述:
  如果cros-ec是一个针对联发科ARM Cortex M4协处理器的rpmsg设备，则必须定义。包含rpmsg设备的名称。用于匹配子节点与SCP宣布的rpmsg设备。
$ref: /schemas/types.yaml#/definitions/string

spi-max-frequency: 真

reg:
最大项数: 1

interrupts:
最大项数: 1

reset-gpios:
最大项数: 1

boot0-gpios:
最大项数: 1
描述: 断言进入引导加载程序模式
vdd-supply: 真

wakeup-source:
描述: 按钮可以唤醒系统
'#address-cells':
常量: 1

'#size-cells':
常量: 0

'#gpio-cells':
常量: 2

gpio-controller: 真

typec:
$ref: /schemas/chrome/google,cros-ec-typec.yaml#

ec-pwm:
$ref: /schemas/pwm/google,cros-ec-pwm.yaml#
废弃: 真

pwm:
$ref: /schemas/pwm/google,cros-ec-pwm.yaml#

kbd-led-backlight:
$ref: /schemas/chrome/google,cros-kbd-led-backlight.yaml#

keyboard-controller:
$ref: /schemas/input/google,cros-ec-keyb.yaml#

proximity:
$ref: /schemas/iio/proximity/google,cros-ec-mkbp-proximity.yaml#

codecs:
类型: 对象
附加属性: 假

属性:
  '#address-cells':
    常量: 2

  '#size-cells':
    常量: 1

模式属性:
  "^ec-codec@[a-f0-9]+$":
    类型: 对象
    $ref: /schemas/sound/google,cros-ec-codec.yaml#

必需:
  - "#address-cells"
  - "#size-cells"

cbas:
类型: 对象

描述:
  此设备用于在Chrome OS平板电脑连接可拆卸底座时发送信号。此设备无法在运行时检测到。
属性:
  compatible:
    常量: google,cros-cbas

必需:
  - compatible

附加属性: 假

模式属性:
  "^i2c-tunnel[0-9]*$":
    类型: 对象
    $ref: /schemas/i2c/google,cros-ec-i2c-tunnel.yaml#

  "^regulator@[0-9]+$":
    类型: 对象
    $ref: /schemas/regulator/google,cros-ec-regulator.yaml#

  "^extcon[0-9]*$":
    类型: 对象
    $ref: /schemas/extcon/extcon-usbc-cros-ec.yaml#

必需:
  - compatible

allOf:
  - 如果:
      属性:
        compatible:
          不:
            包含:
              常量: google,cros-ec-spi
    那么:
      属性:
        controller-data: 假
        google,cros-ec-spi-pre-delay: 假
        google,cros-ec-spi-msg-delay: 假
        spi-max-frequency: 假
    否则:
      $ref: /schemas/spi/spi-peripheral-props.yaml

  - 如果:
      属性:
        compatible:
          不:
            包含:
              枚举:
                - google,cros-ec-rpmsg
                - google,cros-ec-uart
    那么:
      属性:
        mediatek,rpmsg-name: 假

  - 如果:
      属性:
        compatible:
          不:
            包含:
              枚举:
                - google,cros-ec-rpmsg
                - google,cros-ec-uart
    那么:
      必需:
        - reg
        - interrupts

  - 如果:
      属性:
        compatible:
          包含:
            常量: google,cros-ec-fp
    那么:
      属性:
        '#address-cells': 假
        '#size-cells': 假
        typec: 假
        ec-pwm: 假
        kbd-led-backlight: 假
        keyboard-controller: 假
        proximity: 假
        codecs: 假
        cbas: 假

      模式属性:
        "^i2c-tunnel[0-9]*$": 假
        "^regulator@[0-9]+$": 假
        "^extcon[0-9]*$": 假

      # 使用additionalProperties: false和列出真属性不起作用

      必需:
        - reset-gpios
        - boot0-gpios
        - vdd-supply
    否则:
      属性:
        reset-gpios: 假
        boot0-gpios: 假
        vdd-supply: 假

附加属性: 假

示例:
  # I2C 示例
  - |
    #include <dt-bindings/gpio/gpio.h>
    #include <dt-bindings/interrupt-controller/irq.h>

    i2c {
        #address-cells = <1>;
        #size-cells = <0>;

        cros-ec@1e {
            compatible = "google,cros-ec-i2c";
            reg = <0x1e>;
            interrupts = <6 0>;
            interrupt-parent = <&gpio0>;
        };
    };

  # SPI 示例
  - |
    #include <dt-bindings/gpio/gpio.h>
    #include <dt-bindings/interrupt-controller/irq.h>

    spi {
        #address-cells = <1>;
        #size-cells = <0>;

        cros-ec@0 {
            compatible = "google,cros-ec-spi";
            reg = <0x0>;
            google,cros-ec-spi-msg-delay = <30>;
            google,cros-ec-spi-pre-delay = <10>;
            interrupts = <99 0>;
            interrupt-parent = <&gpio7>;
            spi-max-frequency = <5000000>;
            #gpio-cells = <2>;
            gpio-controller;

            proximity {
                compatible = "google,cros-ec-mkbp-proximity";
            };

            cbas {
                compatible = "google,cros-cbas";
            };
        };
    };

  # RPMSG 示例
  - |
    scp0 {
        cros-ec {
            compatible = "google,cros-ec-rpmsg";
        };
    };

  # FPMCU 示例
  - |
    spi {
      #address-cells = <0x1>;
      #size-cells = <0x0>;

      ec@0 {
        compatible = "google,cros-ec-fp", "google,cros-ec-spi";
        reg = <0x0>;
        interrupt-parent = <&gpio_controller>;
        interrupts = <4 IRQ_TYPE_LEVEL_LOW>;
        spi-max-frequency = <3000000>;
        reset-gpios = <&gpio_controller 5 GPIO_ACTIVE_LOW>;
        boot0-gpios = <&gpio_controller 10 GPIO_ACTIVE_HIGH>;
        vdd-supply = <&pp3300_fp_mcu>;
      };
    };

  # UART 示例
  - |
    serial {
        cros-ec {
            compatible = "google,cros-ec-uart";
        };
    };
