下面是给定的 YAML 文档的中文翻译：

```yaml
# SPDX-文件许可标识: (GPL-2.0 或 BSD-2-Clause)
%YAML 1.2
---
$id: http://devicetree.org/schemas/pci/rockchip,rk3399-pcie.yaml#
$schema: http://devicetree.org/meta-schemas/core.yaml#

标题: Rockchip AXI PCIe 根端口桥接主机

维护者:
  - Shawn Lin <shawn.lin@rock-chips.com>

allOf:
  - $ref: /schemas/pci/pci-host-bridge.yaml#
  - $ref: rockchip,rk3399-pcie-common.yaml#

属性:
  compatible:
    常量: rockchip,rk3399-pcie

  reg: 真

  reg-names:
    项目:
      - 常量: axi-base
      - 常量: apb-base

  interrupts:
    最大项数: 3

  interrupt-names:
    项目:
      - 常量: sys
      - 常量: legacy
      - 常量: client

  aspm-no-l0s:
    描述: 如果使用 24MHz 振荡器为 RC 的 PHY, 需要此属性
ep-gpios:
    最大项数: 1
    描述: 预复位 GPIO

  vpcie12v-supply:
    描述: 用于 PCIe 的 12V 稳压器
vpcie3v3-supply:
    描述: 用于 PCIe 的 3.3V 稳压器
vpcie1v8-supply:
    描述: 用于 PCIe 的 1.8V 稳压器
vpcie0v9-supply:
    描述: 用于 PCIe 的 0.9V 稳压器
interrupt-controller:
    类型: 对象
    其他属性: 假

    属性:
      '#address-cells':
        常量: 0

      '#interrupt-cells':
        常量: 1

      interrupt-controller: 真

必需:
  - ranges
  - "#interrupt-cells"
  - interrupts
  - interrupt-controller
  - interrupt-map
  - interrupt-map-mask
  - msi-map

未评估属性: 假

示例:
  - |
    #include <dt-bindings/interrupt-controller/arm-gic.h>
    #include <dt-bindings/gpio/gpio.h>
    #include <dt-bindings/clock/rk3399-cru.h>

    总线 {
        #address-cells = <2>;
        #size-cells = <2>;

        pcie@f8000000 {
            compatible = "rockchip,rk3399-pcie";
            device_type = "pci";
            #address-cells = <3>;
            #size-cells = <2>;
            clocks = <&cru ACLK_PCIE>, <&cru ACLK_PERF_PCIE>,
              <&cru PCLK_PCIE>, <&cru SCLK_PCIE_PM>;
            clock-names = "aclk", "aclk-perf",
                    "hclk", "pm";
            interrupts = <GIC_SPI 49 IRQ_TYPE_LEVEL_HIGH 0>,
                  <GIC_SPI 50 IRQ_TYPE_LEVEL_HIGH 0>,
                  <GIC_SPI 51 IRQ_TYPE_LEVEL_HIGH 0>;
            interrupt-names = "sys", "legacy", "client";
            ep-gpios = <&gpio3 13 GPIO_ACTIVE_HIGH>;
            ranges = <0x83000000 0x0 0xfa000000 0x0 0xfa000000 0x0 0x600000
                0x81000000 0x0 0xfa600000 0x0 0xfa600000 0x0 0x100000>;
            num-lanes = <4>;
            msi-map = <0x0 &its 0x0 0x1000>;
            reg = <0x0 0xf8000000 0x0 0x2000000>, <0x0 0xfd000000 0x0 0x1000000>;
            reg-names = "axi-base", "apb-base";
            resets = <&cru SRST_PCIE_CORE>, <&cru SRST_PCIE_MGMT>,
              <&cru SRST_PCIE_MGMT_STICKY>, <&cru SRST_PCIE_PIPE> ,
              <&cru SRST_PCIE_PM>, <&cru SRST_P_PCIE>, <&cru SRST_A_PCIE>;
            reset-names = "core", "mgmt", "mgmt-sticky", "pipe",
                    "pm", "pclk", "aclk";
            /* 过时的旧 PHY 模型 */
            phys = <&pcie_phy>;
            phy-names = "pcie-phy";
            pinctrl-names = "default";
            pinctrl-0 = <&pcie_clkreq>;
            #interrupt-cells = <1>;
            interrupt-map-mask = <0 0 0 7>;
            interrupt-map = <0 0 0 1 &pcie0_intc 0>,
                <0 0 0 2 &pcie0_intc 1>,
                <0 0 0 3 &pcie0_intc 2>,
                <0 0 0 4 &pcie0_intc 3>;

            pcie0_intc: interrupt-controller {
                interrupt-controller;
                #address-cells = <0>;
                #interrupt-cells = <1>;
            };
        };
    };
..
```

请注意，由于 YAML 是一种结构化数据格式，并且在不同语言中语法保持一致，所以这里主要对注释和描述进行了翻译。
