# SPDX-许可证标识符: (GPL-2.0-only 或 BSD-2-Clause)
%YAML 1.2
---
$id: http://devicetree.org/schemas/pci/nvidia,tegra194-pcie-ep.yaml#
$schema: http://devicetree.org/meta-schemas/core.yaml#

title: NVIDIA Tegra194 (及其后续版本) 的 PCIe 终端控制器（基于 Synopsys DesignWare 核心）

maintainers:
  - Thierry Reding <thierry.reding@gmail.com>
  - Jon Hunter <jonathanh@nvidia.com>
  - Vidya Sagar <vidyas@nvidia.com>

description: |
  此 PCIe 控制器基于 Synopsys DesignWare PCIe IP，因此继承了在 snps,dw-pcie-ep.yaml 中定义的所有通用属性。部分控制器实例支持双模式；它们可以在根端口模式或终端模式下工作，但不能同时使用两种模式。
  在 Tegra194 上，控制器 C0、C4 和 C5 支持终端模式。
  在 Tegra234 上，控制器 C5、C6、C7 和 C10 支持终端模式。
  注意：在 Tegra194 的 P2972-0000 平台上，仅 C5 控制器可以被启用以终端模式运行，这是由于平台的设计方式决定的。

properties:
  compatible:
    enum:
      - nvidia,tegra194-pcie-ep
      - nvidia,tegra234-pcie-ep

  reg:
    items:
      - description: 控制器的应用逻辑寄存器
      - description: iATU 和 DMA 寄存器。这是 PCIe 核心的 iATU（内部地址转换单元）寄存器对软件访问可用的位置
      - description: 根端口自身的配置寄存器所在的开孔
      - description: 映射远程根复合体地址空间所用的开孔

  reg-names:
    items:
      - const: appl
      - const: atu_dma
      - const: dbi
      - const: addr_space

  interrupts:
    items:
      - description: 控制器中断

  interrupt-names:
    items:
      - const: intr

  clocks:
    items:
      - description: 模块时钟

  clock-names:
    items:
      - const: core

  resets:
    items:
      - description: APB 总线接口复位
      - description: 模块复位

  reset-names:
    items:
      - const: apb
      - const: core

  reset-gpios:
    description: 必须包含指向 GPIO 控制器的 phandle 及 GPIO，该 GPIO 被用作 PERST 输入信号。请参考 pci.txt

  phys:
    minItems: 1
    maxItems: 8

  phy-names:
    minItems: 1
    items:
      - const: p2u-0
      - const: p2u-1
      - const: p2u-2
      - const: p2u-3
      - const: p2u-4
      - const: p2u-5
      - const: p2u-6
      - const: p2u-7

  power-domains:
    maxItems: 1
    description: |
      包含指向控制相应 PCIe 控制器电源的节点的 phandle 和针对 PCIe 控制器的指定名称
      Tegra194 的指定名称定义在 "include/dt-bindings/power/tegra194-powergate.h" 中
      Tegra234 的指定名称定义在 "include/dt-bindings/power/tegra234-powergate.h" 中

  interconnects:
    items:
      - description: 内存读取客户端
      - description: 内存写入客户端

  interconnect-names:
    items:
      - const: dma-mem # 读取
      - const: write

  dma-coherent: true

  nvidia,bpmp:
    $ref: /schemas/types.yaml#/definitions/phandle-array
    description: |
      必须包含指向 BPMP 控制器节点的 phandle 对以及控制器 ID。以下是每个控制器的控制器 ID：

      Tegra194

        0: C0
        1: C1
        2: C2
        3: C3
        4: C4
        5: C5

      Tegra234

        0: C0
        1: C1
        2: C2
        3: C3
        4: C4
        5: C5
        6: C6
        7: C7
        8: C8
        9: C9
        10: C10

    items:
      - items:
          - description: 指向 BPMP 控制器节点的 phandle
          - description: PCIe 控制器 ID
            maximum: 10

  nvidia,aspm-cmrt-us:
    description: 为正确操作 ASPM 规定的常用模式恢复时间（以微秒为单位）

  nvidia,aspm-pwr-on-t-us:
    description: 为正确操作 ASPM 规定的上电时间（以微秒为单位）

  nvidia,aspm-l0s-entrance-latency-us:
    description: ASPM L0s 进入延迟（以微秒为单位）

  vddio-pex-ctl-supply:
    description: 指向 PCIe 边带信号的调节电源供应的 phandle

  nvidia,refclk-select-gpios:
    maxItems: 1
    description: 用于从主机启用 REFCLK 至控制器的 GPIO

  nvidia,enable-ext-refclk:
    description: |
      如果控制器被配置为从主机接收参考时钟，则需要存在此布尔属性
      注意：这仅适用于 Tegra234
这段文本定义了两个 PCI Express Endpoint (PCIE EP) 配置示例，分别针对 NVIDIA Tegra194 和 Tegra234 平台。以下是这些配置的中文翻译：

```yaml
# 引用 flag 定义
$ref: /schemas/types.yaml#/definitions/flag

# 配置项 nvidia,enable-srns
nvidia,enable-srns:
  description: |
    如果控制器被配置为在 SRNS（分离参考时钟无展频时钟）模式下运行，则需要存在此布尔属性。
    注意：这仅适用于 Tegra234。

# 引用 snps,dw-pcie-ep.yaml 中的定义
allOf:
  - $ref: /schemas/pci/snps,dw-pcie-ep.yaml#

# 不允许未评估的属性
unevaluatedProperties: false

# 必须存在的属性
required:
  - interrupts
  - interrupt-names
  - clocks
  - clock-names
  - resets
  - reset-names
  - power-domains
  - reset-gpios
  - vddio-pex-ctl-supply
  - num-lanes
  - phys
  - phy-names
  - nvidia,bpmp

# 示例配置
examples:
  - |
    # 包含必要的绑定文件
    #include <dt-bindings/clock/tegra194-clock.h>
    #include <dt-bindings/gpio/tegra194-gpio.h>
    #include <dt-bindings/interrupt-controller/arm-gic.h>
    #include <dt-bindings/power/tegra194-powergate.h>
    #include <dt-bindings/reset/tegra194-reset.h>

    # 总线配置
    bus@0 {
        # 地址单元数
        #address-cells = <2>;
        # 大小单元数
        #size-cells = <2>;
        # 范围
        ranges = <0x0 0x0 0x0 0x8 0x0>;

        # PCIE EP 控制器配置
        pcie-ep@141a0000 {
            # 兼容性声明
            compatible = "nvidia,tegra194-pcie-ep";
            # 寄存器空间
            reg = <0x00 0x141a0000 0x0 0x00020000>, /* 应用寄存器 (128K) */
                  <0x00 0x3a040000 0x0 0x00040000>, /* iATU_DMA 寄存器空间 (256K) */
                  <0x00 0x3a080000 0x0 0x00040000>, /* DBI 寄存器空间 (256K) */
                  <0x1c 0x00000000 0x4 0x00000000>; /* 地址空间 (16G) */
            # 寄存器名称
            reg-names = "appl", "atu_dma", "dbi", "addr_space";
            # 中断
            interrupts = <GIC_SPI 53 IRQ_TYPE_LEVEL_HIGH>; /* 控制器中断 */
            # 中断名称
            interrupt-names = "intr";

            # 时钟
            clocks = <&bpmp TEGRA194_CLK_PEX1_CORE_5>;
            # 时钟名称
            clock-names = "core";

            # 重置信号
            resets = <&bpmp TEGRA194_RESET_PEX1_CORE_5_APB>,
                     <&bpmp TEGRA194_RESET_PEX1_CORE_5>;
            # 重置信号名称
            reset-names = "apb", "core";

            # 电源域
            power-domains = <&bpmp TEGRA194_POWER_DOMAIN_PCIEX8A>;
            # 引脚控制器名称
            pinctrl-names = "default";
            # 引脚控制器状态
            pinctrl-0 = <&clkreq_c5_bi_dir_state>;

            # NVIDIA BPMP 控制器
            nvidia,bpmp = <&bpmp 5>;

            # ASPM 参数
            nvidia,aspm-cmrt-us = <60>;
            nvidia,aspm-pwr-on-t-us = <20>;
            nvidia,aspm-l0s-entrance-latency-us = <3>;

            # VDDIO PEX 控制电源
            vddio-pex-ctl-supply = <&vdd_1v8ao>;

            # 重置 GPIO
            reset-gpios = <&gpio TEGRA194_MAIN_GPIO(GG, 1) GPIO_ACTIVE_LOW>;

            # 参考时钟选择 GPIO
            nvidia,refclk-select-gpios = <&gpio_aon TEGRA194_AON_GPIO(AA, 5)
                                          GPIO_ACTIVE_HIGH>;

            # 车道数量
            num-lanes = <8>;

            # 物理层设备
            phys = <&p2u_nvhs_0>, <&p2u_nvhs_1>, <&p2u_nvhs_2>,
                   <&p2u_nvhs_3>, <&p2u_nvhs_4>, <&p2u_nvhs_5>,
                   <&p2u_nvhs_6>, <&p2u_nvhs_7>;

            # 物理层设备名称
            phy-names = "p2u-0", "p2u-1", "p2u-2", "p2u-3", "p2u-4",
                        "p2u-5", "p2u-6", "p2u-7";
        };
    };

  - |
    # 包含必要的绑定文件
    #include <dt-bindings/clock/tegra234-clock.h>
    #include <dt-bindings/gpio/tegra234-gpio.h>
    #include <dt-bindings/interrupt-controller/arm-gic.h>
    #include <dt-bindings/power/tegra234-powergate.h>
    #include <dt-bindings/reset/tegra234-reset.h>

    # 总线配置
    bus@0 {
        # 地址单元数
        #address-cells = <2>;
        # 大小单元数
        #size-cells = <2>;
        # 范围
        ranges = <0x0 0x0 0x0 0x8 0x0>;

        # PCIE EP 控制器配置
        pcie-ep@141a0000 {
            # 兼容性声明
            compatible = "nvidia,tegra234-pcie-ep";
            # 电源域
            power-domains = <&bpmp TEGRA234_POWER_DOMAIN_PCIEX8A>;
            # 寄存器空间
            reg = <0x00 0x141a0000 0x0 0x00020000>, /* 应用寄存器 (128K) */
                  <0x00 0x3a040000 0x0 0x00040000>, /* iATU_DMA 寄存器空间 (256K) */
                  <0x00 0x3a080000 0x0 0x00040000>, /* DBI 寄存器空间 (256K) */
                  <0x27 0x40000000 0x4 0x00000000>; /* 地址空间 (16G) */
            # 寄存器名称
            reg-names = "appl", "atu_dma", "dbi", "addr_space";

            # 中断
            interrupts = <GIC_SPI 53 IRQ_TYPE_LEVEL_HIGH>; /* 控制器中断 */
            # 中断名称
            interrupt-names = "intr";

            # 时钟
            clocks = <&bpmp TEGRA234_CLK_PEX1_C5_CORE>;
            # 时钟名称
            clock-names = "core";

            # 重置信号
            resets = <&bpmp TEGRA234_RESET_PEX1_CORE_5_APB>,
                     <&bpmp TEGRA234_RESET_PEX1_CORE_5>;
            # 重置信号名称
            reset-names = "apb", "core";

            # NVIDIA BPMP 控制器
            nvidia,bpmp = <&bpmp 5>;

            # 启用外部参考时钟
            nvidia,enable-ext-refclk;
            # ASPM 参数
            nvidia,aspm-cmrt-us = <60>;
            nvidia,aspm-pwr-on-t-us = <20>;
            nvidia,aspm-l0s-entrance-latency-us = <3>;

            # VDDIO PEX 控制电源
            vddio-pex-ctl-supply = <&p3701_vdd_1v8_ls>;

            # 重置 GPIO
            reset-gpios = <&gpio TEGRA234_MAIN_GPIO(AF, 1) GPIO_ACTIVE_LOW>;

            # 参考时钟选择 GPIO
            nvidia,refclk-select-gpios = <&gpio_aon
                                          TEGRA234_AON_GPIO(AA, 4)
                                          GPIO_ACTIVE_HIGH>;

            # 车道数量
            num-lanes = <8>;

            # 物理层设备
            phys = <&p2u_nvhs_0>, <&p2u_nvhs_1>, <&p2u_nvhs_2>,
                   <&p2u_nvhs_3>, <&p2u_nvhs_4>, <&p2u_nvhs_5>,
                   <&p2u_nvhs_6>, <&p2u_nvhs_7>;

            # 物理层设备名称
            phy-names = "p2u-0", "p2u-1", "p2u-2", "p2u-3", "p2u-4",
                        "p2u-5", "p2u-6", "p2u-7";
        };
    };
```

请注意，这里的示例是针对特定硬件平台（NVIDIA Tegra194 和 Tegra234）的详细配置，并且包含了必要的中断、时钟、重置等信息。这些配置通常用于 Device Tree 中来描述硬件的结构和配置细节。
