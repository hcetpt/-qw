# SPDX-许可证标识符: GPL-2.0
%YAML 1.2
---
$id: http://devicetree.org/schemas/pci/snps,dw-pcie-ep.yaml#
$schema: http://devicetree.org/meta-schemas/core.yaml#

标题: Synopsys DesignWare PCIe 终端接口

维护者:
  - Jingoo Han <jingoohan1@gmail.com>
  - Gustavo Pimentel <gustavo.pimentel@synopsys.com>

描述: |
  Synopsys DesignWare PCIe 主控制器终端

# 请为您的DWC PCIe 终端控制器创建一个单独的设备树模式
# 并确保它被分配了供应商特定的兼容字符串
选择:
  属性:
    兼容:
      常量: snps,dw-pcie-ep
  必需:
    - 兼容

全部Of:
  - $ref: /schemas/pci/pci-ep.yaml#
  - $ref: /schemas/pci/snps,dw-pcie-common.yaml#

属性:
  reg:
    描述:
      DBI、DBI2 寄存器空间和外向内存窗口对于正常控制器功能是必需的。如果空间展开（IP 核版本 >= 4.80a），还需要 iATU 内存 I/O 区域
最小项: 2
    最大项: 7

  reg-names:
    最小项: 2
    最大项: 7
    项:
      一种Of:
        - 描述:
            通过 DBI 接口访问的基本 DWC PCIe 控制器配置空间。这个内存空间可以通过设置 CDM/ELBI = 0 和 CS2 = 0 激活，或者是一个所有空间连续的内存区域。请注意，在 v4.80a 之前的 DWC PCIe 控制器上，iATU/eDMA CSRs 是通过 PL 视口间接访问的
常量: dbi
        - 描述:
            DWC PCIe 配置空间寄存器的镜像。通过设置 CDM/ELBI = 0 和 CS2 = 1 来选择这个空间。这是 PCI-SIG PCIe CFG 空间与一些 PCI 头部空间、PCI 标准和扩展结构的镜像寄存器的混合。它主要与终端控制器配置相关，但仍然有一些镜像寄存器可用于根端口模式
常量: dbi2
        - 描述:
            外部本地总线寄存器。这是一些通常由平台工程师定义的应用程序相关的寄存器。可以通过设置 CDM/ELBI = 1 和 CS2 = 0 或通过某些平台特定的方式（例如作为系统控制器的一部分）来选择该空间
枚举: [ elbi, app ]
        - 描述:
            所有设备功能共用的 iATU/eDMA 寄存器。这是一个带有内部地址转换单元和增强型 DMA 的展开内存空间，通过设置 CDM/ELBI = 1 和 CS2 = 1 来选择。对于 v4.80a 之前版本的 IP 核，这些寄存器通过间接寻址方案使用一组映射到 PL 空间的视口 CSRs 进行编程。请注意，iATU 通常映射到此区域的 0x0 地址，而 eDMA 可在 0x80000 基址处获取
常量: atu
        - 描述:
            平台特定的 eDMA 寄存器。一些平台可能具有非标准基址映射的 eDMA CSRs。寄存器偏移量可以改变，或者地址的 MS/LS 位可以在内存-I/O 事务到达 DW PCIe 从属接口之前附加在一个额外的 RTL 块中
常量: dma
        - 描述:
            PHY/PCS 配置寄存器。一些平台可以通过专用内存映射区域访问 PCS 和 PHY CSRs，但这些寄存器主要通过嵌入式 PHY 视口方案或某种平台特定的方法间接访问
常量: phy
        - 描述:
            用于在 PCIe 总线层次结构上生成各种应用程序特定流量的外出 iATU 能力的内存区域。其使用场景取决于终端功能，例如，它可以用来创建 MSI(X) 消息
常量: addr_space
        - 描述:
            供应商特定的 CSR 名称。考虑为新的绑定使用上面的一般名称
翻译如下：

`oneOf`:
    - description: 请参阅原生 'elbi/app' CSR 区域的详细信息
    enum: [ link, appl ]
    - description: 请参阅原生 'atu' CSR 区域的详细信息
    enum: [ atu_dma ]
`allOf`:
    - contains:
        const: dbi
    - contains:
        const: addr_space

`interrupts`:
    description:
      对于控制器正常运行而言，没有强制性的中断请求（IRQ）信号，但在原生集的基础上，平台可能会指定与链路或电源管理（PM）相关的中断请求。
`minItems`: 1
    `maxItems`: 20

`interrupt-names`:
    `minItems`: 1
    `maxItems`: 20
    `items`:
      `oneOf`:
        - description:
            控制器请求从/向虚拟产品数据（VPD）功能寄存器读取或写入虚拟产品数据
        const: vpd
        - description:
            链路状态2寄存器中设置链路均衡请求标志（如果在链路控制3寄存器中启用了相应的中断请求）
        const: l_eq
        - description:
            表示eDMA发送/接收传输完成或相应通道上发生错误。eDMA可以有八个发送（写入）和接收（读取）eDMA通道，总共支持多达16个中断请求信号。根据默认edma_int[*]总线设置，写入eDMA通道应首先按顺序排列
        pattern: '^dma([0-9]|1[0-5])?$'
        - description:
            汽车/安全特性检测到PCIe协议可纠正错误或数据路径保护可纠正错误
        const: sft_ce
        - description:
            内部安全机制检测到无法纠正的错误
        const: sft_ue
        - description:
            根据供应商特定事件基础而触发的应用程序特定中断请求
        const: app
        - description:
            供应商特定的中断请求名称。对于新的绑定，请考虑使用上述通用名称
        const: app
这段文本定义了一个设备树节点的配置，用于描述一个PCI Express Endpoint (PCIE EP)设备。以下是文本内容的中文翻译：

oneOf:  
  - 描述: 请参见本机"app"中断请求（IRQ）以获取详细信息
    枚举: [intr]

最大函数数量:
  最大值: 32

必需字段:
  - 兼容性
  - 寄存器地址
  - 寄存器名称

额外属性: 允许

示例:
  - |
    pcie-ep@dfd00000 {
      兼容性 = "snps,dw-pcie-ep";
      寄存器地址 = <0xdfc00000 0x0001000>, /* IP寄存器1 */
                     <0xdfc01000 0x0001000>, /* IP寄存器2 */
                     <0xd0000000 0x2000000>; /* 配置空间 */
      寄存器名称 = "dbi", "dbi2", "addr_space";

      中断 = <23>, <24>;
      中断名称 = "dma0", "dma1";

      时钟 = <&sys_clk 12>, <&sys_clk 24>;
      时钟名称 = "dbi", "ref";

      复位信号 = <&sys_rst 12>, <&sys_clk 24>;
      复位名称 = "dbi", "phy";

      物理层 = <&pcie_phy0>, <&pcie_phy1>, <&pcie_phy2>, <&pcie_phy3>;
      物理层名称 = "pcie0", "pcie1", "pcie2", "pcie3";

      最大链路速度 = <3>;
      最大函数数量 = /bits/ 8 <4>;
    };

这里提到的“函数数量”指的是PCI Express设备能够支持的最大端口数或功能数。“最大链路速度”表示设备可以支持的最高数据传输速率。上述配置中还包含了寄存器、中断、时钟等关键组件的定义和相关属性。
