# SPDX-许可证标识符: (GPL-2.0-only 或 BSD-2-Clause)
%YAML 1.2
---
$id: http://devicetree.org/schemas/pci/faraday,ftpci100.yaml#
$schema: http://devicetree.org/meta-schemas/core.yaml#

标题: Faraday Technology FTPCI100 PCI 主桥接器

维护者:
  - Linus Walleij <linus.walleij@linaro.org>

描述: |
    这个 PCI 桥接器可以在 Cortina Systems Gemini 系统级芯片平台内部找到，并且是来自 Faraday Technology 的一个通用 IP 块。它有两种变体：普通版和双 PCI 版。普通版本将级联中断控制器嵌入到主桥接器中。双版本则将中断路由到主机芯片的中断控制器。
主控制器出现在 PCI 总线上，供应商 ID 为 0x159b（Faraday Technology），产品 ID 为 0x4321。
I/O 空间考虑:
    普通变体具有 128MiB 非预取内存空间，而“双”变体则有 64MiB。在描述范围时，请考虑这一点。
中断映射考虑：

    “双”变体会从系统中断控制器接收 INT A、B、C 和 D，并应在它的中断映射中指向控制器中的相应中断
Faraday PCI（非双变体）中断分配默认中断映射/交换的唯一文档的代码通常如下所示，在中断控制器侧而不是在互连中进行交换：

    interrupt-map-mask = <0xf800 0 0 7>;
    interrupt-map =
        <0x4800 0 0 1 &pci_intc 0>, /* 插槽 9 */
        <0x4800 0 0 2 &pci_intc 1>,
        <0x4800 0 0 3 &pci_intc 2>,
        <0x4800 0 0 4 &pci_intc 3>,
        <0x5000 0 0 1 &pci_intc 1>, /* 插槽 10 */
        <0x5000 0 0 2 &pci_intc 2>,
        <0x5000 0 0 3 &pci_intc 3>,
        <0x5000 0 0 4 &pci_intc 0>,
        <0x5800 0 0 1 &pci_intc 2>, /* 插槽 11 */
        <0x5800 0 0 2 &pci_intc 3>,
        <0x5800 0 0 3 &pci_intc 0>,
        <0x5800 0 0 4 &pci_intc 1>,
        <0x6000 0 0 1 &pci_intc 3>, /* 插槽 12 */
        <0x6000 0 0 2 &pci_intc 0>,
        <0x6000 0 0 3 &pci_intc 1>,
        <0x6000 0 0 4 &pci_intc 2>;

allOf:
  - $ref: /schemas/pci/pci-host-bridge.yaml#

属性:
  compatible:
    oneOf:
      - items:
          - const: cortina,gemini-pci
          - const: faraday,ftpci100
      - items:
          - const: cortina,gemini-pci-dual
          - const: faraday,ftpci100-dual
      - const: faraday,ftpci100
      - const: faraday,ftpci100-dual

  reg:
    maxItems: 1

  "#address-cells":
    const: 3

  "#interrupt-cells":
    const: 1

  ranges:
    minItems: 2

  dma-ranges:
    minItems: 3
    描述: |
      内存区域的三个范围。这些范围必须
      对齐到 1MB 边界，并且可以是 1MB、2MB、4MB、8MB、16MB、32MB、64MB、128MB、256MB、512MB、1GB 或 2GB 大小。内存应标记为可预取
时钟:
    items:
      - 描述: 外设时钟 (PCLK)
      - 描述: PCI 时钟 (PCICLK)
描述: |
      如果这些不存在，则假定它们
      是硬连线启用并始终开启的。PCI 时钟将是 33 或 66 MHz
时钟名称:
    items:
      - const: PCLK
      - const: PCICLK

  interrupt-controller:
    类型: 对象

必需:
  - reg
  - compatible
  - "#interrupt-cells"
  - interrupt-map-mask
  - interrupt-map
  - dma-ranges

如果:
  属性:
    compatible:
      包含:
        const: faraday,ftpci100
那么:
  必需:
    - interrupt-controller

未评估属性: false

示例:
  - |
    #include <dt-bindings/interrupt-controller/irq.h>
    pci@50000000 {
      compatible = "cortina,gemini-pci", "faraday,ftpci100";
      reg = <0x50000000 0x100>;
      device_type = "pci";
      #address-cells = <3>;
      #size-cells = <2>;
      #interrupt-cells = <1>;

      bus-range = <0x00 0xff>;
      ranges = /* 1MiB I/O 空间 0x50000000-0x500fffff */
        <0x01000000 0 0          0x50000000 0 0x00100000>,
        /* 128MiB 非预取内存 0x58000000-0x5fffffff */
        <0x02000000 0 0x58000000 0x58000000 0 0x08000000>;

      /* DMA 范围 */
      dma-ranges =
        /* 128MiB 在 0x00000000-0x07ffffff */
        <0x02000000 0 0x00000000 0x00000000 0 0x08000000>,
        /* 64MiB 在 0x00000000-0x03ffffff */
        <0x02000000 0 0x00000000 0x00000000 0 0x04000000>,
        /* 64MiB 在 0x00000000-0x03ffffff */
        <0x02000000 0 0x00000000 0x00000000 0 0x04000000>;

      interrupt-map-mask = <0xf800 0 0 7>;
      interrupt-map =
        <0x4800 0 0 1 &pci_intc 0>, /* 插槽 9 */
        <0x4800 0 0 2 &pci_intc 1>,
        <0x4800 0 0 3 &pci_intc 2>,
        <0x4800 0 0 4 &pci_intc 3>,
        <0x5000 0 0 1 &pci_intc 1>, /* 插槽 10 */
        <0x5000 0 0 2 &pci_intc 2>,
        <0x5000 0 0 3 &pci_intc 3>,
        <0x5000 0 0 4 &pci_intc 0>,
        <0x5800 0 0 1 &pci_intc 2>, /* 插槽 11 */
        <0x5800 0 0 2 &pci_intc 3>,
        <0x5800 0 0 3 &pci_intc 0>,
        <0x5800 0 0 4 &pci_intc 1>,
        <0x6000 0 0 1 &pci_intc 3>, /* 插槽 12 */
        <0x6000 0 0 2 &pci_intc 0>,
        <0x6000 0 0 3 &pci_intc 0>,
        <0x6000 0 0 4 &pci_intc 0>;
      pci_intc: interrupt-controller {
        interrupt-parent = <&intcon>;
        interrupt-controller;
        interrupts = <8 IRQ_TYPE_LEVEL_HIGH>;
        #address-cells = <0>;
        #interrupt-cells = <1>;
      };
    };
