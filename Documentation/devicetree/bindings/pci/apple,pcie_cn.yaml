# SPDX-许可证标识符: (GPL-2.0-only 或 BSD-2-Clause)
%YAML 1.2
---
$id: http://devicetree.org/schemas/pci/apple,pcie.yaml#
$schema: http://devicetree.org/meta-schemas/core.yaml#

标题: Apple PCIe 主控制器

维护者:
  - Mark Kettenis <kettenis@openbsd.org>

描述: |
  Apple PCIe 主控制器是一种 PCIe 主控制器，具有多个根端口，
  存在于 Apple ARM SoC 平台中，包括各种 iPhone 和 iPad 设备以及“Apple Silicon”Mac。
  控制器集成了 Synopsys DesignWare PCIe 逻辑来实现其根端口。但大多数 DesignWare
  PCIe 主桥接器上发现的 ATU 缺失。
所有根端口共享单一的 ECAM 空间，但是独立的 GPIO 被用于将这些端口上的 PCI 设备
  从复位状态中移除。因此，标准的 "reset-gpios" 和 "max-link-speed" 属性出现在
  表示对应于各个根端口的 PCI 桥接器的子节点上。
MSI 由 PCIe 控制器处理并转换为常规中断。提供了 32 个 MSI 的范围。
  这些 32 个 MSI 可以根据操作系统的需求通过编程 PCIe 控制器的端口寄存器
  分布到根端口。

属性:
  compatible:
    items:
      - 枚举:
          - apple,t8103-pcie
          - apple,t8112-pcie
          - apple,t6000-pcie
      - 常量: apple,pcie

  reg:
    minItems: 3
    maxItems: 6

  reg-names:
    minItems: 3
    items:
      - 常量: config
      - 常量: rc
      - 常量: port0
      - 常量: port1
      - 常量: port2
      - 常量: port3

  ranges:
    minItems: 2
    maxItems: 2

  interrupts:
    描述:
      每个根端口的中断标识符
minItems: 1
    maxItems: 4

  msi-parent: true

  msi-ranges:
    maxItems: 1

  iommu-map: true
  iommu-map-mask: true

  power-domains:
    maxItems: 1

必需:
  - compatible
  - reg
  - reg-names
  - bus-range
  - interrupts
  - msi-controller
  - msi-parent
  - msi-ranges

未评估属性: false

allOf:
  - $ref: /schemas/pci/pci-host-bridge.yaml#
  - $ref: /schemas/interrupt-controller/msi-controller.yaml#
  - 如果:
      属性:
        compatible:
          包含:
            常量: apple,t8103-pcie
    则:
      属性:
        reg:
          maxItems: 5
        interrupts:
          maxItems: 3

示例:
  - |
    #include <dt-bindings/interrupt-controller/apple-aic.h>

    soc {
      #address-cells = <2>;
      #size-cells = <2>;

      pcie0: pcie@690000000 {
        compatible = "apple,t8103-pcie", "apple,pcie";
        device_type = "pci";

        reg = <0x6 0x90000000 0x0 0x1000000>,
              <0x6 0x80000000 0x0 0x100000>,
              <0x6 0x81000000 0x0 0x4000>,
              <0x6 0x82000000 0x0 0x4000>,
              <0x6 0x83000000 0x0 0x4000>;
        reg-names = "config", "rc", "port0", "port1", "port2";

        interrupt-parent = <&aic>;
        interrupts = <AIC_IRQ 695 IRQ_TYPE_LEVEL_HIGH>,
                     <AIC_IRQ 698 IRQ_TYPE_LEVEL_HIGH>,
                     <AIC_IRQ 701 IRQ_TYPE_LEVEL_HIGH>;

        msi-controller;
        msi-parent = <&pcie0>;
        msi-ranges = <&aic AIC_IRQ 704 IRQ_TYPE_EDGE_RISING 32>;

        iommu-map = <0x100 &dart0 1 1>,
                    <0x200 &dart1 1 1>,
                    <0x300 &dart2 1 1>;
        iommu-map-mask = <0xff00>;

        bus-range = <0 3>;
        #address-cells = <3>;
        #size-cells = <2>;
        ranges = <0x43000000 0x6 0xa0000000 0x6 0xa0000000 0x0 0x20000000>,
                 <0x02000000 0x0 0xc0000000 0x6 0xc0000000 0x0 0x40000000>;

        power-domains = <&ps_apcie_gp>;
        pinctrl-0 = <&pcie_pins>;
        pinctrl-names = "default";

        pci@0,0 {
          device_type = "pci";
          reg = <0x0 0x0 0x0 0x0 0x0>;
          reset-gpios = <&pinctrl_ap 152 0>;

          #address-cells = <3>;
          #size-cells = <2>;
          ranges;
        };

        pci@1,0 {
          device_type = "pci";
          reg = <0x800 0x0 0x0 0x0 0x0>;
          reset-gpios = <&pinctrl_ap 153 0>;

          #address-cells = <3>;
          #size-cells = <2>;
          ranges;
        };

        pci@2,0 {
          device_type = "pci";
          reg = <0x1000 0x0 0x0 0x0 0x0>;
          reset-gpios = <&pinctrl_ap 33 0>;

          #address-cells = <3>;
          #size-cells = <2>;
          ranges;
        };
      };
    };
