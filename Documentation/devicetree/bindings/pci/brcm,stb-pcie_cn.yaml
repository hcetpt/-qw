下面是给定 YAML 文档的中文翻译：

```yaml
# SPDX-许可证标识符: (GPL-2.0-only 或 BSD-2-Clause)
%YAML 1.2
---
$id: http://devicetree.org/schemas/pci/brcm,stb-pcie.yaml#
$schema: http://devicetree.org/meta-schemas/core.yaml#

标题: Brcmstb PCIe 主控制器

维护者:
  - Nicolas Saenz Julienne <nsaenzjulienne@suse.de>

属性:
  兼容性:
    项目:
      - 枚举:
          - brcm,bcm2711-pcie # Raspberry Pi 4
          - brcm,bcm4908-pcie
          - brcm,bcm7211-pcie # Broadcom STB 版本的 Raspberry Pi 4
          - brcm,bcm7278-pcie # Broadcom 7278 ARM
          - brcm,bcm7216-pcie # Broadcom 7216 ARM
          - brcm,bcm7445-pcie # Broadcom 7445 MIPs
          - brcm,bcm7425-pcie # Broadcom 7425 MIPs
          - brcm,bcm7435-pcie # Broadcom 7435 MIPs

  寄存器:
    最大项目数: 1

  中断:
    最小项目数: 1
    项目:
      - 描述: PCIe 主控制器
      - 描述: 内置的 MSI 控制器

  中断名:
    最小项目数: 1
    项目:
      - 常量: pcie
      - 常量: msi

  范围:
    最小项目数: 1
    最大项目数: 4

  DMA 范围:
    最小项目数: 1
    最大项目数: 6

  时钟:
    最大项目数: 1

  时钟名:
    项目:
      - 常量: sw_pcie

  msi-controller:
    描述: 标识节点为一个 MSI 控制器
msi-parent:
    描述: 设备能够使用的 MSI 控制器
brcm,enable-ssc:
    描述: 指示是否使用展频时钟
类型: 布尔值

  aspm-no-l0s: true

  brcm,clkreq-mode:
    描述: 字符串，确定 PCIe RC 硬件关于控制参考时钟信号的操作模式。有三种不同的模式 —— "安全"，无条件驱动参考时钟信号，适用于所有设备但不提供任何功耗节省；"no-l1ss" —— 提供时钟功耗管理、L0s 和 L1，但不能提供 L1 子状态（L1SS）功耗节省。如果连接到 RC 的下游设备支持 L1SS 并且操作系统启用了 L1SS，则所有 PCIe 通信可能会突然停止，可能使系统挂起；"默认" —— 提供 L0s、L1 和 L1SS，但不合规以提供时钟功耗管理；具体来说，可能无法满足 "动态时钟控制"，PCI Express Mini CEM 2.1 规范第 3.2.5.2.2 节中指定的最大 T_CLRon 定时 400ns。这种情况很少见，只会在较旧的设备上发生。
$ref: /schemas/types.yaml#/definitions/string
    枚举: [ 安全, no-l1ss, 默认 ]

  brcm,scb-sizes:
    描述: u64 表示内存控制器的 64 位 PCIe 内存视窗大小。最多可能有三个控制器，并且每个大小必须是二的幂，其大小大于等于控制器支持的内存数量。注意每个内存控制器可能有两个组件区域——基地址和扩展地址，因此这些信息不能从 dma-ranges 推导出来
$ref: /schemas/types.yaml#/definitions/uint64-array
    项目:
      最小项目数: 1
      最大项目数: 3

必需:
  - 兼容性
  - 寄存器
  - 范围
  - DMA 范围
  - "#interrupt-cells"
  - 中断
  - 中断名
  - interrupt-map-mask
  - interrupt-map
  - msi-controller

allOf:
  - $ref: /schemas/pci/pci-host-bridge.yaml#
  - $ref: /schemas/interrupt-controller/msi-controller.yaml#
  - 如果:
      属性:
        兼容性:
          包含:
            常量: brcm,bcm4908-pcie
    则:
      属性:
        重置:
          项目:
            - 描述: 处理 PERST# 信号的重置控制器

        重置名:
          项目:
            - 常量: perst

      必需:
        - 重置
        - 重置名
  - 如果:
      属性:
        兼容性:
          包含:
            常量: brcm,bcm7216-pcie
    则:
      属性:
        重置:
          项目:
            - 描述: 指向 RESCAL 重置控制器的 phandle

        重置名:
          项目:
            - 常量: rescal

      必需:
        - 重置
        - 重置名

未评估属性: false

示例:
  - |
    #include <dt-bindings/interrupt-controller/irq.h>
    #include <dt-bindings/interrupt-controller/arm-gic.h>

    scb {
            #address-cells = <2>;
            #size-cells = <1>;
            pcie0: pcie@7d500000 {
                    兼容性 = "brcm,bcm2711-pcie";
                    寄存器 = <0x0 0x7d500000 0x9310>;
                    device_type = "pci";
                    #address-cells = <3>;
                    #size-cells = <2>;
                    #interrupt-cells = <1>;
                    中断 = <GIC_SPI 147 IRQ_TYPE_LEVEL_HIGH>,
                                 <GIC_SPI 148 IRQ_TYPE_LEVEL_HIGH>;
                    中断名 = "pcie", "msi";
                    interrupt-map-mask = <0x0 0x0 0x0 0x7>;
                    interrupt-map = <0 0 0 1 &gicv2 GIC_SPI 143 IRQ_TYPE_LEVEL_HIGH
                                     0 0 0 2 &gicv2 GIC_SPI 144 IRQ_TYPE_LEVEL_HIGH
                                     0 0 0 3 &gicv2 GIC_SPI 145 IRQ_TYPE_LEVEL_HIGH
                                     0 0 0 4 &gicv2 GIC_SPI 146 IRQ_TYPE_LEVEL_HIGH>;

                    msi-parent = <&pcie0>;
                    msi-controller;
                    范围 = <0x02000000 0x0 0xf8000000 0x6 0x00000000 0x0 0x04000000>;
                    DMA 范围 = <0x42000000 0x1 0x00000000 0x0 0x40000000 0x0 0x80000000>,
                                 <0x42000000 0x1 0x80000000 0x3 0x00000000 0x0 0x80000000>;
                    brcm,enable-ssc;
                    brcm,scb-sizes =  <0x0000000080000000 0x0000000080000000>;

                    /* PCIe 桥接器，根端口 */
                    pci@0,0 {
                            #address-cells = <3>;
                            #size-cells = <2>;
                            寄存器 = <0x0 0x0 0x0 0x0 0x0>;
                            兼容性 = "pciclass,0604";
                            device_type = "pci";
                            vpcie3v3-supply = <&vreg7>;
                            范围;

                            /* PCIe 终端 */
                            pci-ep@0,0 {
                                    分配的地址 =
                                        <0x82010000 0x0 0xf8000000 0x6 0x00000000 0x0 0x2000>;
                                    寄存器 = <0x0 0x0 0x0 0x0 0x0>;
                                    兼容性 = "pci14e4,1688";
                            };
                    };
            };
    };
```
请注意，这里的翻译尽可能保持了原有的格式和语法结构，以便于理解。
