这段 Device Tree 代码描述了一个 Xilinx 的 NWL PCIe 根端口桥接器。以下是翻译后的中文版本：

```yaml
# SPDX-License-Identifier: (GPL-2.0-only OR BSD-2-Clause)
%YAML 1.2
---
$id: http://devicetree.org/schemas/pci/xlnx,nwl-pcie.yaml#
$schema: http://devicetree.org/meta-schemas/core.yaml#

标题: Xilinx NWL PCIe 根端口桥接器

维护者:
  - Thippeswamy Havalige <thippeswamy.havalige@amd.com>

allOf:
  - $ref: /schemas/pci/pci-host-bridge.yaml#
  - $ref: /schemas/interrupt-controller/msi-controller.yaml#

属性:
  compatible:
    常量: xlnx,nwl-pcie-2.11

  reg:
    项目:
      - 描述: PCIe 桥接寄存器位置
- 描述: PCIe 控制器寄存器位置
- 描述: PCIe 配置空间区域
reg-names:
    项目:
      - 常量: breg
      - 常量: pcireg
      - 常量: cfg

  interrupts:
    项目:
      - 描述: 在收到杂项中断时被断言的中断
      - 描述: 未使用的中断(虚拟)
      - 描述: 在收到传统中断时被断言的中断
      - 描述: 当收到 MSI 时被断言的 msi1 中断
      - 描述: 当收到 MSI 时被断言的 msi0 中断

  interrupt-names:
    项目:
      - 常量: misc
      - 常量: dummy
      - 常量: intx
      - 常量: msi1
      - 常量: msi0

  interrupt-map-mask:
    项目:
      - 常量: 0
      - 常量: 0
      - 常量: 0
      - 常量: 7

  "#interrupt-cells":
    常量: 1

  msi-parent:
    描述: 设备能够使用的 MSI 控制器
interrupt-map:
    最大项目数: 4

  power-domains:
    最大项目数: 1

  iommus:
    最大项目数: 1

  dma-coherent:
    描述: 可选，仅在 DMA 操作是连贯的情况下需要
clocks:
    最大项目数: 1
    描述: 可选，输入时钟指定符
legacy-interrupt-controller:
    描述: 处理传统 PCI 中断的中断控制器节点
类型: 对象
    属性:
      "#address-cells":
        常量: 0

      "#interrupt-cells":
        常量: 1

      interrupt-controller: 真

    必须包含:
      - "#address-cells"
      - "#interrupt-cells"
      - interrupt-controller

    不允许额外属性: 错误

必须包含:
  - compatible
  - reg
  - reg-names
  - interrupts
  - "#interrupt-cells"
  - interrupt-map
  - interrupt-map-mask
  - msi-controller
  - power-domains

不允许未评估的属性: 错误

示例:
  - |
    #include <dt-bindings/interrupt-controller/arm-gic.h>
    #include <dt-bindings/interrupt-controller/irq.h>
    #include <dt-bindings/power/xlnx-zynqmp-power.h>
    soc {
        #address-cells = <2>;
        #size-cells = <2>;
        nwl_pcie: pcie@fd0e0000 {
            compatible = "xlnx,nwl-pcie-2.11";
            reg = <0x0 0xfd0e0000 0x0 0x1000>,
                  <0x0 0xfd480000 0x0 0x1000>,
                  <0x80 0x00000000 0x0 0x10000000>;
            reg-names = "breg", "pcireg", "cfg";
            ranges = <0x02000000 0x0 0xe0000000 0x0 0xe0000000 0x0 0x10000000>,
                     <0x43000000 0x00000006 0x0 0x00000006 0x0 0x00000002 0x0>;
            #address-cells = <3>;
            #size-cells = <2>;
            #interrupt-cells = <1>;
            msi-controller;
            device_type = "pci";
            interrupt-parent = <&gic>;
            interrupts = <GIC_SPI 118 IRQ_TYPE_LEVEL_HIGH>, <GIC_SPI 116 IRQ_TYPE_EDGE_RISING>,
                         <GIC_SPI 116 IRQ_TYPE_LEVEL_HIGH>, <GIC_SPI 115 IRQ_TYPE_EDGE_RISING>,
                         <GIC_SPI 114 IRQ_TYPE_LEVEL_HIGH>;
            interrupt-names = "misc", "dummy", "intx", "msi1", "msi0";
            interrupt-map-mask = <0x0 0x0 0x0 0x7>;
            interrupt-map = <0x0 0x0 0x0 0x1 &pcie_intc 0x1>,
                            <0x0 0x0 0x0 0x2 &pcie_intc 0x2>,
                            <0x0 0x0 0x0 0x3 &pcie_intc 0x3>,
                            <0x0 0x0 0x0 0x4 &pcie_intc 0x4>;
            msi-parent = <&nwl_pcie>;
            power-domains = <&zynqmp_firmware PD_PCIE>;
            iommus = <&smmu 0x4d0>;
            pcie_intc: legacy-interrupt-controller {
                interrupt-controller;
                #address-cells = <0>;
                #interrupt-cells = <1>;
            };
        };
    };
```

请注意，这里的翻译尽量保持了原文件的结构和格式，但部分术语和技术细节的翻译可能需要根据具体上下文进行调整。
