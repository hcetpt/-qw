PCI总线桥接器具有标准化的设备树绑定：

PCI 总线绑定至：IEEE 标准 1275-1994
https://www.devicetree.org/open-firmware/bindings/pci/pci2_1.pdf

对于中断映射部分：

开放固件推荐实践：中断映射
https://www.devicetree.org/open-firmware/practice/imap/imap0_9d.pdf

除了上述标准中规定的属性之外，主机桥接器驱动程序实现还可能支持以下属性：

- `linux,pci-domain`:
   如果存在，此属性为一个主机桥接器分配了一个固定的PCI域编号，否则将为该桥接器分配一个在启动间不稳定的唯一编号。
   必须要么完全不设置此属性，要么为系统中的所有主机桥接器设置此属性，否则可能会为不同主机桥接器后面的根总线分配潜在冲突的域编号。系统中每个主机桥接器的域编号必须是唯一的。
- `max-link-speed`:
   如果存在，此属性指定了链接能力的PCI代数。主机驱动程序可以添加此属性作为一种策略来避免对不受支持的链接速度执行不必要的操作，例如尝试对不受支持的链接速度进行训练等。对于第4代必须为 `'4'`，第3代为 `'3'`，第2代为 `'2'`，第1代为 `'1'`。任何其他值都是无效的。
- `reset-gpios`:
   如果存在，此属性指定了 PERST#（电源复位）GPIO。主机驱动程序可以解析GPIO并向端点应用基础复位。
- `supports-clkreq`:
   如果存在，此属性指定了从根端口到下游设备的CLKREQ信号路由的存在，主机桥接器驱动程序可以进行依赖于CLKREQ信号存在的编程。例如，如果不存在CLKREQ信号，则可以编程根端口使其不宣传ASPM L1子状态的支持。

### PCI-PCI 桥接器属性

PCIe根端口和交换机端口可以在设备树中明确描述，作为主机桥接器节点的子节点。尽管这些设备可以通过探测发现，但可能需要描述那些未由标准PCIe功能提供的属性。

**必需属性：**

- `reg`:
   用于识别PCI-PCI桥接器。根据IEEE 标准 1275-1994文档定义，它是一个五元地址编码为 `(phys.hi phys.mid phys.lo size.hi size.lo)`。`phys.hi` 应包含设备的BDF（总线设备功能号）作为 `0b00000000 bbbbbbbb dddddfff 00000000`。其他单元应为零。
   总线编号由固件通过标准桥接配置机制定义。如果此端口是一个交换机端口，那么固件会分配总线编号并将其写入此端口正上方的桥接器的次级总线编号寄存器中。否则，根端口的总线编号是 `bus-range` 属性中的第一个数字，默认为零。
   如果固件保持此端口上方桥接器中的ARI转发使能位被设置，那么 `phys.hi` 包含8位功能号作为 `0b00000000 bbbbbbbb ffffffff 00000000`。需要注意的是，PCIe规范建议固件仅在知道操作系统了解ARI时才保持ARI启用。

**可选属性：**

- `external-facing`:
   当存在时，表明该端口是面向外部的。从此端口向下的所有桥接器和终端设备都位于机器外部。操作系统可以利用此信息来识别不能信任以放宽DMA保护的设备，因为用户可以轻易地将恶意设备连接到此端口。
示例：

`pcie@10000000` {
	`compatible` = "pci-host-ecam-generic";
	..
`pcie@0008` {
		/* 根端口 00:01.0 是面向外部的 */
		`reg` = <0x00000800 0 0 0 0>;
		`external-facing`;
	};
};

这段代码是用设备树（Device Tree）语法编写的，用于描述硬件系统中PCI Express (PCIe) 设备的配置。以下是中文翻译：

在 `pcie@10000000` 节点下：
- `compatible` 属性被设置为 "pci-host-ecam-generic"。
- ...

在 `pcie@0008` 节点下：
- 注释说明根端口 00:01.0 是面向外部的（即该端口可以连接到外部设备）。
- `reg` 属性被设置为 `<0x00000800 0 0 0 0>`，这定义了PCIe设备的寄存器地址和大小等信息。
- `external-facing` 标记表示此端口面向外部。
