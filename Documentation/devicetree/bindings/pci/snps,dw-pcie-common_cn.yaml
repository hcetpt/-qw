# SPDX-许可证标识符: (GPL-2.0-only OR BSD-2-Clause)
%YAML 1.2
---
$id: http://devicetree.org/schemas/pci/snps,dw-pcie-common.yaml#
$schema: http://devicetree.org/meta-schemas/core.yaml#

title: Synopsys DWC PCIe 根端口和终端控制器

maintainers:
  - Jingoo Han <jingoohan1@gmail.com>
  - Gustavo Pimentel <gustavo.pimentel@synopsys.com>

description:
  通用的 Synopsys DesignWare PCIe 根端口和终端控制器属性
select: false

properties:
  reg:
    description:
      DWC PCIe 的 CSR 空间通常通过专用的数据总线接口（DBI）访问。根据参考手册，寄存器配置空间属于配置依赖模块（CDM），并被划分为几个子部分：标准 PCIe 配置空间、端口逻辑寄存器（PL）、影子配置空间寄存器、iATU/eDMA 寄存器等。特定的子空间由 CDM/ELBI (dbi_cs) 和 CS2 (dbi_cs2) 信号（选择位）选定。这种配置为系统工程师提供了灵活的接口，可以将特定的空间映射到所需的 MMIO 地址，或者如果选择了纯本机或 AXI 桥 DBI 访问，则可以将它们保留在连续的内存空间中。请注意，PCIe CFG 空间、PL 和影子寄存器对于每个激活的功能都是特定的，而其余的子空间对于所有功能来说是共用的（如果有多个的话）。
minItems: 2
    maxItems: 7

  reg-names:
    minItems: 2
    maxItems: 7

  interrupts:
    description:
      通常有两个主要的子模块能够生成中断。它们分别是系统信息接口和 MSI 接口。前者有一些主机和终端控制器通用的 IRQ 信号，而后者显然是根复合体特有的，因为它负责处理传入的 MSI 消息信号。系统信息 IRQ 信号主要用于报告通用的 PCIe 层次结构和根复合体事件，如 VPD IO 请求、一般 AER、PME、热插拔、链路带宽变化、链路均衡请求、INTx 断言/非断言消息检测、嵌入式 DMA 发送/接收/错误等。
minItems: 1
    maxItems: 26

  interrupt-names:
    minItems: 1
    maxItems: 26

  clocks:
    description:
      DWC PCIe 参考手册明确定义了一组时钟，这些时钟对于使控制器正常工作是必需的。总体上，它们可以分为两组：“应用”时钟和“核心”时钟。请注意，平台可能在某些情况下未指定时钟源，如果相应的域是从一个共同的时钟源供电的话。
minItems: 1
    maxItems: 7

  clock-names:
    minItems: 1
    maxItems: 7
    items:
      oneOf:
        - description:
            数据总线接口（DBI）时钟。配置依赖模块的 AXI 总线接口的时钟信号，该模块基本上是一组控制器 CSR。
const: dbi
        - description:
            应用 AXI 总线主接口时钟。这基本上是控制器 DMA 接口（PCI 到 CPU）的时钟。
const: mstr
        - description:
            应用 AXI 总线从接口时钟。这是 CPU 到 PCI 内存 I/O 接口的时钟。
const: slv
        - description:
            控制器核心-PCS PIPE 接口时钟。通常由外部 PCS-PHY 提供。
const: pipe
        - description:
            控制器主时钟。假设除了复位信号外，所有输入信号都与该时钟同步。
const: core
        - description:
            控制器 PMC 域的辅助时钟。控制器分区意味着在某些电源管理状态下，某些部分需要使用这个时钟运行。
const: aux_pmc
The provided text describes configuration options and specifications for a PCIe controller, focusing on clocks, resets, and PHY interfaces. Below is a translation of the key parts into Chinese:

### 常量: aux
- **描述**:
    通用参考时钟。如果有多个接口共享同一个时钟源，建议使用此名称进行定义（例如，pipe、core 和 aux 可以连接到同一个周期信号源）。

### 常量: ref
- **描述**:
    PHY寄存器接口的时钟。最初这是一个基于PHY视图的接口，但某些平台可能有专门设计的接口。

### 常量: phy_reg
- **描述**:
    厂商特定的时钟名称。对于新的绑定，请考虑使用上述通用名称。

### oneOf:
    - **描述**: 有关详细信息，请参阅本机'dbi'时钟。
      - 枚举: [ pcie, pcie_apb_sys, aclk_dbi ]
    - **描述**: 有关详细信息，请参阅本机'mstr/slv'时钟。
      - 枚举: [ pcie_bus, pcie_inbound_axi, pcie_aclk, aclk_mst, aclk_slv ]
    - **描述**: 有关详细信息，请参阅本机'pipe'时钟。
      - 枚举: [ pcie_phy, pcie_phy_ref, link ]
    - **描述**: 有关详细信息，请参阅本机'aux'时钟。
      - 枚举: [ pcie_aux ]
    - **描述**: 有关详细信息，请参阅本机'ref'时钟。
      - 枚举: [ gio ]
    - **描述**: 有关详细信息，请参阅本机'phy_reg'时钟。
      - 枚举: [ pcie_apb_phy, pclk ]

### 重置信号(resets):
    - **描述**:
        DWC PCIe参考手册明确定义了一组需要解除断言的重置信号，以便正确激活控制器的各个部分。所有这些信号可以分为两组：应用重置和核心重置，根据它们所要复位的主要子域划分。请注意，平台可能会有一些信号未指定，如果这些信号自动处理或聚合到一个综合控制模块中。

### 最小项目数(minItems): 1
    - 最大项目数(maxItems): 10

### 重置名称(reset-names):
    - 最小项目数(minItems): 1
    - 最大项目数(maxItems): 10
    - 项目(items):
        - **Data Bus Interface (DBI) 域重置**
          - 常量(const): dbi
        - **AXI-bus Master 接口重置**
          - 常量(const): mstr
        - **AXI-bus Slave 接口重置**
          - 常量(const): slv
        - **应用程序相关接口重置**
          - 常量(const): app
        - **控制器非粘性CSR标志重置**
          - 常量(const): non-sticky
        - **控制器粘性CSR标志重置**
          - 常量(const): sticky
        - **PIPE接口（Core-PCS）逻辑重置**
          - 常量(const): pipe
        - **控制器主重置（除了PMC模块以外的所有内容）**
          - 常量(const): core
        - **PCS/PHY块重置**
          - 常量(const): phy
        - **PMC热重置信号**
          - 常量(const): hot
        - **冷重置信号**
          - 常量(const): pwr
        - **厂商特定的重置名称**。对于新的绑定，请考虑使用上述通用名称。
        - 枚举(enum):
            - **描述**: 有关详细信息，请参阅本机'app'重置。
              - 枚举: [ apps, gio, apb ]
            - **描述**: 有关详细信息，请参阅本机'phy'重置。
              - 枚举: [ pciephy, link ]
            - **描述**: 有关详细信息，请参阅本机'pwr'重置。
              - 枚举: [ turnoff ]

### PHY接口(phys):
    - **描述**:
        可以指定与线路顺序对应的最多PHY数量的phandle数组。显然，每个指定的PHY都应该能够以DWC PCIe控制器所暗示的速度在PCIe模式下工作。
    - 最小项目数(minItems): 1
    - 最大项目数(maxItems): 16

### PHY名称(phy-names):
    - 最小项目数(minItems): 1
    - 最大项目数(maxItems): 16
    - **一个选项(oneOf)**:
        - **描述**: 通用PHY名称。
          - 项(items): 
            - 模式(pattern): '^pcie[0-9]+$'
        - **描述**: 厂商特定的PHY名称。对于新的绑定，请考虑使用上述通用名称。
          - 项(items):
            - 模式(pattern): '^pcie(-?phy[0-9]*)?$'
            - 模式(pattern): '^p2u-[0-7]$'

### 通过GPIO控制的重置(reset-gpio):
    - **已弃用(deprecated):** true
    - **描述**:
        引用通过GPIO控制的PERST#信号。用于重置PCIe总线上所有外围设备。
    - 最大项目数(maxItems): 1

### 通过GPIO控制的重置(reset-gpios):
    - **描述**:
        引用通过GPIO控制的PERST#信号。用于重置PCIe总线上所有外围设备。
下面是提供的配置项及其描述的中文翻译：

最大项目数: 1

最大链接速度:
    最大值: 5

PCIe通道数量:
    描述:
        要使用的PCIe链路通道的数量。如果打算保留已激活的链路，则可以省略此设置。
    最大值: 16

出站地址转换窗口数量:
    引用: /schemas/types.yaml#/definitions/uint32
    过时: true
    描述:
        出站地址转换窗口的数量。此参数可以根据iATU内存可写性自动检测，因此没有必要为此参数设置一个专门的数据表属性。
    最大值: 256

入站地址转换窗口数量:
    引用: /schemas/types.yaml#/definitions/uint32
    过时: true
    描述:
        入站地址转换窗口的数量。与出站地址转换窗口一样，此参数可以根据iATU内存可写性自动检测，因此也没有必要为此参数设置一个专门的数据表属性。
    最大值: 256

视口数量:
    引用: /schemas/types.yaml#/definitions/uint32
    过时: true
    描述:
        硬件中配置的出站视口数量。这与出站地址转换窗口的数量相同。
    最大值: 256

snps,启用CDM检查:
    引用: /schemas/types.yaml#/definitions/flag
    描述:
        启用对CDM（配置依赖模块）寄存器进行数据损坏的自动检查。CDM寄存器包括标准PCIe配置空间寄存器、端口逻辑寄存器、DMA和iATU寄存器。该功能自DWC PCIe v4.80a版本起可用。
    DMA一致性: true

额外属性: true

...
