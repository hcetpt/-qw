下面是给定 YAML 文档的中文翻译：

# SPDX 许可标识符: GPL-2.0
%YAML 1.2
---
$id: http://devicetree.org/schemas/display/allwinner,sun8i-r40-tcon-top.yaml#
$schema: http://devicetree.org/meta-schemas/core.yaml#

标题: Allwinner R40 TCON TOP

维护者:
  - 陈宇蔡 <wens@csie.org>
  - 马克西姆·里帕德 <mripard@kernel.org>

描述: |
  TCON TOP 的主要目的是配置整个显示管道。它
  确定了混合器与 TCON 之间的关系，选择 HDMI 的源
  TCON，复用 LCD 和 TV 编码器 GPIO 输出，选择 TV
  编码器时钟源，并包含额外的 TV TCON 和 DSI 门控。
  它允许以非常不同的方式配置显示管道：

                                  / LCD0/LVDS0
                   / [0] TCON-LCD0
                   |              \ MIPI DSI
   mixer0          |
          \        / [1] TCON-LCD1 - LCD1/LVDS1
           TCON-TOP
          /        \ [2] TCON-TV0 [0] - TVE0/RGB
   mixer1          |                  \
                   |                   TCON-TOP - HDMI
                   |                  /
                   \ [3] TCON-TV1 [1] - TVE1/RGB

  注意两个 TCON TOP 引用相同的物理单元。两个混合器
  可以连接到任意一个 TCON。并非所有 TCON TOP 变体都支持所有
  功能。
属性:
  "#clock-cells":
    常量: 1

  兼容性:
    枚举:
      - allwinner,sun8i-r40-tcon-top
      - allwinner,sun20i-d1-tcon-top
      - allwinner,sun50i-h6-tcon-top

  地址:
    最大项数: 1

  时钟:
    最小项数: 2
    最大项数: 6

  时钟名称:
    最小项数: 2
    最大项数: 6

  时钟输出名称:
    最小项数: 1
    最大项数: 3

  重置:
    最大项数: 1

  端口:
    $ref: /schemas/graph.yaml#/properties/ports

    属性:
      port@0:
        $ref: /schemas/graph.yaml#/properties/port
        描述: |
          混合器 0 复用器的输入端点
port@1:
        $ref: /schemas/graph.yaml#/properties/port
        描述: |
          混合器 0 复用器的输出端点

      port@2:
        $ref: /schemas/graph.yaml#/properties/port
        描述: |
          混合器 1 复用器的输入端点
port@3:
        $ref: /schemas/graph.yaml#/properties/port
        描述: |
          混合器 1 复用器的输出端点

      port@4:
        $ref: /schemas/graph.yaml#/properties/port
        描述: |
          HDMI 复用器的输入端点
port@5:
        $ref: /schemas/graph.yaml#/properties/port
        描述: |
          HDMI 复用器的输出端点

    必需:
      - port@0
      - port@1
      - port@4
      - port@5

必需:
  - "#clock-cells"
  - 兼容性
  - 地址
  - 时钟
  - 时钟名称
  - 时钟输出名称
  - 重置
  - 端口

其他属性: false

allOf:
  - 如果:
      属性:
        兼容性:
          包含:
            常量: allwinner,sun8i-r40-tcon-top

    则:
      属性:
        时钟:
          项:
            - 描述: TCON TOP 接口时钟
            - 描述: TCON TOP TV0 时钟
            - 描述: TCON TOP TVE0 时钟
            - 描述: TCON TOP TV1 时钟
            - 描述: TCON TOP TVE1 时钟
            - 描述: TCON TOP MIPI DSI 时钟

        时钟名称:
          项:
            - 常量: bus
            - 常量: tcon-tv0
            - 常量: tve0
            - 常量: tcon-tv1
            - 常量: tve1
            - 常量: dsi

        时钟输出名称:
          项:
            - 描述: TCON TV0 输出时钟名称
            - 描述: TCON TV1 输出时钟名称
            - 描述: DSI 输出时钟名称

        端口:
          必需:
            - port@2
            - port@3

  - 如果:
      属性:
        兼容性:
          包含:
            常量: allwinner,sun20i-d1-tcon-top

    则:
      属性:
        时钟:
          项:
            - 描述: TCON TOP 接口时钟
            - 描述: TCON TOP TV0 时钟
            - 描述: TCON TOP TVE0 时钟
            - 描述: TCON TOP MIPI DSI 时钟

        时钟名称:
          项:
            - 常量: bus
            - 常量: tcon-tv0
            - 常量: tve0
            - 常量: dsi

        时钟输出名称:
          项:
            - 描述: TCON TV0 输出时钟名称
            - 描述: DSI 输出时钟名称

  - 如果:
      属性:
        兼容性:
          包含:
            常量: allwinner,sun50i-h6-tcon-top

    则:
      属性:
        时钟:
          项:
            - 描述: TCON TOP 接口时钟
            - 描述: TCON TOP TV0 时钟

        时钟名称:
          项:
            - 常量: bus
            - 常量: tcon-tv0

        时钟输出名称:
          项:
            - 描述: TCON TV0 输出时钟名称

示例:
  - |
    #include <dt-bindings/interrupt-controller/arm-gic.h>

    #include <dt-bindings/clock/sun8i-r40-ccu.h>
    #include <dt-bindings/reset/sun8i-r40-ccu.h>

      tcon_top: tcon-top@1c70000 {
          兼容性 = "allwinner,sun8i-r40-tcon-top";
          地址 = <0x01c70000 0x1000>;
          时钟 = <&ccu CLK_BUS_TCON_TOP>,
                   <&ccu CLK_TCON_TV0>,
                   <&ccu CLK_TVE0>,
                   <&ccu CLK_TCON_TV1>,
                   <&ccu CLK_TVE1>,
                   <&ccu CLK_DSI_DPHY>;
          时钟名称 = "bus",
                        "tcon-tv0",
                        "tve0",
                        "tcon-tv1",
                        "tve1",
                        "dsi";
          时钟输出名称 = "tcon-top-tv0",
                               "tcon-top-tv1",
                               "tcon-top-dsi";
          重置 = <&ccu RST_BUS_TCON_TOP>;
          #clock-cells = <1>;

          端口 {
              #address-cells = <1>;
              #size-cells = <0>;

              tcon_top_mixer0_in: port@0 {
                  reg = <0>;

                  tcon_top_mixer0_in_mixer0: endpoint {
                      remote-endpoint = <&mixer0_out_tcon_top>;
                  };
              };

              tcon_top_mixer0_out: port@1 {
                  #address-cells = <1>;
                  #size-cells = <0>;
                  reg = <1>;

                  tcon_top_mixer0_out_tcon_lcd0: endpoint@0 {
                      reg = <0>;
                  };

                  tcon_top_mixer0_out_tcon_lcd1: endpoint@1 {
                      reg = <1>;
                  };

                  tcon_top_mixer0_out_tcon_tv0: endpoint@2 {
                      reg = <2>;
                      remote-endpoint = <&tcon_tv0_in_tcon_top_mixer0>;
                  };

                  tcon_top_mixer0_out_tcon_tv1: endpoint@3 {
                      reg = <3>;
                      remote-endpoint = <&tcon_tv1_in_tcon_top_mixer0>;
                  };
              };

              tcon_top_mixer1_in: port@2 {
                  #address-cells = <1>;
                  #size-cells = <0>;
                  reg = <2>;

                  tcon_top_mixer1_in_mixer1: endpoint@1 {
                      reg = <1>;
                      remote-endpoint = <&mixer1_out_tcon_top>;
                  };
              };

              tcon_top_mixer1_out: port@3 {
                  #address-cells = <1>;
                  #size-cells = <0>;
                  reg = <3>;

                  tcon_top_mixer1_out_tcon_lcd0: endpoint@0 {
                      reg = <0>;
                  };

                  tcon_top_mixer1_out_tcon_lcd1: endpoint@1 {
                      reg = <1>;
                  };

                  tcon_top_mixer1_out_tcon_tv0: endpoint@2 {
                      reg = <2>;
                      remote-endpoint = <&tcon_tv0_in_tcon_top_mixer1>;
                  };

                  tcon_top_mixer1_out_tcon_tv1: endpoint@3 {
                      reg = <3>;
                      remote-endpoint = <&tcon_tv1_in_tcon_top_mixer1>;
                  };
              };

              tcon_top_hdmi_in: port@4 {
                  #address-cells = <1>;
                  #size-cells = <0>;
                  reg = <4>;

                  tcon_top_hdmi_in_tcon_tv0: endpoint@0 {
                      reg = <0>;
                      remote-endpoint = <&tcon_tv0_out_tcon_top>;
                  };

                  tcon_top_hdmi_in_tcon_tv1: endpoint@1 {
                      reg = <1>;
                      remote-endpoint = <&tcon_tv1_out_tcon_top>;
                  };
              };

              tcon_top_hdmi_out: port@5 {
                  reg = <5>;

                  tcon_top_hdmi_out_hdmi: endpoint {
                      remote-endpoint = <&hdmi_in_tcon_top>;
                  };
              };
          };
      };
