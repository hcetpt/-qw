# SPDX-许可证标识符: GPL-2.0-only OR BSD-2-Clause
%YAML 1.2
---
$id: http://devicetree.org/schemas/display/rockchip/rockchip-vop2.yaml#
$schema: http://devicetree.org/meta-schemas/core.yaml#

title: Rockchip SoC 显示控制器 (VOP2)

description:
  VOP2（视频输出处理器v2）是Rockchip系列片上系统(SoC)的显示控制器，它将图像数据从视频内存缓冲区传输到外部LCD接口。
maintainers:
  - Sandy Huang <hjc@rock-chips.com>
  - Heiko Stuebner <heiko@sntech.de>

properties:
  compatible:
    enum:
      - rockchip,rk3566-vop
      - rockchip,rk3568-vop
      - rockchip,rk3588-vop

  reg:
    items:
      - description:
          必须包含一个条目，对应于寄存器空间的基本地址和长度
- description:
          可选地包含第二个条目，对应于CRTC伽玛查找表地址
reg-names:
    items:
      - const: vop
      - const: gamma-lut

  interrupts:
    maxItems: 1
    description:
      VOP中断被多个中断源共享，例如帧开始（VSYNC）、行标志和其他状态中断
# 请参阅下面特定兼容性的约束
clocks:
    minItems: 5
    items:
      - description: 用于通过AXI进行DDR缓冲区传输的时钟
- description: 用于读写寄存器的AHB总线时钟
- description: 视频端口0的像素时钟
- description: 视频端口1的像素时钟
- description: 视频端口2的像素时钟
这段文本定义了一个设备树节点，描述了Rockchip RK3588 SoC 中视频输出处理器 (VOP) 的配置。下面是翻译成中文的版本：

### 描述
- **Pixel clock for video port 3**: 视频端口 3 的像素时钟。
- **Peripheral (vop grf/dsi) clock**: VOP GRF/DSI 外设时钟。

### 时钟名称:
- **minItems**: 5
- **items**:
  - **const**: aclk
  - **const**: hclk
  - **const**: dclk_vp0
  - **const**: dclk_vp1
  - **const**: dclk_vp2
  - **const**: dclk_vp3
  - **const**: pclk_vop

### Rockchip,grf:
- **$ref**: 指向 `/schemas/types.yaml` 中定义的 phandle。
- **description**: 用于控制 DPI 的 dclk/hsync/vsync 极性的 GRF 寄存器的 phandle；同时也用于查询 VOP 内存 BISR 启用状态等。

### Rockchip,vo1-grf:
- **$ref**: 指向 `/schemas/types.yaml` 中定义的 phandle。
- **description**: 在 rk3588 上用于控制 HDMI 的 dclk/hsync/vsync 极性的 VO GRF 寄存器的 phandle。

### Rockchip,vop-grf:
- **$ref**: 指向 `/schemas/types.yaml` 中定义的 phandle。
- **description**: 用于控制 vopr 和 HDMI/EDP 之间的数据路径的 VOP GRF 寄存器的 phandle。

### Rockchip,pmu:
- **$ref**: 指向 `/schemas/types.yaml` 中定义的 phandle。
- **description**: 用于查询 rk3588 上 VOP 内存 BISR 状态的 PMU GRF 的 phandle。

### 端口:
- **$ref**: 指向 `/schemas/graph.yaml` 中定义的端口属性。

- **patternProperties**:
  - **"^port@[0-3]$"**:
    - **$ref**: 指向 `/schemas/graph.yaml` 中定义的端口属性。
    - **description**: VP0/1/2/3 的输出端点。

### 必需项:
- **- port@0**

- **unevaluatedProperties**: false

### IOMMU:
- **maxItems**: 1

### 电源域:
- **maxItems**: 1

### 必须包含:
- **compatible**
- **reg**
- **reg-names**
- **interrupts**
- **clocks**
- **clock-names**
- **ports**

### 所有必需项:
- **if**:
  - **properties**:
    - **compatible**:
      - **contains**:
        - **const**: rockchip,rk3588-vop
- **then**:
  - **properties**:
    - **clocks**:
      - **minItems**: 7
    - **clock-names**:
      - **minItems**: 7

    - **ports**:
      - **required**:
        - **port@0**
        - **port@1**
        - **port@2**
        - **port@3**

  - **required**:
    - **rockchip,grf**
    - **rockchip,vo1-grf**
    - **rockchip,vop-grf**
    - **rockchip,pmu**

- **else**:
  - **properties**:
    - **rockchip,vo1-grf**: false
    - **rockchip,vop-grf**: false
    - **rockchip,pmu**: false

    - **clocks**:
      - **maxItems**: 5
    - **clock-names**:
      - **maxItems**: 5

    - **ports**:
      - **required**:
        - **port@0**
        - **port@1**
        - **port@2**

### 其他属性: false

### 示例:
```yaml
#include <dt-bindings/clock/rk3568-cru.h>
#include <dt-bindings/interrupt-controller/arm-gic.h>
#include <dt-bindings/power/rk3568-power.h>
bus {
    #address-cells = <2>;
    #size-cells = <2>;
    vop: vop@fe040000 {
        compatible = "rockchip,rk3568-vop";
        reg = <0x0 0xfe040000 0x0 0x3000>, <0x0 0xfe044000 0x0 0x1000>;
        reg-names = "vop", "gamma-lut";
        interrupts = <GIC_SPI 148 IRQ_TYPE_LEVEL_HIGH>;
        clocks = <&cru ACLK_VOP>,
                 <&cru HCLK_VOP>,
                 <&cru DCLK_VOP0>,
                 <&cru DCLK_VOP1>,
                 <&cru DCLK_VOP2>;
        clock-names = "aclk",
                      "hclk",
                      "dclk_vp0",
                      "dclk_vp1",
                      "dclk_vp2";
        power-domains = <&power RK3568_PD_VO>;
        iommus = <&vop_mmu>;
        vop_out: ports {
            #address-cells = <1>;
            #size-cells = <0>;
            vp0: port@0 {
                reg = <0>;
                #address-cells = <1>;
                #size-cells = <0>;
            };
            vp1: port@1 {
                reg = <1>;
                #address-cells = <1>;
                #size-cells = <0>;
            };
            vp2: port@2 {
                reg = <2>;
                #address-cells = <1>;
                #size-cells = <0>;
            };
        };
    };
};
```
这个示例展示了如何在设备树中配置一个 Rockchip RK3568 的 VOP 模块。
