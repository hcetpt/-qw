### Rockchip RK3399 CDN DisplayPort 的特定扩展

#### 必需的属性：
- `compatible`：必须为 `"rockchip,rk3399-cdn-dp"`。
- `reg`：控制器的物理基地址及其长度。
- `clocks`：根据通用时钟绑定：指向DP时钟的句柄。
- `clock-names`：根据通用时钟绑定：
       必需元素：`"core-clk"` `"pclk"` `"spdif"` `"grf"`。
- `resets`：重置列表，包含句柄和重置规范符对。
- `reset-names`：重置名称字符串。
       必需元素：`"apb"`, `"core"`, `"dptx"`, `"spdif"`。
- `power-domains`：通过指向相应电源域的句柄定义的电源域属性。
- `assigned-clocks`：主时钟，应为 `<&cru SCLK_DP_CORE>`。
- `assigned-clock-rates`：DP核心时钟频率，应为：100000000。
- `rockchip,grf`：此SoC需要设置GRF寄存器，因此需要在此处获取grf。
- `ports`：包含端口节点，其中包含如Documentation/devicetree/bindings/media/video-interfaces.txt中所定义的端点定义。包含两个端点，连接到VOP输出。
- `phys`：根据通用PHY绑定：PHY设备的句柄。
- `extcon`：用于Power Delivery的extcon规范符。
- `#sound-dai-cells`：如果系统使用2个DAI（I2S、SPDIF），则必须为1。

### 示例：

```dt
cdn_dp: dp@fec00000 {
	compatible = "rockchip,rk3399-cdn-dp";
	reg = <0x0 0xfec00000 0x0 0x100000>; // 控制器的基地址和长度
	interrupts = <GIC_SPI 9 IRQ_TYPE_LEVEL_HIGH>; // 中断配置
	clocks = <&cru SCLK_DP_CORE>, <&cru PCLK_DP_CTRL>, // 时钟配置
			 <&cru SCLK_SPDIF_REC_DPTX>, <&cru PCLK_VIO_GRF>;
	clock-names = "core-clk", "pclk", "spdif", "grf"; // 时钟名称
	assigned-clocks = <&cru SCLK_DP_CORE>; // 分配的时钟
	assigned-clock-rates = <100000000>; // DP核心时钟频率
	power-domains = <&power RK3399_PD_HDCP>; // 电源域
	phys = <&tcphy0_dp>, <&tcphy1_dp>; // PHY设备
	resets = <&cru SRST_DPTX_SPDIF_REC>; // 重置配置
	reset-names = "spdif"; // 重置名称
	extcon = <&fusb0>, <&fusb1>; // extcon配置
	rockchip,grf = <&grf>; // GRF配置
	#address-cells = <1>; // 地址单元
	#size-cells = <0>; // 大小单元
	#sound-dai-cells = <1>; // 声音DAI单元数

	ports { // 端口定义
		#address-cells = <1>;
		#size-cells = <0>;

		dp_in: port { // 显示端口
			#address-cells = <1>;
			#size-cells = <0>;
			dp_in_vopb: endpoint@0 { // VOPB输入端点
				reg = <0>;
				remote-endpoint = <&vopb_out_dp>; // 连接到VOPB输出
			};

			dp_in_vopl: endpoint@1 { // VOPL输入端点
				reg = <1>;
				remote-endpoint = <&vopl_out_dp>; // 连接到VOPL输出
			};
		};
	};
};
```

这个示例展示了如何在Device Tree中定义一个Rockchip RK3399 CDN DisplayPort的配置，包括必要的属性和示例值。
