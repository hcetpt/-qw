下面是给定内容的中文翻译：

# SPDX-许可证标识符: (GPL-2.0-only 或 BSD-2-Clause)
%YAML 1.2
---
$id: http://devicetree.org/schemas/display/st,stm32mp25-lvds.yaml#
$schema: http://devicetree.org/meta-schemas/core.yaml#

标题: STMicroelectronics STM32 LVDS 显示接口发射器

维护者:
  - Raphael Gallais-Pou <raphael.gallais-pou@foss.st.com>
  - Yannick Fertre <yannick.fertre@foss.st.com>

描述: |
  STMicroelectronics STM32 LVDS 显示接口发射器处理 LVDS 协议：它将从上游像素DMA（LTDC）接收的像素映射到 LVDS PHY 上。
  它由三个子模块组成：
    - LVDS 主机：处理 LVDS 协议（FPD / OpenLDI），并将其输入像素映射到 PHY 的数据通道上
    - LVDS PHY：并行化数据，并驱动 LVDS 数据通道
    - LVDS 包装器：处理顶层设置

  LVDS 控制器驱动支持以下高级特性：
    - 支持 FDP-Link-I 和 OpenLDI (v0.95) 协议
    - 单链路或双链路操作
    - 单显示器或双显示器（在两个显示器上复制相同的内容）
    - 灵活的位图映射，包括 JEIDA 和 VESA
    - RGB888 或 RGB666 输出
    - 同步设计，每个时钟周期一个输入像素

属性:
  compatible:
    常量: st,stm32mp25-lvds

  "#clock-cells":
    常量: 0
    描述:
      向框架提供内部 LVDS PHY 时钟

  reg:
    最大项数: 1

  clocks:
    项:
      - 描述: APB 外设时钟
      - 描述: 内部 PLL 的参考时钟

  clock-names:
    项:
      - 常量: pclk
      - 常量: ref

  resets:
    最大项数: 1

  ports:
    $ref: /schemas/graph.yaml#/properties/ports

    属性:
      port@0:
        $ref: /schemas/graph.yaml#/properties/port
        描述:
          LVDS 输入端口节点，连接到 LTDC RGB 输出端口
      port@1:
        $ref: /schemas/graph.yaml#/properties/port
        描述:
          LVDS 输出端口节点，连接到面板或桥接器输入端口

所需项:
  - port@0
  - port@1

所需项:
  - compatible
  - "#clock-cells"
  - reg
  - clocks
  - clock-names
  - resets
  - ports

附加属性: false

示例:
  - |
    #include <dt-bindings/clock/st,stm32mp25-rcc.h>
    #include <dt-bindings/reset/st,stm32mp25-rcc.h>

    lvds: lvds@48060000 {
        compatible = "st,stm32mp25-lvds";
        reg = <0x48060000 0x2000>;
        #clock-cells = <0>;
        clocks = <&rcc CK_BUS_LVDS>, <&rcc CK_KER_LVDSPHY>;
        clock-names = "pclk", "ref";
        resets = <&rcc LVDS_R>;

        ports {
            #address-cells = <1>;
            #size-cells = <0>;

            port@0 {
                reg = <0>;
                lvds_in: endpoint {
                   remote-endpoint = <&ltdc_ep1_out>;
                };
            };

            port@1 {
                reg = <1>;
                lvds_out0: endpoint {
                   remote-endpoint = <&lvds_panel_in>;
                };
            };
        };
    };

..
