# SPDX-许可证标识符: GPL-2.0-only 或 BSD-2-Clause
%YAML 1.2
---
$id: http://devicetree.org/schemas/display/msm/qcom,sc8280xp-dpu.yaml#
$schema: http://devicetree.org/meta-schemas/core.yaml#

标题: Qualcomm SC8280XP 显示处理单元

维护者:
  - Bjorn Andersson <andersson@kernel.org>

描述:
  SC8280XP 显示处理单元的设备树绑定
$ref: /schemas/display/msm/dpu-common.yaml#

属性:
  compatible:
    常量: qcom,sc8280xp-dpu

  reg:
    项目:
      - 描述: MDP 寄存器集的地址偏移和大小
      - 描述: VBIF 寄存器集的地址偏移和大小

  reg-names:
    项目:
      - 常量: mdp
      - 常量: vbif

  clocks:
    项目:
      - 描述: 显示高频 AXI 时钟
      - 描述: 显示低频 AXI 时钟
      - 描述: 显示 AHB 时钟
      - 描述: 显示 LUT 时钟
      - 描述: 显示核心时钟
      - 描述: 显示 VSYNC 时钟

  clock-names:
    项目:
      - 常量: bus
      - 常量: nrt_bus
      - 常量: iface
      - 常量: lut
      - 常量: core
      - 常量: vsync

未评估属性: false

示例:
  - |
    #include <dt-bindings/clock/qcom,dispcc-sc8280xp.h>
    #include <dt-bindings/clock/qcom,gcc-sc8280xp.h>
    #include <dt-bindings/interrupt-controller/arm-gic.h>
    #include <dt-bindings/interconnect/qcom,sc8280xp.h>
    #include <dt-bindings/power/qcom-rpmpd.h>

    display-controller@ae01000 {
        compatible = "qcom,sc8280xp-dpu";
        reg = <0x0ae01000 0x8f000>,
              <0x0aeb0000 0x2008>;
        reg-names = "mdp", "vbif";

        clocks = <&gcc GCC_DISP_HF_AXI_CLK>,
                 <&gcc GCC_DISP_SF_AXI_CLK>,
                 <&dispcc0 DISP_CC_MDSS_AHB_CLK>,
                 <&dispcc0 DISP_CC_MDSS_MDP_LUT_CLK>,
                 <&dispcc0 DISP_CC_MDSS_MDP_CLK>,
                 <&dispcc0 DISP_CC_MDSS_VSYNC_CLK>;
        clock-names = "bus",
                      "nrt_bus",
                      "iface",
                      "lut",
                      "core",
                      "vsync";

        assigned-clocks = <&dispcc0 DISP_CC_MDSS_MDP_CLK>,
                          <&dispcc0 DISP_CC_MDSS_VSYNC_CLK>;
        assigned-clock-rates = <460000000>,
                               <19200000>;

        operating-points-v2 = <&mdp_opp_table>;
        power-domains = <&rpmhpd SC8280XP_MMCX>;

        interrupt-parent = <&mdss0>;
        interrupts = <0>;

        ports {
            #address-cells = <1>;
            #size-cells = <0>;

            port@0 {
                reg = <0>;
                endpoint {
                    remote-endpoint = <&mdss0_dp0_in>;
                };
            };

            port@4 {
                reg = <4>;
                endpoint {
                    remote-endpoint = <&mdss0_dp1_in>;
                };
            };

            port@5 {
                reg = <5>;
                endpoint {
                    remote-endpoint = <&mdss0_dp3_in>;
                };
            };

            port@6 {
                reg = <6>;
                endpoint {
                    remote-endpoint = <&mdss0_dp2_in>;
                };
            };
        };
    };
..
