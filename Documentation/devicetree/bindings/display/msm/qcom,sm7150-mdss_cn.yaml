下面是给定的 Device Tree Blob (DTB) 示例的中文翻译：

```yaml
# SPDX 许可标识符: GPL-2.0-only 或 BSD-2-Clause
%YAML 1.2
---
$id: http://devicetree.org/schemas/display/msm/qcom,sm7150-mdss.yaml#
$schema: http://devicetree.org/meta-schemas/core.yaml#

标题: 高通 SM7150 显示子系统 MDSS

维护者:
  - 丹尼拉·季霍诺夫 <danila@jiaxyga.com>

描述:
  SM7150 MSM 移动显示子系统（MDSS），它封装了诸如 DPU 显示控制器、DSI 和 DP 接口等子模块。
$ref: /schemas/display/msm/mdss-common.yaml#

属性:
  compatible:
    常量: qcom,sm7150-mdss

  clocks:
    项目:
      - 描述: 来自 GCC 的显示 AHB 时钟
      - 描述: 显示 HF AXI 时钟
      - 描述: 显示 SF AXI 时钟
      - 描述: 显示核心时钟

  clock-names:
    项目:
      - 常量: iface
      - 常量: bus
      - 常量: nrt_bus
      - 常量: core

  iommus:
    最大项目数: 1

  interconnects:
    项目:
      - 描述: 从 MDP0 端口到数据总线的互连路径
      - 描述: 从 MDP1 端口到数据总线的互连路径
      - 描述: 从 CPU 到配置总线的互连路径

  interconnect-names:
    项目:
      - 常量: mdp0-mem
      - 常量: mdp1-mem
      - 常量: cpu-cfg

模式属性:
  "^display-controller@[0-9a-f]+$":
    类型: 对象
    其他属性: true
    属性:
      compatible:
        常量: qcom,sm7150-dpu

  "^displayport-controller@[0-9a-f]+$":
    类型: 对象
    其他属性: true
    属性:
      compatible:
        常量: qcom,sm7150-dp

  "^dsi@[0-9a-f]+$":
    类型: 对象
    其他属性: true
    属性:
      compatible:
        项目:
          - 常量: qcom,sm7150-dsi-ctrl
          - 常量: qcom,mdss-dsi-ctrl

  "^phy@[0-9a-f]+$":
    类型: 对象
    其他属性: true
    属性:
      compatible:
        常量: qcom,dsi-phy-10nm

必需项:
  - compatible

未评估属性: false

示例:
  - |
    #include <dt-bindings/clock/qcom,rpmh.h>
    #include <dt-bindings/interconnect/qcom,icc.h>
    #include <dt-bindings/interconnect/qcom,sm7150-rpmh.h>
    #include <dt-bindings/interrupt-controller/arm-gic.h>
    #include <dt-bindings/power/qcom,rpmhpd.h>

    display-subsystem@ae00000 {
        compatible = "qcom,sm7150-mdss";
        reg = <0x0ae00000 0x1000>;
        reg-names = "mdss";

        power-domains = <&dispcc_mdss_gdsc>;

        clocks = <&dispcc_mdss_ahb_clk>,
                 <&gcc_disp_hf_axi_clk>,
                 <&gcc_disp_sf_axi_clk>,
                 <&dispcc_mdss_mdp_clk>;
        clock-names = "iface",
                      "bus",
                      "nrt_bus",
                      "core";

        interrupts = <GIC_SPI 83 IRQ_TYPE_LEVEL_HIGH>;
        interrupt-controller;
        #interrupt-cells = <1>;

        interconnects = <&mmss_noc MASTER_MDP_PORT0 QCOM_ICC_TAG_ALWAYS
                         &mc_virt SLAVE_EBI_CH0 QCOM_ICC_TAG_ALWAYS>,
                        <&mmss_noc MASTER_MDP_PORT1 QCOM_ICC_TAG_ALWAYS
                         &mc_virt SLAVE_EBI_CH0 QCOM_ICC_TAG_ALWAYS>,
                        <&gem_noc MASTER_AMPSS_M0 QCOM_ICC_TAG_ACTIVE_ONLY
                         &config_noc SLAVE_DISPLAY_CFG QCOM_ICC_TAG_ACTIVE_ONLY>;
        interconnect-names = "mdp0-mem",
                             "mdp1-mem",
                             "cpu-cfg";

        iommus = <&apps_smmu 0x800 0x440>;

        #address-cells = <1>;
        #size-cells = <1>;
        ranges;

        display-controller@ae01000 {
            compatible = "qcom,sm7150-dpu";
            reg = <0x0ae01000 0x8f000>,
                  <0x0aeb0000 0x2008>;
            reg-names = "mdp", "vbif";

            clocks = <&gcc_disp_hf_axi_clk>,
                     <&dispcc_mdss_ahb_clk>,
                     <&dispcc_mdss_rot_clk>,
                     <&dispcc_mdss_mdp_lut_clk>,
                     <&dispcc_mdss_mdp_clk>,
                     <&dispcc_mdss_vsync_clk>;
            clock-names = "bus",
                          "iface",
                          "rot",
                          "lut",
                          "core",
                          "vsync";

            assigned-clocks = <&dispcc_mdss_vsync_clk>;
            assigned-clock-rates = <19200000>;

            operating-points-v2 = <&mdp_opp_table>;
            power-domains = <&rpmhpd RPMHPD_CX>;

            interrupt-parent = <&mdss>;
            interrupts = <0>;

            ports {
                #address-cells = <1>;
                #size-cells = <0>;

                port@0 {
                    reg = <0>;
                    dpu_intf1_out: endpoint {
                        remote-endpoint = <&mdss_dsi0_in>;
                    };
                };

                port@1 {
                    reg = <1>;
                    dpu_intf2_out: endpoint {
                        remote-endpoint = <&mdss_dsi1_in>;
                    };
                };

                port@2 {
                    reg = <2>;
                    dpu_intf0_out: endpoint {
                        remote-endpoint = <&dp_in>;
                    };
                };
            };

            mdp_opp_table: opp-table {
                compatible = "operating-points-v2";

                opp-19200000 {
                    opp-hz = /bits/ 64 <19200000>;
                    required-opps = <&rpmhpd_opp_min_svs>;
                };

                opp-200000000 {
                    opp-hz = /bits/ 64 <200000000>;
                    required-opps = <&rpmhpd_opp_low_svs>;
                };

                opp-300000000 {
                    opp-hz = /bits/ 64 <300000000>;
                    required-opps = <&rpmhpd_opp_svs>;
                };

                opp-344000000 {
                    opp-hz = /bits/ 64 <344000000>;
                    required-opps = <&rpmhpd_opp_svs_l1>;
                };

                opp-430000000 {
                    opp-hz = /bits/ 64 <430000000>;
                    required-opps = <&rpmhpd_opp_nom>;
                };
            };
        };

        ... (其余部分省略)
    };
```

请注意，上面的翻译仅针对示例中的 Device Tree Blob 部分进行了翻译。完整的 DTB 文件包含更多细节和配置信息。
