# SPDX-文件许可人: (GPL-2.0-only 或 BSD-2-Clause)
%YAML 1.2
---
$id: http://devicetree.org/schemas/display/mediatek/mediatek,ethdr.yaml#
$schema: http://devicetree.org/meta-schemas/core.yaml#

标题: MediaTek Ethdr 设备

维护者:
  - 春光 胡 <chunkuang.hu@kernel.org>
  - Philipp Zabel <p.zabel@pengutronix.de>

描述:
  ETHDR（ET 高动态范围）是 MediaTek 内置的 HDR 引擎，专为外部显示路径中的 HDR 视频和图形转换设计。
  它处理多种 HDR 输入类型，并执行色调映射、色彩空间/色彩格式转换，然后组合不同的图层，
  将所需的 HDR 或 SDR 信号输出到后续显示路径。
  此引擎由两个视频前端、两个图形前端、一个视频后端和一个混合器组成。ETHDR 包含两个 DMA 功能块：DS 和 ADL。
  这两个功能块在垂直消隐期间从 DRAM 读取预先编程的寄存器并将其设置到硬件中。

属性:
  compatible:
    oneOf:
      - 常量: mediatek,mt8195-disp-ethdr
      - items:
          - 常量: mediatek,mt8188-disp-ethdr
          - 常量: mediatek,mt8195-disp-ethdr

  reg:
    maxItems: 7

  reg-names:
    items:
      - 常量: mixer
      - 常量: vdo_fe0
      - 常量: vdo_fe1
      - 常量: gfx_fe0
      - 常量: gfx_fe1
      - 常量: vdo_be
      - 常量: adl_ds

  interrupts:
    maxItems: 1

  iommus:
    minItems: 1
    maxItems: 2

  clocks:
    items:
      - 描述: 混合器时钟
      - 描述: 视频前端 0 时钟
      - 描述: 视频前端 1 时钟
      - 描述: 图形前端 0 时钟
      - 描述: 图形前端 1 时钟
      - 描述: 视频后端时钟
      - 描述: 自动下载和菜单加载时钟
      - 描述: 视频前端 0 异步时钟
      - 描述: 视频前端 1 异步时钟
      - 描述: 图形前端 0 异步时钟
      - 描述: 图形前端 1 异步时钟
      - 描述: 视频后端异步时钟
      - 描述: ethdr 顶层时钟

  clock-names:
    items:
      - 常量: mixer
      - 常量: vdo_fe0
      - 常量: vdo_fe1
      - 常量: gfx_fe0
      - 常量: gfx_fe1
      - 常量: vdo_be
      - 常量: adl_ds
      - 常量: vdo_fe0_async
      - 常量: vdo_fe1_async
      - 常量: gfx_fe0_async
      - 常量: gfx_fe1_async
      - 常量: vdo_be_async
      - 常量: ethdr_top

  power-domains:
    maxItems: 1

  resets:
    items:
      - 描述: 视频前端 0 异步复位
      - 描述: 视频前端 1 异步复位
      - 描述: 图形前端 0 异步复位
      - 描述: 图形前端 1 异步复位
      - 描述: 视频后端异步复位

  reset-names:
    items:
      - 常量: vdo_fe0_async
      - 常量: vdo_fe1_async
      - 常量: gfx_fe0_async
      - 常量: gfx_fe1_async
      - 常量: vdo_be_async

  mediatek,gce-client-reg:
    $ref: /schemas/types.yaml#/definitions/phandle-array
    minItems: 1
    maxItems: 7
    描述: 由 gce 设置的显示功能模块的寄存器
    此属性中有 4 个参数：gce 节点、子系统 ID、偏移量和寄存器大小。子系统 ID 在每个芯片的 gce 头文件中定义
    include/dt-bindings/gce/<chip>-gce.h，映射到显示功能模块的寄存器

必需:
  - compatible
  - reg
  - clocks
  - clock-names
  - interrupts
  - power-domains
  - resets
  - mediatek,gce-client-reg

额外属性: false

示例:
  - |
    #include <dt-bindings/interrupt-controller/arm-gic.h>
    #include <dt-bindings/clock/mt8195-clk.h>
    #include <dt-bindings/gce/mt8195-gce.h>
    #include <dt-bindings/memory/mt8195-memory-port.h>
    #include <dt-bindings/power/mt8195-power.h>
    #include <dt-bindings/reset/mt8195-resets.h>

    soc {
        #address-cells = <2>;
        #size-cells = <2>;

        hdr-engine@1c114000 {
                compatible = "mediatek,mt8195-disp-ethdr";
                reg = <0 0x1c114000 0 0x1000>,
                      <0 0x1c115000 0 0x1000>,
                      <0 0x1c117000 0 0x1000>,
                      <0 0x1c119000 0 0x1000>,
                      <0 0x1c11a000 0 0x1000>,
                      <0 0x1c11b000 0 0x1000>,
                      <0 0x1c11c000 0 0x1000>;
                reg-names = "mixer", "vdo_fe0", "vdo_fe1", "gfx_fe0", "gfx_fe1",
                            "vdo_be", "adl_ds";
                mediatek,gce-client-reg = <&gce0 SUBSYS_1c11XXXX 0x4000 0x1000>,
                                          <&gce0 SUBSYS_1c11XXXX 0x5000 0x1000>,
                                          <&gce0 SUBSYS_1c11XXXX 0x7000 0x1000>,
                                          <&gce0 SUBSYS_1c11XXXX 0x9000 0x1000>,
                                          <&gce0 SUBSYS_1c11XXXX 0xa000 0x1000>,
                                          <&gce0 SUBSYS_1c11XXXX 0xb000 0x1000>,
                                          <&gce0 SUBSYS_1c11XXXX 0xc000 0x1000>;
                clocks = <&vdosys1 CLK_VDO1_DISP_MIXER>,
                         <&vdosys1 CLK_VDO1_HDR_VDO_FE0>,
                         <&vdosys1 CLK_VDO1_HDR_VDO_FE1>,
                         <&vdosys1 CLK_VDO1_HDR_GFX_FE0>,
                         <&vdosys1 CLK_VDO1_HDR_GFX_FE1>,
                         <&vdosys1 CLK_VDO1_HDR_VDO_BE>,
                         <&vdosys1 CLK_VDO1_26M_SLOW>,
                         <&vdosys1 CLK_VDO1_HDR_VDO_FE0_DL_ASYNC>,
                         <&vdosys1 CLK_VDO1_HDR_VDO_FE1_DL_ASYNC>,
                         <&vdosys1 CLK_VDO1_HDR_GFX_FE0_DL_ASYNC>,
                         <&vdosys1 CLK_VDO1_HDR_GFX_FE1_DL_ASYNC>,
                         <&vdosys1 CLK_VDO1_HDR_VDO_BE_DL_ASYNC>,
                         <&topckgen CLK_TOP_ETHDR>;
                clock-names = "mixer", "vdo_fe0", "vdo_fe1", "gfx_fe0", "gfx_fe1",
                              "vdo_be", "adl_ds", "vdo_fe0_async", "vdo_fe1_async",
                              "gfx_fe0_async", "gfx_fe1_async","vdo_be_async",
                              "ethdr_top";
                power-domains = <&spm MT8195_POWER_DOMAIN_VDOSYS1>;
                iommus = <&iommu_vpp M4U_PORT_L3_HDR_DS>,
                         <&iommu_vpp M4U_PORT_L3_HDR_ADL>;
                interrupts = <GIC_SPI 517 IRQ_TYPE_LEVEL_HIGH 0>; /* disp mixer */
                resets = <&vdosys1 MT8195_VDOSYS1_SW1_RST_B_HDR_VDO_FE0_DL_ASYNC>,
                         <&vdosys1 MT8195_VDOSYS1_SW1_RST_B_HDR_VDO_FE1_DL_ASYNC>,
                         <&vdosys1 MT8195_VDOSYS1_SW1_RST_B_HDR_GFX_FE0_DL_ASYNC>,
                         <&vdosys1 MT8195_VDOSYS1_SW1_RST_B_HDR_GFX_FE1_DL_ASYNC>,
                         <&vdosys1 MT8195_VDOSYS1_SW1_RST_B_HDR_VDO_BE_DL_ASYNC>;
                reset-names = "vdo_fe0_async", "vdo_fe1_async", "gfx_fe0_async",
                              "gfx_fe1_async", "vdo_be_async";
        };
    };
..
