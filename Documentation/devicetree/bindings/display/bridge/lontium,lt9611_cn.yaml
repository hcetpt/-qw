下面是给定内容的中文翻译：

# SPDX-许可证标识符: (GPL-2.0-only 或 BSD-2-Clause)
%YAML 1.2
---
$id: http://devicetree.org/schemas/display/bridge/lontium,lt9611.yaml#
$schema: http://devicetree.org/meta-schemas/core.yaml#

标题: Lontium LT9611(UXC) 2端口MIPI到HDMI桥接器

维护者:
  - Vinod Koul <vkoul@kernel.org>

描述: |
  LT9611 和 LT9611UXC 是桥接设备，用于将DSI转换为HDMI。

属性:
  compatible:
    枚举:
      - lontium,lt9611
      - lontium,lt9611uxc

  reg:
    最大项目数: 1

  "#sound-dai-cells":
    常量: 1

  interrupts:
    最大项目数: 1

  reset-gpios:
    最大项目数: 1
    描述: 连接到激活高电平的RESET引脚的GPIO

vdd-supply:
    描述: 1.8V MIPI PHY电源的稳压器
vcc-supply:
    描述: 3.3V I/O电源的稳压器
ports:
    $ref: /schemas/graph.yaml#/properties/ports

    属性:
      port@0:
        $ref: /schemas/graph.yaml#/properties/port
        描述:
          主MIPI端口1，用于MIPI输入

      port@1:
        $ref: /schemas/graph.yaml#/properties/port
        描述:
          额外的MIPI端口2，用于MIPI输入，在与主MIPI端口1结合使用时驱动更高分辨率的显示器

      port@2:
        $ref: /schemas/graph.yaml#/properties/port
        描述:
          HDMI端口，用于HDMI输出

    必需:
      - port@0
      - port@2

必需:
  - compatible
  - reg
  - interrupts
  - vdd-supply
  - vcc-supply
  - ports

额外属性: false

示例:
  - |
    #include <dt-bindings/gpio/gpio.h>
    #include <dt-bindings/interrupt-controller/irq.h>

    i2c10 {
      #address-cells = <1>;
      #size-cells = <0>;

      hdmi-bridge@3b {
        compatible = "lontium,lt9611";
        reg = <0x3b>;

        reset-gpios = <&tlmm 128 GPIO_ACTIVE_HIGH>;
        interrupts-extended = <&tlmm 84 IRQ_TYPE_EDGE_FALLING>;

        vdd-supply = <&lt9611_1v8>;
        vcc-supply = <&lt9611_3v3>;

        ports {
          #address-cells = <1>;
          #size-cells = <0>;

          port@0 {
            reg = <0>;
            lt9611_a: endpoint {
              remote-endpoint = <&dsi0_out>;
            };
          };

          port@1 {
            reg = <1>;
            lt9611_b: endpoint {
              remote-endpoint = <&dsi1_out>;
            };
          };

          port@2 {
            reg = <2>;
            lt9611_out: endpoint {
              remote-endpoint = <&hdmi_con>;
            };
          };
        };
      };
    };

..
