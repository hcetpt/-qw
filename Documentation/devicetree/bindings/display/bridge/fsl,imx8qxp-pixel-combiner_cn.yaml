下面是给定内容的中文翻译：

```yaml
# SPDX-文件许可标识: (GPL-2.0-only 或 BSD-2-Clause)
%YAML 1.2
---
$id: http://devicetree.org/schemas/display/bridge/fsl,imx8qxp-pixel-combiner.yaml#
$schema: http://devicetree.org/meta-schemas/core.yaml#

标题: Freescale i.MX8qm/qxp 像素组合器

维护者:
  - Liu Ying <victor.liu@nxp.com>

描述: |
  Freescale i.MX8qm/qxp 像素组合器从单个显示控制器接收两个输出流，并对这两个流进行操作以支持多种模式（旁路、像素组合、YUV444转YUV422、分立RGB），这些模式可以配置为一个屏幕、两个屏幕或虚拟屏幕。像素组合器还负责生成像素链路输出通道的一些控制信号。

属性:
  compatible:
    枚举:
      - fsl,imx8qm-pixel-combiner
      - fsl,imx8qxp-pixel-combiner

  "#address-cells":
    常量: 1

  "#size-cells":
    常量: 0

  reg:
    最大项数: 1

  clocks:
    最大项数: 1

  clock-names:
    常量: apb

  power-domains:
    最大项数: 1

模式属性:
  "^channel@[0-1]$":
    类型: 对象
    描述: 表示像素组合器的一个显示流
属性:
      "#address-cells":
        常量: 1

      "#size-cells":
        常量: 0

      reg:
        描述: 显示流索引
枚举: [ 0, 1 ]

      port@0:
        $ref: /schemas/graph.yaml#/properties/port
        描述: 显示流的输入端点
port@1:
        $ref: /schemas/graph.yaml#/properties/port
        描述: 显示流的输出端点
所需:
      - "#address-cells"
      - "#size-cells"
      - reg
      - port@0
      - port@1

    其他属性: false

所需:
  - compatible
  - "#address-cells"
  - "#size-cells"
  - reg
  - clocks
  - clock-names
  - power-domains

其他属性: false

示例:
  - |
    #include <dt-bindings/clock/imx8-lpcg.h>
    #include <dt-bindings/firmware/imx/rsrc.h>
    pixel-combiner@56020000 {
        compatible = "fsl,imx8qxp-pixel-combiner";
        #address-cells = <1>;
        #size-cells = <0>;
        reg = <0x56020000 0x10000>;
        clocks = <&dc0_pixel_combiner_lpcg IMX_LPCG_CLK_4>;
        clock-names = "apb";
        power-domains = <&pd IMX_SC_R_DC_0>;

        channel@0 {
            #address-cells = <1>;
            #size-cells = <0>;
            reg = <0>;

            port@0 {
                reg = <0>;

                dc0_pixel_combiner_ch0_dc0_dpu_disp0: endpoint {
                    remote-endpoint = <&dc0_dpu_disp0_dc0_pixel_combiner_ch0>;
                };
            };

            port@1 {
                reg = <1>;

                dc0_pixel_combiner_ch0_dc0_pixel_link0: endpoint {
                    remote-endpoint = <&dc0_pixel_link0_dc0_pixel_combiner_ch0>;
                };
            };
        };

        channel@1 {
            #address-cells = <1>;
            #size-cells = <0>;
            reg = <1>;

            port@0 {
                reg = <0>;

                dc0_pixel_combiner_ch1_dc0_dpu_disp1: endpoint {
                    remote-endpoint = <&dc0_dpu_disp1_dc0_pixel_combiner_ch1>;
                };
            };

            port@1 {
                reg = <1>;

                dc0_pixel_combiner_ch1_dc0_pixel_link1: endpoint {
                    remote-endpoint = <&dc0_pixel_link1_dc0_pixel_combiner_ch1>;
                };
            };
        };
    };
```
```
