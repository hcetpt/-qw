# SPDX-许可证标识符: (GPL-2.0-only 或 BSD-2-Clause)
%YAML 1.2
---
$id: http://devicetree.org/schemas/display/bridge/thine,thc63lvd1024.yaml#
$schema: http://devicetree.org/meta-schemas/core.yaml#

标题: Thine Electronics THC63LVD1024 LVDS 解码器

维护者:
  - Jacopo Mondi <jacopo+renesas@jmondi.org>
  - Laurent Pinchart <laurent.pinchart+renesas@ideasonboard.com>

描述: |
  THC63LVD1024 是一款双链路 LVDS 接收器，设计用于将 LVDS 流转换为并行数据输出。该芯片支持单输入/输出模式和双输入/输出模式，最多可处理两个 LVDS 输入流和两个数字 CMOS/TTL 输出。
单模式或双模式操作、输出数据映射以及 DDR 输出模式通过输入信号进行配置，芯片不暴露任何控制总线。
属性:
  compatible:
    常量: thine,thc63lvd1024

  ports:
    $ref: /schemas/graph.yaml#/properties/ports
    描述: |
      设备可以在单输入或双输入以及单输出或双输出模式下运行。
当在单输入模式下运行时，所有像素都从端口 @0 接收，端口 @1 不应包含任何端点。在双输入模式下，
偶数编号的像素从端口 @0 接收，奇数编号的像素从端口 @1 接收，端口 @0 和端口 @1 都应包含端点。
当在单输出模式下运行时，所有像素都从第一个 CMOS/TTL 端口输出，端口 @3 不应包含任何端点。在双输出
模式下，像素从两个 CMOS/TTL 端口输出，端口 @2 和端口 @3 都应包含端点。

属性:
      port@0:
        $ref: /schemas/graph.yaml#/properties/port
        描述: 第一个 LVDS 输入端口

      port@1:
        $ref: /schemas/graph.yaml#/properties/port
        描述: 第二个 LVDS 输入端口

      port@2:
        $ref: /schemas/graph.yaml#/properties/port
        描述: 第一个数字 CMOS/TTL 并行输出

      port@3:
        $ref: /schemas/graph.yaml#/properties/port
        描述: 第二个数字 CMOS/TTL 并行输出

    必需:
      - port@0
      - port@2

  oe-gpios:
    最大项数: 1
    描述: 输出使能 GPIO 信号，引脚名称 "OE"，高电平有效
powerdown-gpios:
    最大项数: 1
    描述: 功率下降 GPIO 信号，引脚名称 "/PDWN"，低电平有效
vcc-supply:
    描述:
      为 TTL 输出、TTL CLOCKOUT 信号、LVDS 输入、PLL 和数字电路提供电源
必需:
  - compatible
  - ports
  - vcc-supply

额外属性: false

示例:
  - |
    #include <dt-bindings/gpio/gpio.h>

    lvds-decoder {
        compatible = "thine,thc63lvd1024";

        vcc-supply = <&reg_lvds_vcc>;
        powerdown-gpios = <&gpio4 15 GPIO_ACTIVE_LOW>;

        ports {
            #address-cells = <1>;
            #size-cells = <0>;

            port@0 {
                reg = <0>;

                lvds_dec_in_0: endpoint {
                    remote-endpoint = <&lvds_out>;
                };
            };

            port@2 {
                reg = <2>;

                lvds_dec_out_2: endpoint {
                    remote-endpoint = <&adv7511_in>;
                };
            };
        };
    };
