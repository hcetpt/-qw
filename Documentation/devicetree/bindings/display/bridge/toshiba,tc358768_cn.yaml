下面是给定内容的中文翻译：

```yaml
# SPDX-文件许可标识符: (GPL-2.0-only 或 BSD-2-Clause)
%YAML 1.2
---
$id: http://devicetree.org/schemas/display/bridge/toshiba,tc358768.yaml#
$schema: http://devicetree.org/meta-schemas/core.yaml#

标题: 东芝 TC358768/TC358778 平行RGB到MIPI DSI桥接器

维护者:
  - 彼得·乌约法卢西 <peter.ujfalusi@ti.com>

描述: |
  TC358768/TC358778 是一种桥接设备，可以将RGB信号转换为DSI信号。

属性:
  compatible:
    枚举:
      - toshiba,tc358768
      - toshiba,tc358778

  reg:
    最大项数: 1
    描述: 设备的基本I2C地址

  reset-gpios:
    最大项数: 1
    描述: 连接到低电平有效的RESX引脚的GPIO

  vddc-supply:
    描述: 用于1.2V内部核心电源的稳压器
  vddmipi-supply:
    描述: 用于MIPI的1.2V稳压器
  vddio-supply:
    描述: 用于1.8V - 3.3V IO电源的稳压器
  clocks:
    最大项数: 1

  clock-names:
    常量: refclk

  ports:
    $ref: /schemas/graph.yaml#/properties/ports

    属性:
      port@0:
        $ref: /schemas/graph.yaml#/$defs/port-base
        不评估的属性: false
        描述: |
          用于RGB输入的视频端口

        属性:
          endpoint:
            $ref: /schemas/graph.yaml#/$defs/endpoint-base
            不评估的属性: false

            属性:
              data-lines:
                $ref: /schemas/types.yaml#/definitions/uint32
                枚举: [ 16, 18, 24 ]

      port@1:
        $ref: /schemas/graph.yaml#/properties/port
        描述: |
          用于DSI输出（面板或连接器）的视频端口
必需:
      - port@0
      - port@1

必需:
  - compatible
  - reg
  - vddc-supply
  - vddmipi-supply
  - vddio-supply
  - ports

allOf:
  - $ref: ../dsi-controller.yaml#

不评估的属性: false

示例:
  - |
    #include <dt-bindings/gpio/gpio.h>

    i2c {
      #address-cells = <1>;
      #size-cells = <0>;

      dsi_bridge: dsi@e {
        compatible = "toshiba,tc358768";
        reg = <0xe>;

        clocks = <&tc358768_refclk>;
        clock-names = "refclk";

        reset-gpios = <&pcf_display_board 0 GPIO_ACTIVE_LOW>;

        vddc-supply = <&v1_2d>;
        vddmipi-supply = <&v1_2d>;
        vddio-supply = <&v3_3d>;

        dsi_bridge_ports: ports {
          #address-cells = <1>;
          #size-cells = <0>;

          port@0 {
            reg = <0>;
            rgb_in: endpoint {
              remote-endpoint = <&dpi_out>;
              data-lines = <24>;
            };
          };

          port@1 {
            reg = <1>;
            dsi_out: endpoint {
              remote-endpoint = <&lcd_in>;
            };
          };
        };
      };
    };
```
```
