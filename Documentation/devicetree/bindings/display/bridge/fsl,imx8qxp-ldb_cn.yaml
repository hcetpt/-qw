下面是提供的 YAML 文件的中文翻译：

```yaml
# SPDX 许可证标识符: (GPL-2.0-only 或 BSD-2-Clause)
%YAML 1.2
---
$id: http://devicetree.org/schemas/display/bridge/fsl,imx8qxp-ldb.yaml#
$schema: http://devicetree.org/meta-schemas/core.yaml#

title: Freescale i.MX8qm/qxp LVDS 显示桥接器

maintainers:
  - Liu Ying <victor.liu@nxp.com>

description: |
  Freescale i.MX8qm/qxp LVDS 显示桥接器(LDB)有两个通道。
  i.MX8qm/qxp LDB 由控制与状态寄存器(CSR)模块控制。
  CSR 模块作为系统控制器，包含 LDB 的配置寄存器。
  对于 i.MX8qxp LDB，每个通道支持最高 24bpp 的并行输入颜色格式，并且可以将输入映射到 VESA 或 JEIDA 标准。两个通道不能同时使用，也就是说，用户需要选择其中一个来使用。来自两个 LDB 实例的两个 LDB 通道可以在 LDB 分割模式下协同工作以支持双链路 LVDS 显示器。通道索引必须不同。通道0输出奇数像素，而通道1输出偶数像素。
  对于 i.MX8qm LDB，每个通道还支持最高 30bpp 的并行输入颜色格式。两个通道可以同时使用，既可以是双模式也可以是分割模式。在双模式下，两个通道输出相同的数据。在分割模式下，通道0输出奇数像素，通道1输出偶数像素。
  需要说明的是，i.MX8qm/qxp LDB 在 SoC 参考手册中正式称为像素映射器。像素映射器使用嵌入在 i.MX6qdl/sx SoC 中的 LDB 逻辑，即本质上基于它们。为了保持命名一致性，此绑定将其称为 LDB。

properties:
  compatible:
    enum:
      - fsl,imx8qm-ldb
      - fsl,imx8qxp-ldb

  "#address-cells":
    const: 1

  "#size-cells":
    const: 0

  clocks:
    items:
      - description: 像素时钟
      - description: 旁路时钟

  clock-names:
    items:
      - const: pixel
      - const: bypass

  power-domains:
    maxItems: 1

  fsl,companion-ldb:
    $ref: /schemas/types.yaml#/definitions/phandle
    description: |
      一个指向在 LDB 分割模式中使用的配套 LDB 的 phandle

patternProperties:
  "^channel@[0-1]$":
    type: object
    description: 表示 LDB 的一个通道
properties:
      "#address-cells":
        const: 1

      "#size-cells":
        const: 0

      reg:
        description: 通道索引
enum: [ 0, 1 ]

      phys:
        description: 指向表示 LVDS PHY 的 PHY 模块的 phandle
```

请注意，某些 YAML 元素和结构可能没有直接的中文等价物，因此这些部分保留了英文原样。
这段文本是 Device Tree (设备树) 的描述，用于定义硬件组件及其配置。下面是该文本的中文翻译：

```yaml
# 最大项目数: 1

phy-names:
  # 常量: lvds_phy

port@0:
  $ref: /schemas/graph.yaml#/properties/port
  description: 通道的输入端口
port@1:
  $ref: /schemas/graph.yaml#/properties/port
  description: 通道的输出端口
required:
  - "#address-cells"
  - "#size-cells"
  - reg
  - phys
  - phy-names

additionalProperties: false

required:
  - compatible
  - "#address-cells"
  - "#size-cells"
  - clocks
  - clock-names
  - power-domains
  - channel@0
  - channel@1

allOf:
  - if:
      properties:
        compatible:
          contains:
            const: fsl,imx8qm-ldb
    then:
      properties:
        fsl,companion-ldb: false

additionalProperties: false

examples:
  - |
    #include <dt-bindings/firmware/imx/rsrc.h>
    ldb {
        #address-cells = <1>;
        #size-cells = <0>;
        compatible = "fsl,imx8qxp-ldb";
        clocks = <&clk IMX_SC_R_LVDS_0 IMX_SC_PM_CLK_MISC2>,
                 <&clk IMX_SC_R_LVDS_0 IMX_SC_PM_CLK_BYPASS>;
        clock-names = "pixel", "bypass";
        power-domains = <&pd IMX_SC_R_LVDS_0>;

        channel@0 {
            #address-cells = <1>;
            #size-cells = <0>;
            reg = <0>;
            phys = <&mipi_lvds_0_phy>;
            phy-names = "lvds_phy";

            port@0 {
                reg = <0>;

                mipi_lvds_0_ldb_ch0_mipi_lvds_0_pxl2dpi: endpoint {
                    remote-endpoint = <&mipi_lvds_0_pxl2dpi_mipi_lvds_0_ldb_ch0>;
                };
            };
        };

        channel@1 {
            #address-cells = <1>;
            #size-cells = <0>;
            reg = <1>;
            phys = <&mipi_lvds_0_phy>;
            phy-names = "lvds_phy";

            port@0 {
                reg = <0>;

                mipi_lvds_0_ldb_ch1_mipi_lvds_0_pxl2dpi: endpoint {
                    remote-endpoint = <&mipi_lvds_0_pxl2dpi_mipi_lvds_0_ldb_ch1>;
                };
            };
        };
    };
```

请注意，由于 Device Tree 的特殊格式，其中包含了很多特定的符号和语法（如 `$ref`、`contains` 等），这些在翻译时保持不变。此外，示例中的代码部分也直接保留了英文原文。
