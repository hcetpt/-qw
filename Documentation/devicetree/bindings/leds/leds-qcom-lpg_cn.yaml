以下是给定 YAML 文档的中文翻译：

# SPDX 许可标识符: (GPL-2.0-only 或 BSD-2-Clause)
%YAML 1.2
---
$id: http://devicetree.org/schemas/leds/leds-qcom-lpg.yaml#
$schema: http://devicetree.org/meta-schemas/core.yaml#

标题: 高通光脉冲发生器

维护者:
  - Bjorn Andersson <bjorn.andersson@linaro.org>

描述: >
  高通光脉冲发生器由三个不同的硬件模块组成；
  包括带有查找表（LUT）的斜坡生成器、光脉冲发生器和三通道电流源。这些模块广泛应用于一系列高通电源管理集成电路（PMIC）中。

属性:
  compatible:
    oneOf:
      - 枚举:
          - qcom,pm660l-lpg
          - qcom,pm8150b-lpg
          - qcom,pm8150l-lpg
          - qcom,pm8350c-pwm
          - qcom,pm8916-pwm
          - qcom,pm8941-lpg
          - qcom,pm8994-lpg
          - qcom,pmc8180c-lpg
          - qcom,pmi632-lpg
          - qcom,pmi8950-pwm
          - qcom,pmi8994-lpg
          - qcom,pmi8998-lpg
          - qcom,pmk8550-pwm
      - 项:
          - 枚举:
              - qcom,pm6150l-lpg
          - 常量: qcom,pm8150l-lpg
      - 项:
          - 枚举:
              - qcom,pm8550-pwm
          - 常量: qcom,pm8350c-pwm

  "#pwm-cells":
    常量: 2

  "#address-cells":
    常量: 1

  "#size-cells":
    常量: 0

  qcom,power-source:
    $ref: /schemas/types.yaml#/definitions/uint32
    描述:
      用于驱动输出的电源源，如数据手册中定义。
      如果存在TRILED块，则应指定。
    枚举: [0, 1, 3]

  qcom,dtest:
    $ref: /schemas/types.yaml#/definitions/uint32-matrix
    描述: >
      整数对列表，其中每一对表示特定通道应连接的dtest线以及标志，这些标志定义了值如何输出，如数据手册中定义。对的数量应与通道数量相同。
    项:
      - 描述: 要连接的dtest线
      - 描述: 连接的标志

  nvmem:
    描述: >
      此属性对于支持PPG的PMIC是必需的，即当PMIC将LPG每通道数据和模式LUT存储在SDAM模块中而不是LUT外围设备中时。对于像PM8350C这样的PMIC，每通道数据和模式LUT被分离到两个SDAM模块中。在这种情况下，需要指定两个SDAM模块的phandle。
    最小项: 1
    最大项: 2

  nvmem-names:
    最小项: 1
    项:
      - 常量: lpg_chan_sdam
      - 常量: lut_sdam

  qcom,pbs:
    $ref: /schemas/types.yaml#/definitions/phandle
    描述: >
      高通可编程启动序列节点（PBS）的phandle。
      PBS节点用于触发支持单SDAM PPG的PMIC中的LPG模式序列。

multi-led:
    类型: 对象
    $ref: leds-class-multicolor.yaml#
    未评估属性: false

    属性:
      "#address-cells":
        常量: 1

      "#size-cells":
        常量: 0

    符合模式的属性:
      "^led@[0-9a-f]$":
        类型: 对象
        $ref: common.yaml#
        未评估属性: false

        属性:
          reg:
            最大项: 1

        必需:
          - reg

符合模式的属性:
  "^led@[0-9a-f]$":
    类型: 对象
    $ref: common.yaml#
    未评估属性: false

    属性:
      reg:
        最大项: 1

    必需:
      - reg

必需:
  - compatible

附加属性: false

allOf:
  - 如果:
      属性:
        compatible:
          包含:
            枚举:
              - qcom,pm660l-lpg
              - qcom,pm8150b-lpg
              - qcom,pm8150l-lpg
              - qcom,pm8916-pwm
              - qcom,pm8941-lpg
              - qcom,pm8994-lpg
              - qcom,pmc8180c-lpg
              - qcom,pmi8950-pwm
              - qcom,pmi8994-lpg
              - qcom,pmi8998-lpg
              - qcom,pmk8550-pwm
    然后:
      属性:
        nvmem: false
        nvmem-names: false

  - 如果:
      属性:
        compatible:
          包含:
            常量: qcom,pmi632-lpg
    然后:
      属性:
        nvmem:
          最大项: 1
        nvmem-names:
          最大项: 1

  - 如果:
      属性:
        compatible:
          包含:
            枚举:
              - qcom,pm8350c-pwm
    然后:
      属性:
        nvmem:
          最小项: 2
        nvmem-names:
          最小项: 2

示例:
  - |
    #include <dt-bindings/leds/common.h>

    led-controller {
      compatible = "qcom,pmi8994-lpg";

      #address-cells = <1>;
      #size-cells = <0>;

      qcom,power-source = <1>;

      qcom,dtest = <0 0>,
                   <0 0>,
                   <0 0>,
                   <4 1>;

      led@1 {
        reg = <1>;
        color = <LED_COLOR_ID_GREEN>;
        function = LED_FUNCTION_INDICATOR;
        function-enumerator = <1>;
      };

      led@2 {
        reg = <2>;
        color = <LED_COLOR_ID_GREEN>;
        function = LED_FUNCTION_INDICATOR;
        function-enumerator = <0>;
        default-state = "on";
      };

      led@3 {
        reg = <3>;
        color = <LED_COLOR_ID_GREEN>;
        function = LED_FUNCTION_INDICATOR;
        function-enumerator = <2>;
      };

      led@4 {
        reg = <4>;
        color = <LED_COLOR_ID_GREEN>;
        function = LED_FUNCTION_INDICATOR;
        function-enumerator = <3>;
      };
    };
  - |
    #include <dt-bindings/leds/common.h>

    led-controller {
      compatible = "qcom,pmi8994-lpg";

      #address-cells = <1>;
      #size-cells = <0>;

      qcom,power-source = <1>;

      multi-led {
        color = <LED_COLOR_ID_RGB>;
        function = LED_FUNCTION_STATUS;

        #address-cells = <1>;
        #size-cells = <0>;

        led@1 {
          reg = <1>;
          color = <LED_COLOR_ID_RED>;
        };

        led@2 {
          reg = <2>;
          color = <LED_COLOR_ID_GREEN>;
        };

        led@3 {
          reg = <3>;
          color = <LED_COLOR_ID_BLUE>;
        };
      };
    };
  - |
    pwm-controller {
      compatible = "qcom,pm8916-pwm";
      #pwm-cells = <2>;
    };
  - |
    #include <dt-bindings/leds/common.h>

    led-controller {
      compatible = "qcom,pmi632-lpg";
      #address-cells = <1>;
      #size-cells = <0>;
      #pwm-cells = <2>;
      nvmem-names = "lpg_chan_sdam";
      nvmem = <&pmi632_sdam_7>;
      qcom,pbs = <&pmi632_pbs_client3>;

      led@1 {
        reg = <1>;
        color = <LED_COLOR_ID_RED>;
        label = "red";
      };

      led@2 {
        reg = <2>;
        color = <LED_COLOR_ID_GREEN>;
        label = "green";
      };

      led@3 {
        reg = <3>;
        color = <LED_COLOR_ID_BLUE>;
        label = "blue";
      };
    };
