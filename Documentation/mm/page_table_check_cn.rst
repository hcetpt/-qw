SPDX 许可证标识符: GPL-2.0

================
页表检查
================

介绍
============

页表检查通过确保某些类型的内存损坏不会发生来增强内核的安全性。页表检查在新页面通过添加其页表项（PTEs、PMDs 等）而变得可以从用户空间访问时执行额外的验证。在大多数检测到的损坏情况下，内核会崩溃。页表检查与之相关的性能和内存开销较小。因此，默认情况下它是禁用的，但在那些额外加固的好处超过性能成本的系统上可以选中启用。此外，由于页表检查是同步进行的，它可以帮助调试双映射内存损坏问题，在错误映射发生时使内核崩溃而不是稍后崩溃，这是内存损坏错误通常的情况。
它还可以用于检查各种标志下的页表项，并在检测到非法的条目标志组合时发出警告。目前，`userfaultfd` 是唯一使用此功能来验证写保护位是否与任何可写标志冲突的组件。在这种情况下，非法标志组合不会立即直接导致数据损坏，但会导致只读数据变为可写，当页面内容稍后被修改时会导致损坏。

双映射检测逻辑
==============================

+-------------------+-------------------+-------------------+------------------+
| 当前映射           | 新映射            | 权限              | 规则             |
+===================+===================+===================+==================+
| 匿名               | 匿名              | 只读              | 允许             |
+-------------------+-------------------+-------------------+------------------+
| 匿名               | 匿名              | 读写              | 禁止             |
+-------------------+-------------------+-------------------+------------------+
| 匿名               | 命名              | 任意              | 禁止             |
+-------------------+-------------------+-------------------+------------------+
| 命名               | 匿名              | 任意              | 禁止             |
+-------------------+-------------------+-------------------+------------------+
| 命名               | 命名              | 任意              | 允许             |
+-------------------+-------------------+-------------------+------------------+

启用页表检查
=========================

构建内核时：

- `PAGE_TABLE_CHECK=y`
  注意：它只能在支持 `ARCH_SUPPORTS_PAGE_TABLE_CHECK` 的平台上启用。
- 启动时使用 `page_table_check=on` 内核参数。
  可选地，可以通过设置 `PAGE_TABLE_CHECK_ENFORCED` 来构建内核以获得页表支持而无需额外的内核参数。

实现说明
====================

我们特别决定不使用 VMA 信息以避免依赖 MM 状态（除了有限的 “struct page” 信息）。页表检查是一个独立于 Linux-MM 状态机的机制，该机制验证用户可访问的页面是否被错误共享。
`PAGE_TABLE_CHECK` 依赖于 `EXCLUSIVE_SYSTEM_RAM`。原因是如果没有 `EXCLUSIVE_SYSTEM_RAM`，用户可以通过 `/dev/mem` 将任意物理内存区域映射到用户空间。同时，页面可能在其仍映射到用户空间时改变其属性（例如，从匿名页面变为命名页面），从而导致页表检查检测到“损坏”。
即使有了 `EXCLUSIVE_SYSTEM_RAM`，I/O 页面仍然可能允许通过 `/dev/mem` 映射。然而，这些页面始终被视为命名页面，因此它们不会破坏页表检查中使用的逻辑。
当然，请提供你需要翻译的文本。
