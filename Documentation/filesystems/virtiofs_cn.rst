SPDX 许可声明标识符: GPL-2.0

.. _virtiofs_index:

===================================================
virtiofs：virtio-fs 主机<->客户机共享文件系统
===================================================

- 版权所有 (C) 2019 Red Hat, Inc

简介
====
Linux 的 virtiofs 文件系统实现了一个用于半虚拟化 VIRTIO “virtio-fs” 设备的驱动程序，用于主机与客户机之间的文件系统共享。它允许客户机挂载在主机上导出的一个目录。
客户机通常需要访问位于主机或远程系统上的文件。
使用场景包括在安装期间向新客户机提供文件、从位于主机上的根文件系统启动、为无状态或临时客户机提供持久存储，以及在客户机之间共享一个目录。
虽然可以使用现有的网络文件系统来完成其中一些任务，但这些任务需要难以自动化的配置步骤，并且会将存储网络暴露给客户机。virtio-fs 设备设计的目的是通过提供无需网络的文件系统访问来解决这些问题。
此外，virtio-fs 设备利用了客户机和主机共存的优势，提高了性能并提供了网络文件系统无法实现的语义。

使用
====
在 `/mnt` 上挂载标签为 `myfs` 的文件系统：

.. code-block:: sh

  guest# mount -t virtiofs myfs /mnt

有关如何配置 QEMU 和 virtiofsd 守护进程的详细信息，请参阅 https://virtio-fs.gitlab.io/

挂载选项
--------

virtiofs 支持通用的 VFS 挂载选项，例如重新挂载（remount）、只读（ro）、读写（rw）、上下文（context）等。它还支持 FUSE 挂载选项。

访问时间行为
^^^^^^^^^^^^^^

与访问时间相关的挂载选项，例如 noatime、strictatime 等，会被忽略。virtiofs 的访问时间行为与主机上导出目录的底层文件系统的访问时间行为相同。

内部实现
========
由于 virtio-fs 设备使用 FUSE 协议进行文件系统请求，因此 Linux 的 virtiofs 文件系统与 FUSE 文件系统客户端紧密集成。客户机充当 FUSE 客户端，而主机充当 FUSE 服务器。内核与用户空间之间的 `/dev/fuse` 接口被替换为 virtio-fs 设备接口。
FUSE 请求被放入一个 virtqueue 中并由主机处理。响应部分的缓冲区由主机填充，而请求的完成则由客户机处理。
将 /dev/fuse 映射到 virtqueue 需要解决 /dev/fuse 和 virtqueue 之间的语义差异。每次读取 /dev/fuse 设备时，FUSE 客户机可以选择传输哪个请求，从而可以对某些请求进行优先级排序。virtqueue 具有队列语义，无法更改已入队请求的顺序。
这一点在 virtqueue 满时尤为重要，因为此时无法添加高优先级请求。为了解决这一差异，virtio-fs 设备使用了一个专门用于处理比普通请求具有更高优先级请求的“hiprio” virtqueue。
