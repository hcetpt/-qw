```
SPDX 许可证标识符: GPL-2.0

============================
Linux 目录通知
============================

	Stephen Rothwell <sfr@canb.auug.org.au>

目录通知的目的是允许用户应用程序在目录或其中的任何文件发生变化时得到通知。
基本机制包括应用程序使用fcntl(2)调用注册对某个目录的通知，而通知本身则通过信号传递。
应用程序决定它希望接收哪些“事件”的通知。目前定义的事件如下：

	=========	=====================================================
	DN_ACCESS	目录中的文件被访问（读取）
	DN_MODIFY	目录中的文件被修改（写入、截断）
	DN_CREATE	在目录中创建了一个文件
	DN_DELETE	从目录中删除了一个文件
	DN_RENAME	目录中的文件被重命名
	DN_ATTRIB	目录中的文件属性被更改（改变权限、改变所有者）
	=========	=====================================================

通常情况下，应用程序必须在每次通知后重新注册，但如果将DN_MULTISHOT与事件掩码进行逻辑或运算，则注册会一直保留直到显式移除（即注册不接收任何事件）。
默认情况下，SIGIO信号会被发送给进程，没有其他有用的信息。但是，如果使用F_SETSIG fcntl(2)调用让内核知道要传递哪个信号，则会将siginfo结构传递给信号处理器，并且该结构的si_fd成员将包含与发生事件的目录相关的文件描述符。
最好应用程序选择一个实时信号（SIGRTMIN + <n>），以便可以排队通知。这在指定了DN_MULTISHOT时尤为重要。请注意，SIGRTMIN通常被屏蔽，因此最好使用至少SIGRTMIN + 1。

实现预期（特性和错误 :-))
-----------------------------------

通知应该适用于任何本地文件访问，即使实际文件系统位于远程服务器上。这意味着由本地用户模式服务器提供的文件的远程访问也应收到通知。
此外，由本地内核NFS服务器提供的文件的远程访问也应收到通知。
为了尽可能减少对文件系统代码的影响，硬链接问题被忽略。因此，如果一个文件（x）存在于两个目录（a和b）中，那么使用名称"a/x"对文件进行的更改应该通知期望接收目录"a"通知的程序，但不会通知期望接收目录"b"通知的程序。
另外，已被删除的文件仍会在其最后一个链接所在的目录中触发通知。
```
配置
-------------

Dnotify 通过 CONFIG_DNOTIFY 配置选项进行控制。当禁用时，fcntl(fd, F_NOTIFY, ...) 将返回 -EINVAL。

示例
-------
请参阅 tools/testing/selftests/filesystems/dnotify_test.c 获取示例。

注意事项
----
从 Linux 2.6.13 开始，dnotify 已被 inotify 替代。有关更多信息，请参阅 Documentation/filesystems/inotify.rst。
