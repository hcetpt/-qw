SPDX 许可证标识符：GPL-2.0

=============================
Amiga 文件系统的概述
=============================

并非所有种类的 Amiga 文件系统都支持读写。目前 Amiga 支持六种不同的文件系统：

==============	===============================================================
DOS\0		旧版或原始文件系统，不适合硬盘使用，通常也不在硬盘上使用
支持读写
DOS\1		原始的快速文件系统。支持读写
DOS\2		旧版“国际化”文件系统。“国际化”意味着修复了一个错误，使得带重音（“国际化”）的字母在文件名中不区分大小写，正如它们应该的那样
支持读写
DOS\3		“国际化”的快速文件系统。支持读写
DOS\4		带有目录缓存的原始文件系统。目录缓存显著加快了软盘上的目录访问速度，但会减慢文件创建/删除的速度。在硬盘上意义不大。仅支持读取
DOS\5		带有目录缓存的快速文件系统。仅支持读取
==============	===============================================================

以上所有文件系统允许块大小从 512 字节到 32K 字节。
支持的块大小为：512、1024、2048 和 4096 字节。更大的块可以加速几乎所有操作，但代价是浪费磁盘空间。超过 4K 的速度提升似乎并不值得付出的代价，因此在这方面你也不会损失太多。
muFS（多用户文件系统）支持上述文件系统的等效功能。

AFFS 的挂载选项
=================

protect  
	如果设置了此选项，则保护位将无法被更改。

setuid[=uid]  
	这会将文件系统中所有文件和目录的所有者设置为指定的 uid 或当前用户的 uid。

setgid[=gid]  
	与上一个选项类似，但针对 gid。

mode=mode  
	将模式标志设置为给定的（八进制）值，无论原始权限如何。如果对应的 r 位被设置，目录将会获得 x 权限。
这对于大多数普通的 AmigaOS 文件非常有用，因为它们通常映射为 600。

nofilenametruncate  
	当文件名超过标准最大文件名长度（30 个字符）时，文件系统将返回错误。

reserved=num  
	设置分区开始处预留块的数量为 num。你几乎不需要这个选项。
默认值为 2。

root=block  
	设置根块的块号。这几乎不会用到。
bs=blksize  
设置块大小为 blksize。有效的块大小为 512、1024、2048 和 4096。就像 root 选项一样，这通常没有必要，因为 affs 可以自行确定。

quiet  
文件系统对于不允许的模式更改不会返回错误。

verbose  
当文件系统挂载时，卷名、文件系统类型和块大小将写入 syslog。

mufs  
文件系统实际上是 muFS，但它不标识自己为 muFS。如果文件系统不是以 muFS 格式化但作为 muFS 使用，则此选项是必要的。

prefix=path  
在 AFFS 分区上，符号链接的每个绝对路径名称都将加上指定的前缀。默认值为 "/"（见下文）。

volume=name  
在 AFFS 分区上创建具有绝对路径的符号链接时，name 将作为卷名添加到前面。默认值为空字符串（""）（见下文）。

用户/组和保护标志的处理
======================

Amiga 到 Linux：

Amiga 的保护标志 RWEDRWEDHSPARWED 按以下方式处理：

  - R 映射为用户、组和其他的 r。对于目录，R 暗示 x。
- W 映射为 w。
- E 映射为 x。
- D 被忽略。
H、S 和 P 在 Linux 下始终保留并被忽略
在写入文件时，A 将被清除
除非挂载选项中指定了 set[gu]id，否则将使用用户 ID 和组 ID。由于大多数 Amiga 文件系统是单用户系统，它们将归 root 所有。Amiga 文件系统的根目录（挂载点）将由实际执行挂载操作的用户拥有（根目录没有 uid/gid 字段）。
Linux 到 Amiga：

Linux 的 rwxrwxrwx 文件权限处理如下：

  - r 权限将允许用户、组和其他人的 R
- w 权限将允许用户、组和其他人的 W
- 用户的 x 权限将允许普通文件的 E
- D 将被允许给用户、组和其他人
- 所有其他标志（如 suid、sgid 等）将被忽略且不会保留
新创建的文件和目录将获得当前用户的用户 ID 和组 ID，并根据 umask 设置模式。
符号链接
==========

尽管 Amiga 和 Linux 文件系统看起来相似，但两者之间存在一些并不总是显而易见的差异。其中一个差异体现在符号链接上。Linux 有一个唯一的根目录，而 Amiga 每个文件系统（例如分区、软盘等）都有一个独立的根目录。在 Amiga 上，这些实体被称为“卷”。它们具有符号名称，可以用来访问它们。因此，符号链接可以指向不同的卷。AFFS 将卷名转换为目录名，并将其添加到前缀路径（参见前缀选项）。
示例：
您将所有的 Amiga 分区挂载在 /amiga/<volume> 下（其中 <volume> 是卷的名称），并且在挂载所有 AFFS 分区时提供 "prefix=/amiga/" 的选项。（这些分区可能是 "User"、"WB" 和 "Graphics"，挂载点为 /amiga/User、/amiga/WB 和 /amiga/Graphics）。指向 "User:sc/include/dos/dos.h" 的符号链接将会被解析到 "/amiga/User/sc/include/dos/dos.h"。

示例
=====

命令行 ::

    mount Archive/Amiga/Workbench3.1.adf /mnt -t affs -o loop,verbose
    mount /dev/sda3 /Amiga -t affs

/etc/fstab 条目 ::

    /dev/sdb5 /amiga/Workbench affs noauto,user,exec,verbose 0 0

重要说明
=========

如果您在连接了 Amiga 硬盘的情况下启动 Windows 95（不清楚 3.x、98 和 NT 是否有同样的问题），它会用垃圾数据覆盖第 0 块中的字节 0x00dc 到 0x00df，从而使得刚性磁盘块无效。幸运的是，这是 RDB 中未使用的区域，因此只有校验和不匹配。
Linux 会忽略这些垃圾数据并识别 RDB，但在再次将该驱动器连接到您的 Amiga 之前，您必须恢复或修复 RDB。所以在启动 Windows 之前，请先备份 RDB。

如果已经造成了损坏，以下方法应该可以修复 RDB（其中 <disk> 是设备名）  
**请谨慎操作** ::

  dd if=/dev/<disk> of=rdb.tmp count=1
  cp rdb.tmp rdb.fixed
  dd if=/dev/zero of=rdb.fixed bs=1 seek=220 count=4
  dd if=rdb.fixed of=/dev/<disk>

错误、限制和注意事项
======================

许多功能可能无法如预期那样工作。虽然已经使用此文件系统读写了几百兆字节的数据，但并非所有功能都经过测试。要获取最新的错误列表，请参阅 fs/affs/Changes。
默认情况下，文件名会被截断为 30 个字符，并且不会发出警告。使用 'nofilenametruncate' 挂载选项可以改变这种行为。
AFFS 在文件名匹配时忽略大小写，但 Linux shell 会区分大小写。例如（假设 /wb 是一个已挂载的 affs 文件系统） ::

    rm /wb/WRONGCASE

会删除 /mnt/wrongcase，但 ::

    rm /wb/WR*

则不会，因为名字是由 shell 匹配的。
块分配是为硬盘分区设计的。如果有多个进程同时写入（小）软盘，块会被丑陋地分配（但实际上的 AFFS 也做得不是很好）。当空间变得紧张时也是如此。
您不能在 OFS（旧文件系统）上执行程序，因为程序文件由于 488 字节的块大小而无法进行内存映射。
出于同样的原因，您也不能通过回环设备在这样的文件系统上挂载镜像。
根块中的位图有效标志在系统崩溃时可能不准确，尤其是在挂载了AFFS分区的情况下。目前如果没有Amiga（磁盘验证工具）或手动操作（谁会这么做呢？），则没有办法修复损坏的文件系统。也许将来会有办法。
如果你在系统启动时挂载AFFS分区，你可能需要告诉fsck不要检查该文件系统（在/etc/fstab文件的第六个字段中放置一个'0'）。
由于与Amiga软驱控制器不兼容，普通PC或工作站无法读取软盘。
如果你对Linux下的Amiga模拟器感兴趣，请查看

http://web.archive.org/web/%2E/http://www.freiburg.linux.de/~uae/
