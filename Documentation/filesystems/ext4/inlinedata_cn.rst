SPDX 许可证标识符: GPL-2.0

内联数据
--------

内联数据功能旨在处理文件数据非常小，可以轻松地存储在inode中的情况，理论上这可以减少磁盘块的使用并减少寻道次数。如果文件小于60字节，则数据将存储在 `inode.i_block` 中。如果文件剩余部分可以放入扩展属性空间中，则可能会作为扩展属性“system.data”存储在inode主体（“ibody EA”）中。当然，这也限制了可以附加到inode上的扩展属性的数量。如果数据大小超过 `i_block` 和 `ibody EA` 的总和，则分配一个常规块，并将内容移动到该块。

目前，由于扩展属性键用于存储内联数据的方式尚未优化，理论上可以在256字节的inode中存储160字节的数据（截至2015年6月，当 `i_extra_isize` 为28时）。在此之前，由于inode空间使用的效率较低，限制为156字节。内联数据功能要求存在一个名为“system.data”的扩展属性，即使属性值长度为零。

内联目录
~~~~~~~~~

`i_block` 的前四个字节是父目录的inode编号。之后是一个56字节的空间，用于存放目录项数组；参见 `struct ext4_dir_entry`。如果inode主体中有“system.data”属性，则EA值也是一个 `struct ext4_dir_entry` 数组。需要注意的是，对于内联目录，`i_block` 和 EA 空间被视为独立的目录项块；目录项不能跨越这两个空间。

内联目录项不进行校验，因为inode校验应该保护所有内联数据的内容。
