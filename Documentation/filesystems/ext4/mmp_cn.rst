SPDX 许可证标识符: GPL-2.0

多重挂载保护
-------------

多重挂载保护（MMP）是一种防止多个主机同时使用文件系统的功能。当一个文件系统被打开（用于挂载或 fsck 等操作时），在节点（称为节点 A）上运行的 MMP 代码会检查一个序列号。如果序列号为 EXT4_MMP_SEQ_CLEAN，则继续打开操作。如果序列号为 EXT4_MMP_SEQ_FSCK，则 fsck 应该正在运行，此时打开操作将立即失败。否则，打开代码将等待两倍于指定的 MMP 检查间隔时间，并再次检查序列号。如果序列号已更改，则说明文件系统正在另一台机器上活动，打开操作将失败。如果 MMP 代码通过了所有这些检查，将生成一个新的 MMP 序列号并写入 MMP 块中，然后继续进行挂载。

当文件系统处于活动状态时，内核会在指定的 MMP 检查间隔时间内设置一个定时器来重新检查 MMP 块。为了执行重新检查，会重新读取 MMP 序列号；如果它与内存中的 MMP 序列号不匹配，则表示另一个节点（节点 B）已经挂载了文件系统，节点 A 将重新以只读方式挂载文件系统。如果序列号匹配，则在内存和磁盘上都递增序列号，重新检查完成。

主机名和设备文件名会在每次成功打开操作时写入 MMP 块。MMP 代码不会使用这些值；它们仅用于信息目的。

校验和是根据文件系统的 UUID 和 MMP 结构计算得出的。

MMP 结构（`struct mmp_struct`）如下：

|---|---|---|---|
|- Offset | Type | Name | Description|
|---|---|---|---|
| 0x0 | __le32 | mmp_magic | MMP 的魔法数字，0x004D4D50（“MMP”）|
| 0x4 | __le32 | mmp_seq | 定期更新的序列号|
| 0x8 | __le64 | mmp_time | 上次更新 MMP 块的时间|
| 0x10 | char[64] | mmp_nodename | 打开文件系统的节点的主机名|
| 0x50 | char[32] | mmp_bdevname | 文件系统的块设备名称|
| 0x70 | __le16 | mmp_check_interval | MMP 重新检查间隔时间，单位为秒|
* - 0x72
     - __le16
     - mmp_pad1
     - 零
* - 0x74
     - __le32[226]
     - mmp_pad2
     - 零
* - 0x3FC
     - __le32
     - mmp_checksum
     - MMP 块的校验和
