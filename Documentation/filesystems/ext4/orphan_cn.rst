SPDX 许可证标识符: GPL-2.0

孤儿文件
--------

在 Unix 系统中，可能会存在一些与目录层次结构脱离链接但仍处于活动状态的索引节点（inode）。在系统崩溃的情况下，文件系统必须清理这些索引节点，否则它们（及其引用的块）将会泄露。类似地，如果我们截断或扩展文件时无法在一个日志记录事务中完成操作，那么需要将该索引节点标记为孤儿，以便在崩溃时可以截断额外分配给文件的块。

传统上，ext4 通过一个单链表来跟踪孤儿索引节点，其中超级块包含最后一个孤儿索引节点的编号（s_last_orphan 字段），而每个索引节点包含前一个孤儿索引节点的编号（我们重用了 i_dtime 索引节点字段来实现这一点）。然而，这个全局单链表对于导致大量孤儿索引节点创建的工作负载来说是一个性能瓶颈。

当启用孤儿文件特性（COMPAT_ORPHAN_FILE）时，文件系统会有一个特殊的索引节点（通过超级块中的 s_orphan_file_inum 引用），该索引节点有多个块。每个块的结构如下：

============= ================ =============== ===============================
偏移量        类型             名称            描述
============= ================ =============== ===============================
0x0           Array of         Orphan inode    每个 __le32 元素要么为空（0）
              __le32 entries   entries         要么包含一个孤儿索引节点的编号
blocksize-8   __le32           ob_magic        在孤儿块尾部存储的魔法值（0x0b10ca04）
blocksize-4   __le32           ob_checksum     孤儿块的校验和
============= ================ =============== ===============================

当具有孤儿文件特性的文件系统以可写方式挂载时，我们在超级块中设置 RO_COMPAT_ORPHAN_PRESENT 特性，以指示可能存在有效的孤儿条目。如果在挂载文件系统时看到此特性，我们将读取整个孤儿文件并像往常一样处理所有找到的孤儿索引节点。在干净卸载文件系统时，我们会移除 RO_COMPAT_ORPHAN_PRESENT 特性，以避免不必要的孤儿文件扫描，并使文件系统完全兼容旧内核。
