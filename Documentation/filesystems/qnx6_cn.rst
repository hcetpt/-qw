SPDX 许可证标识符: GPL-2.0

===================
QNX6 文件系统
===================

qnx6fs 被较新的 QNX 操作系统版本（例如 Neutrino）使用。它在 QNX 6.4.0 中引入，并从 6.4.1 版本开始作为默认文件系统。

选项
======

mmi_fs		挂载文件系统，例如奥迪 MMI 3G 系统使用的文件系统

规范
=============

qnx6fs 与传统的 Unix 文件系统有许多共同特性。它有块、inode 和目录的概念。
在 QNX 中，可以创建小端字节序和大端字节序的 qnx6 文件系统。这一特性使得可以在不同字节序的平台上为目标（QNX 在广泛的嵌入式系统中使用）创建并使用不同字节序的文件系统。
Linux 驱动程序透明地处理字节序（小端和大端）。

块
------

设备或文件中的空间被分割成块。这些块的大小固定为 512、1024、2048 或 4096 字节，在创建文件系统时确定。
块指针为 32 位，因此可以寻址的最大空间为 2^32 * 4096 字节，即 16 TB。

超级块
---------------

超级块包含关于文件系统的所有全局信息。
每个 qnx6fs 有两个超级块，每个超级块都有一个 64 位序列号。
这个序列号用于识别“活动”超级块。
在写模式下，每次同步写操作后都会生成一个新的快照，新主超级块的序列号会增加（旧超级块序列号 + 1）。

基本上，快照功能通过原子更新序列号来实现。在更新序列号之前，所有修改都是通过复制特定写请求（或时间段）期间的所有修改过的块，并在非活动超级块下构建新的（稳定的）文件系统结构来完成的。
每个超级块都包含不同文件系统部分的根 inode 的集合（inode、位图和长文件名）。
每个这些根节点包含有关存储数据的总大小和特定树中的地址层级的信息。
如果级别值为0，每个节点可以寻址多达16个直接块。
级别1增加了一个额外的间接寻址层，在这个层中，每个间接寻址块包含指向数据块的指针，这些指针的数量最多为块大小除以4。
级别2增加了一个额外的间接寻址块层（因此，这样的树结构已经可以寻址多达 16 * 256 * 256 = 1048576 个块）。
未使用的块指针始终设置为 ~0 —— 无论是在根节点、间接寻址块还是索引节点中。
数据叶节点始终位于最低层级。因此，上层不存储任何数据。
第一个超级块位于 0x2000 处。（0x2000 是引导块的大小）
Audi MMI 3G 的第一个超级块直接从字节 0 开始。
第二个超级块的位置可以通过超级块信息（文件系统块总数）计算得出，或者取最高的设备地址，将最后三个字节清零，然后从该地址减去 0x1000。
0x1000 是为每个超级块预留的大小——与文件系统的块大小无关。

索引节点（Inodes）
------------------

文件系统中的每个对象都由一个索引节点表示。
索引节点结构包含指向对象数据所在文件系统块的指针，以及除长名称（超过27个字符的文件名）之外的所有元数据。
关于对象的元数据包括权限、所有者、用户组、标志、大小、使用的块数、访问时间、更改时间和修改时间。
对象模式字段采用 POSIX 格式。（这使得事情更简单）

如果对象数据可以通过16个直接块寻址，那么还有指向前16个块的指针。
对于超过16个块的情况，使用另一种树形结构的间接寻址方式。（该方案与用于超级块根节点的方案相同）

文件大小存储为64位。inode编号从1开始。（而长文件名inode则从0开始）

目录
----

目录是文件系统的一个对象，并且像文件一样具有一个inode。
它是一个特殊格式的文件，包含记录，将每个名称与其对应的inode号关联起来。
'.' 的inode号指向该目录的inode。

'..' 的inode号指向父目录的inode。

每个文件名记录还包含一个文件名长度字段。
一个特殊情况是长文件名或子目录名。
这些名称在相应的目录记录中设置了一个值为 0xff 的文件名长度字段，以及存储在同一记录中的长文件名inode号。
通过这个长文件名inode号，可以从超级块的长文件名根节点指针开始遍历长文件名树。

特殊文件
--------

符号链接也是具有inode的文件系统对象。它们在inode模式字段中有一个特定的位来标识其为符号链接。
目录条目的文件inode指针指向目标文件的inode。
硬链接也有一个inode和一个目录条目，但其模式位被设置为特定值，没有块指针，且目录文件记录指向目标文件的inode。
字符设备和块设备在QNX中不存在，因为这些文件由QNX内核/驱动程序处理，并且独立于底层文件系统在/dev目录下创建。
长文件名
--------------

长文件名存储在一个独立的寻址树中。起点是活动超级块中的长文件名根节点。
每个数据块（树的叶子）保存一个长文件名。该文件名限制为510字节。前两个起始字节用作实际文件名的长度字段。
如果这种结构要适用于所有允许的块大小，那么实际存储的文件名限制为510字节的原因就很清楚了。

位图
------

QNX6文件系统的分配位图存储在超级块中的位图根节点下的一个树中，位图中的每一位代表一个文件系统块。
第一个块是块0，位于超级块开始后的0x1000处。
因此，对于一个普通的QNX6文件系统，0x3000（引导块+超级块）是块0所在的物理地址。
如果设备小于位图中的寻址空间，则最后一个位图块末尾的位将被设置为1。

位图系统区域
------------------

位图本身分为三个部分：
首先是系统区域，该区域又分为两半；
然后是用户空间。
对静态、固定预分配系统区域的要求来自于 qnx6fs 处理写操作的方式。
每个超级块都有自己的系统区域的一半。因此，超级块 #1 始终使用下半部分的块，而超级块 #2 则向由上半部分位图系统区域位表示的块写入。
对于这两个树状结构的位图块、inode 块和间接寻址块，都作为系统块处理。
这样做的原因是，写请求可以在一个新的快照（非活动的或序列号较低的超级块的系统区域）上工作，同时在系统区域的另一半中仍然有一个完整的稳定文件系统结构。
当写操作完成（同步写完成、达到最大同步跳跃时间或请求文件系统同步时），之前非活动超级块的序列号会原子性地增加，并且文件系统切换到那个此时已声明为稳定的超级块。
对于系统区域之外的所有数据，在写入时只是简单地复制块。
