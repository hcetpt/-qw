SPDX 许可证标识符: GPL-2.0

===========================================
Cramfs - 将文件系统压缩到小 ROM 中
===========================================

Cramfs 被设计得简单且体积小，并且能够很好地进行压缩。它使用 zlib 库逐页压缩文件，并允许随机访问页。元数据不被压缩，但以非常简洁的形式表示，使其占用的磁盘空间远少于传统文件系统。
您无法直接写入 Cramfs 文件系统（使其可压缩和紧凑也使得其难以实时更新），因此必须使用 "mkcramfs" 工具创建磁盘映像。
使用说明
-----------

文件大小限制在小于 16MB。
文件系统的最大容量略超过 256MB。（文件系统上的最后一个文件允许扩展到 256MB 以上。）
只存储 gid 的低 8 位。当前版本的 mkcramfs 简单地截断为 8 位，这可能是一个潜在的安全问题。
支持硬链接，但硬链接文件在 Cramfs 映像中仍然会有一个链接计数为 1。
Cramfs 目录没有 ``.`` 或 ``..`` 条目。目录（如同 Cramfs 上的其他文件一样）始终具有一个链接计数为 1。（顺便说一句，在使用 ``find`` 命令时无需使用 -noleaf 参数。）

Cramfs 中不存储时间戳，默认值为纪元时间（1970 年 GMT）。最近访问过的文件可能有更新的时间戳，但更新仅持续到相应索引节点在内存中缓存期间，之后时间戳将恢复为 1970 年，即时间向后移动。
目前，Cramfs 必须由相同字节序的架构写入和读取，并且只能由具有 PAGE_SIZE == 4096 的内核读取。至少后者是一个 bug，但尚未决定最佳修复方案。目前，如果您有更大的页面，您可以更改 mkcramfs.c 中的 #define，只要您不介意文件系统在未来内核中变得不可读。
内存映射的 Cramfs 映像
--------------------------

CRAMFS_MTD Kconfig 选项增加了从物理线性内存范围（通常是非易失性内存如 Flash）直接加载数据的支持，而不是通过块设备层。这节省了一些内存，因为不需要中间缓冲区来保存数据以待解压。
当数据块保持未压缩且对齐良好时，它们将在可能的情况下自动映射到用户空间，从而提供原地执行（XIP）ROM 中的只读部分。以读写方式映射的数据段（因此需要复制到 RAM）仍可以在同一文件中的 Cramfs 映像中与未压缩的只读部分一起被压缩。MMU 和无 MMU 系统均受支持。这对于内存资源极其紧张的小型嵌入式系统特别方便。
Cramfs镜像在内存中的位置依赖于系统。您必须知道Cramfs镜像所在的正确物理地址，并为其配置一个MTD设备。此外，该MTD设备必须由实现了“point”方法的地图驱动程序支持。这样的MTD驱动程序示例包括cfi_cmdset_0001（Intel/Sharp CFI闪存）或physmap（物理内存映射中的闪存设备）。基于此类设备的MTD分区也是可以的。然后应该使用“mtd:”前缀指定该设备作为挂载设备参数。例如，要将名为“fs_partition”的MTD设备挂载到/mnt目录上，请执行如下命令：

    $ mount -t cramfs mtd:fs_partition /mnt

如果要使用这个作为根文件系统启动内核，只需在内核命令行中指定类似“root=mtd:fs_partition”的内容即可。

工具
-----
能够利用上述最新功能的mkcramfs版本可以在这里找到：

https://github.com/npitre/cramfs-tools

对于 /usr/share/magic
--------------------
=====	=======================	=======================
0	ulelong	0x28cd3d45	Linux cramfs 偏移量 0
>4	ulelong	x		大小 %d
>8	ulelong	x		标志 0x%x
>12	ulelong	x		保留 0x%x
>16	string	>\0		签名 "%.16s"
>32	ulelong	x		fs_id.crc 0x%x
>36	ulelong	x		fs_id.版本 %d
>40	ulelong	x		fs_id.块数 %d
>44	ulelong	x		fs_id.文件数 %d
>48	string	>\0		名称 "%.16s"
512	ulelong	0x28cd3d45	Linux cramfs 偏移量 512
>516	ulelong	x		大小 %d
>520	ulelong	x		标志 0x%x
>524	ulelong	x		保留 0x%x
>528	string	>\0		签名 "%.16s"
>544	ulelong	x		fs_id.crc 0x%x
>548	ulelong	x		fs_id.版本 %d
>552	ulelong	x		fs_id.块数 %d
>556	ulelong	x		fs_id.文件数 %d
>560	string	>\0		名称 "%.16s"
=====	=======================	=======================

开发者笔记
------------
有关文件系统布局和实现说明，请参阅 fs/cramfs/README。
