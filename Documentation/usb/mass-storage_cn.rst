### 大容量存储Gadget (MSG)

#### 概览

大容量存储Gadget（或简称MSG）充当USB大容量存储设备，对主机来说表现为磁盘或CD-ROM驱动器。它支持多个逻辑单元（LUN）。每个LUN的后端存储由普通文件或块设备提供，访问可以被限制为只读，并且Gadget可以指示它是可移动的和/或CD-ROM（后者意味着只读访问）。它的要求较为简单；只需要一个批量输入和一个批量输出端点。内存需求总计为两个16K缓冲区。

包括对全速、高速和SuperSpeed操作的支持。
需要注意的是，该驱动稍微缺乏移植性，因为它假设单个内存/DMA缓冲区可用于批量输入和批量输出端点。对于大多数设备控制器而言这不是问题，但可能有一些硬件限制导致一个缓冲区不能被多于一个端点使用。

本文档描述了如何从用户空间使用此Gadget，它与大容量存储功能（MSF）以及使用它的不同Gadget之间的关系，以及它与文件存储Gadget（FSG）的区别（FSG已不再包含在Linux中）。本文档将简要讨论如何在复合Gadget内使用MSF。

#### 模块参数

大容量存储Gadget接受以下特定于大容量存储的模块参数：

- `file=filename[,filename...]`

  此参数列出了用于每个逻辑单元后端存储的文件或块设备路径。最多可以设置FSG_MAX_LUNS（8）个LUN。如果指定了更多文件，它们将被静默忽略。请参阅“luns”参数。

  **注意**：如果使用文件作为后端存储，则不允许任何其他进程修改该文件。这是因为主机假定数据不会在未经其知晓的情况下改变。它可以被读取，但如果逻辑单元是可写的，由于主机侧的缓冲，内容将无法确定。

  逻辑单元的大小将向下舍入到完整的逻辑块。模拟CD-ROM的LUN的逻辑块大小为2048字节，如果后端文件是块设备则为设备的块大小，否则为512字节。

- `removable=b[,b...]`

  此参数指定每个逻辑单元是否应为可移除的。“b”在此处为“y”、“Y”或“1”表示真，“n”、“N”或“0”表示假。

  如果为此逻辑单元设置了此选项，Gadget将接受“弹出”SCSI请求（Start/Stop Unit）。当发送该请求时，后端文件将被关闭以模拟弹出，并且直到用户空间在设备上指定了新的后端文件（参见“sysfs条目”部分），该逻辑单元将不可被主机挂载。
如果一个逻辑单元不可移除（默认情况），在模块加载时必须使用“file”参数为其指定一个后端文件。同样的规则适用于内置的模块，没有例外。

该标志的默认值为`false`，*然而*，以前它是`true`。这一设置已被更改为更好地与文件存储小工具相匹配，并且似乎这也是一个更为合理的默认设置。因此，为了与旧内核保持兼容性，最好明确指定默认值。此外，如果依赖于旧的默认设置，则现在需要显式指定`n`。

请注意，“可移除”意味着逻辑单元的介质可以被弹出或移除（如同CD-ROM驱动器或读卡器）。这并不意味着整个设备可以从主机上拔下；正确的术语是“热插拔”。

- `cdrom=b[,b...]`

    此参数用于指定每个逻辑单元是否模拟CD-ROM。默认值为`false`。
- `ro=b[,b...]`

    此参数用于指定每个逻辑单元是否报告为只读状态。这将阻止主机修改后端文件。

    如果给定逻辑单元的此标志为`false`，但无法以读写模式打开后端文件，设备仍将回退到只读模式。
    
    对于非CD-ROM逻辑单元，默认值为`false`；对于模拟CD-ROM的逻辑单元，默认强制为`true`。
- `nofua=b[,b...]`

    此参数用于指定是否在发送至给定逻辑单元的SCSI Write10和Write12命令中忽略FUA标志。

    MS Windows默认以“优化移除模式”挂载可移除存储。所有写入操作都是同步的，通过在SCSI Write(10,12)命令中设置FUA（强制单元访问）位来实现。这使得每次写入都必须等待数据实际写入完成，从而阻止了块层中的I/O请求聚合，导致性能显著下降。

    请注意，这意味着如果设备由USB供电，且用户在未卸载设备的情况下将其拔下（至少部分Windows用户会这样做），可能会导致数据丢失。
默认值为 `false`。
- luns=N

    此参数指定了小工具将拥有的逻辑单元数量。它受 `FSG_MAX_LUNS`（8）的限制，更高的值将会被上限所限制。
如果提供了此参数，并且在“file”参数中指定的文件数量大于“luns”的值，则所有多余的文件将被忽略。
如果此参数不存在，则逻辑单元的数量将从“file”参数中指定的文件数量推断得出。如果“file”参数也缺失，则假定为一个逻辑单元。
- stall=b

    指定小工具是否允许停止批量端点。
默认值根据USB设备控制器的类型确定，但通常为 `true`。
除了上述内容外，小工具还接受由复合框架定义的以下参数（这些参数对于所有复合小工具都是通用的，因此此处仅作简要列举）：

  - idVendor      -- USB供应商ID（16位整数）
  - idProduct     -- USB产品ID（16位整数）
  - bcdDevice     -- USB设备版本（BCD）（16位整数）
  - iManufacturer -- USB制造商字符串（字符串）
  - iProduct      -- USB产品字符串（字符串）
  - iSerialNumber -- 序列号字符串（字符串）

sysfs 条目
===========

  对于每个逻辑单元，小工具会在 sysfs 层次结构中创建一个目录。在此目录内会创建以下三个文件：

  - file

    当读取时，返回给定逻辑单元支持文件的路径。如果没有支持文件（仅当逻辑单元可移动时才可能发生），则内容为空。
当写入时，更改给定逻辑单元的支持文件。即使给定逻辑单元未指定为可移动的，也可以进行此更改（但这可能看起来对主机来说很奇怪）。然而，如果主机通过禁止介质移除的SCSI命令阻止了介质移除，则可能会失败。
- ro

    显示给定逻辑单元的只读标志的状态。可以随时读取，当没有打开给定逻辑单元的支持文件时可以写入。
- nofua

    显示给定逻辑单元的 nofua 标志的状态。可以读取和写入。
### 强制弹出 (`forced_eject`)

写入时，会导致后端文件从逻辑单元 (LUN) 中被强制分离，无论主机是否允许。内容无关紧要，任何非零字节数的写入都将导致弹出。
不能读取。

除此之外，通常情况下，模块参数的值可以从 `/sys/module/g_mass_storage/parameters/*` 文件中读取。

### 使用大容量存储功能的其他设备
=====================================

大容量存储设备使用大容量存储功能来处理大容量存储协议。作为一个复合功能，MSF也可以被其他设备使用（例如 `g_multi` 和 `acm_ms`）。
前面几节中的所有信息对于使用MSF的其他设备都是适用的，除了可能缺少对与大容量存储相关的模块参数的支持，或者这些参数可能有前缀。要确定这一点是否为真，需要查阅设备的文档或其源代码。
有关如何在设备中包含大容量存储功能的例子，可以参考 `mass_storage.c`、`acm_ms.c` 和 `multi.c`（按复杂度排序）。

### 与文件存储设备的关系
==============================

大容量存储功能以及因此而产生的大容量存储设备是基于文件存储设备构建的。两者的区别在于MSG是一个复合设备（即使用了复合框架），而文件存储设备是一个传统的设备。从用户空间的角度来看，这种区别并不重要，但从内核开发者角度来看，这意味着（i）MSG不需要重复用于处理基本USB协议命令所需的代码；（ii）MSF可以在任何其他复合设备中使用。
正因为如此，在Linux 3.8版本中移除了文件存储设备。
所有用户都需要过渡到使用大容量存储设备。这两种设备在外围行为上大致相同，但存在以下区别：

1. 在文件存储设备 (FSG) 中，“removable”和“cdrom”模块参数为所有逻辑单元设置标志，而在MSG中，它们接受针对每个逻辑单元的y/n值列表。如果只使用一个逻辑单元，这不重要，但如果使用多个逻辑单元，则需要为每个逻辑单元重复y/n值。
2. FSG中的“serial”、“vendor”、“product”和“release”模块参数在MSG中由复合层的参数分别处理，这些参数名为：“iSerialNumber”、“idVendor”、“idProduct”和“bcdDevice”。
3. MSG 不支持 FSG 的测试模式，因此“transport”（传输）、“protocol”（协议）和“buflen”（缓冲区长度）这些 FSG 的模块参数不受支持。MSG 始终使用带有仅批量传输模式的 SCSI 协议以及 16 KiB 大小的缓冲区。
