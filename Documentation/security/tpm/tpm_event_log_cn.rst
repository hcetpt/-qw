SPDX 许可证标识符: GPL-2.0

=============
TPM 事件日志
=============

本文档简要介绍了什么是 TPM 日志以及它是如何从预引导固件传递给操作系统的。

简介
============

预引导固件维护一个事件日志，每当有数据被散列到任意一个 PCR 寄存器时，日志就会添加新的条目。这些事件根据类型进行分类，并包含被散列的 PCR 寄存器的值。通常情况下，预引导固件会对那些需要执行权限交接的组件或与引导过程相关的操作进行散列。

这种做法的主要应用是远程证明（remote attestation），其有用性在 [1] 的第一节中有很好的说明：

“证明用于向挑战者提供有关平台状态的信息。然而，PCR 内容难以解释；因此，当 PCR 内容附带测量日志时，证明通常更有用。虽然单独来看测量日志不可信，但它包含的信息比 PCR 内容更丰富。PCR 内容用于验证测量日志。”

UEFI 事件日志
==============

UEFI 提供的事件日志有一些奇怪的特点：
在调用 ExitBootServices() 之前，Linux EFI stub 会将事件日志复制到由 stub 自定义定义的配置表中。不幸的是，ExitBootServices() 生成的事件不会出现在该表中。

固件提供了所谓的最终事件配置表来解决这个问题。在首次调用 EFI_TCG2_PROTOCOL.GetEventLog() 后，事件会被镜像到这个表中。
这又引入了另一个问题：没有任何保证说它不会在 Linux EFI stub 运行前被调用。因此，在 stub 运行期间需要计算并保存最终事件表的大小到自定义配置表中，以便 TPM 驱动程序在合并自定义配置表和最终事件表中的两个日志部分时可以跳过这些事件。

参考文献
==========

- [1] https://trustedcomputinggroup.org/resource/pc-client-specific-platform-firmware-profile-specification/
- [2] 最终的合并是在 drivers/char/tpm/eventlog/efi.c 中完成的。
