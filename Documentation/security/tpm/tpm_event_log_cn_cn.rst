SPDX 许可证标识符: GPL-2.0

=============
TPM 事件日志
=============

本文档简要介绍了 TPM 日志是什么以及它是如何从预引导固件传递到操作系统的。

简介
============

预引导固件维护了一个事件日志，每当某些内容被散列到任何 PCR 寄存器时，就会在日志中添加新的条目。这些事件按类型进行分类，并包含散列后的 PCR 寄存器的值。通常，预引导固件会对移交控制权的组件或与启动过程相关的操作进行散列。

这种做法的主要应用是远程证明（remote attestation），其有用性在 [1] 的第一节中有很好的说明：

“证明用于向挑战者提供关于平台状态的信息。然而，PCR 内容难以解释；因此，当 PCR 内容伴随测量日志时，证明通常更有用。尽管测量日志本身不可信，但它包含比 PCR 内容更丰富的信息。PCR 内容用于验证测量日志。”

UEFI 事件日志
==============

UEFI 提供的事件日志有一些奇怪的特点：
在调用 `ExitBootServices()` 之前，Linux EFI stub 会将事件日志复制到由 stub 自身定义的自定义配置表中。遗憾的是，`ExitBootServices()` 生成的事件不会出现在该表中。
固件提供了所谓的最终事件配置表来解决这个问题。在首次调用 `EFI_TCG2_PROTOCOL.GetEventLog()` 后，事件会被镜像到此表中。
这又引入了另一个问题：无法保证它不会在 Linux EFI stub 运行之前被调用。因此，stub 需要在运行期间计算并保存最终事件表的大小，将其存储在自定义配置表中，以便 TPM 驱动程序在合并自定义配置表和最终事件表中的两个部分时可以跳过这些事件。

参考文献
==========

- [1] https://trustedcomputinggroup.org/resource/pc-client-specific-platform-firmware-profile-specification/
- [2] 最终的合并是在 `drivers/char/tpm/eventlog/efi.c` 中完成的。
