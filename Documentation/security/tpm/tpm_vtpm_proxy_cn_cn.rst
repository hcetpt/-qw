=============================================
Linux 容器的虚拟 TPM 代理驱动
=============================================

| 作者：
| Stefan Berger <stefanb@linux.vnet.ibm.com>

本文档描述了适用于 Linux 容器的虚拟可信平台模块（vTPM）代理设备驱动。

简介
============

这项工作的目标是为每个 Linux 容器提供 TPM 功能。这使得容器内的程序能够以与在物理系统上相同的方式与 TPM 进行交互。每个容器都将拥有其唯一的、模拟的软件 TPM。

设计
======

为了使每个容器都能使用一个模拟的软件 TPM，容器管理堆栈需要创建一个设备对，其中包括一个客户端 TPM 字符设备 `/dev/tpmX` （其中 X=0,1,2...）和一个“服务器端”文件描述符。前者通过创建具有适当主次号的字符设备而被移动到容器中，后者则传递给 TPM 模拟器。这样，容器内的软件可以通过字符设备发送 TPM 命令，并且模拟器将通过文件描述符接收这些命令并用它来发送响应。

为了支持这一点，虚拟 TPM 代理驱动提供了一个设备 `/dev/vtpmx` ，用于通过 ioctl 创建设备对。ioctl 需要输入一些配置设备的标志。例如，这些标志可以指示 TPM 模拟器是否支持 TPM 1.2 或 TPM 2 功能。

ioctl 的结果是返回“服务器端”的文件描述符以及所创建的字符设备的主次号。此外，还会返回 TPM 字符设备的编号。例如，如果创建了 `/dev/tpm10` ，则返回的编号（`dev_num`）为 10。

一旦设备创建完成，驱动程序将立即尝试与 TPM 进行通信。所有来自驱动程序的命令都可以从 ioctl 返回的文件描述符中读取。这些命令应立即得到响应。

UAPI
====

.. kernel-doc:: include/uapi/linux/vtpm_proxy.h

.. kernel-doc:: drivers/char/tpm/tpm_vtpm_proxy.c
   :functions: vtpmx_ioc_new_dev
