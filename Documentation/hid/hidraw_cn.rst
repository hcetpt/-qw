下面是提供的英文内容翻译成中文：

================================================================
HIDRAW - 对USB和蓝牙人机接口设备的原始访问
================================================================

hidraw驱动程序为USB和蓝牙人机接口设备（HID）提供了原始接口。它与hiddev的不同之处在于，发送和接收的报告不会通过HID解析器进行解析，而是直接原样发送到设备或从设备接收。
如果用户空间应用程序确切地知道如何与硬件设备通信，并且能够手动构造HID报告，则应使用hidraw。当为定制的HID设备编写用户空间驱动程序时，这种情况经常发生。
hidraw对于那些发送和接收数据方式与其报告描述符不一致的非标准HID设备也很有用。由于hiddev会解析通过其发送和接收的所有报告，并将这些报告与设备的报告描述符进行比较，因此无法使用hiddev与这些非标准设备进行通信。对于这些非标准设备，除了编写自定义内核驱动程序外，hidraw是唯一的选择。
hidraw的一个优点是其在用户空间中的使用独立于底层硬件类型。目前，hidraw针对USB和蓝牙实现了支持。将来，随着采用HID规范的新硬件总线类型的开发，hidraw将会扩展以添加对这些新总线类型的支持。
hidraw使用动态主设备号，这意味着应该依赖udev来创建hidraw设备节点。通常，udev会在/dev目录下直接创建设备节点（例如：/dev/hidraw0）。由于该位置取决于发行版和udev规则，因此应用程序应该使用libudev来定位系统中连接的hidraw设备。有关libudev的教程和一个工作示例可以在以下链接找到：

http://www.signal11.us/oss/udev/
https://web.archive.org/web/2019*/www.signal11.us

HIDRAW API
--------------

read()
-------
read()将读取从HID设备接收到的排队报告。对于USB设备，使用read()读取的报告是从设备通过INTERRUPT IN端点发送的报告。默认情况下，read()会阻塞直到有报告可供读取。可以通过向open()传递O_NONBLOCK标志或将O_NONBLOCK标志设置为fcntl()使read()变为非阻塞模式。
对于使用编号报告的设备，返回的数据的第一个字节将是报告编号；报告数据紧随其后，从第二个字节开始。对于不使用编号报告的设备，报告数据将从第一个字节开始。
write()
-------
write()函数将报告写入设备。对于USB设备，如果设备具有INTERRUPT OUT端点，则报告将通过该端点发送。如果没有，则使用SET_REPORT传输通过控制端点发送报告。
传递给write()的缓冲区的第一个字节应设置为报告编号。如果设备不使用编号报告，则第一个字节应设置为0。报告数据本身应从第二个字节开始。
ioctl()
-------
hidraw支持以下ioctl命令：

HIDIOCGRDESCSIZE：
获取报告描述符大小

此ioctl将获取设备的报告描述符大小。
HIDIOCGRDESC:  
获取报告描述符

此ioctl通过hidraw_report_descriptor结构体返回设备的报告描述符。确保将hidraw_report_descriptor结构体中的size字段设置为从HIDIOCGRDESCSIZE获得的大小。

HIDIOCGRAWINFO:  
获取原始信息

此ioctl将返回一个包含设备总线类型、供应商ID（VID）和产品ID（PID）的hidraw_devinfo结构体。总线类型可以是以下之一：

- BUS_USB
- BUS_HIL
- BUS_BLUETOOTH
- BUS_VIRTUAL

这些定义可以在uapi/linux/input.h中找到。

HIDIOCGRAWNAME(len):  
获取原始名称

此ioctl返回一个字符串，包含设备的供应商和产品字符串。返回的字符串是Unicode格式，UTF-8编码。

HIDIOCGRAWPHYS(len):  
获取物理地址

此ioctl返回一个表示设备物理地址的字符串。对于USB设备，该字符串包含了到设备的物理路径（包括USB控制器、集线器、端口等）。对于蓝牙设备，该字符串包含了设备的硬件（MAC）地址。

HIDIOCSFEATURE(len):  
发送特征报告

此ioctl将向设备发送一个特征报告。根据HID规范，特征报告总是通过控制端点发送。将提供的缓冲区的第一个字节设置为报告编号。对于不使用编号报告的设备，将第一个字节设置为0。报告数据从第二个字节开始。确保相应地设置len值，使其比报告长度多1（以考虑报告编号）。

HIDIOCGFEATURE(len):  
获取特征报告

此ioctl将通过控制端点请求设备的特征报告。提供的缓冲区的第一个字节应设置为请求报告的报告编号。对于不使用编号报告的设备，将第一个字节设置为0。返回的报告缓冲区将在第一个字节包含报告编号，随后是从设备读取的报告数据。对于不使用编号报告的设备，报告数据将从返回缓冲区的第一个字节开始。

HIDIOCSINPUT(len):  
发送输入报告

此ioctl将通过控制端点向设备发送输入报告。在大多数情况下，设置设备的输入HID报告是没有意义且没有效果的，但某些设备可能会选择使用这种方式来设置或重置报告的初始状态。与此报告一起发出的缓冲区格式与HIDIOCSFEATURE相同。
HIDIOCGINPUT(len)：
获取输入报告

此 ioctl（输入/输出控制操作）将通过控制端点请求设备的输入报告。在大多数设备上，如果存在专门用于常规输入报告的输入端点，则这种方式会较慢，但它允许主机请求特定报告编号的值。通常，这被用来请求设备输入报告的初始状态，在应用程序通过常规设备读取接口监听正常报告之前。与此报告一起发出的缓冲区格式与 HIDIOCGFEATURE 的格式相同。

HIDIOCSOUTPUT(len)：
发送输出报告

此 ioctl 将通过控制端点向设备发送输出报告。在大多数设备上，如果存在专门用于常规输出报告的输出端点，则这种方式会较慢，但为了完整性而添加了此功能。通常，这被用来设置设备输出报告的初始状态，在应用程序通过常规设备写入接口发送更新之前。与此报告一起发出的缓冲区格式与 HIDIOCSFEATURE 的格式相同。

HIDIOCGOUTPUT(len)：
获取输出报告

此 ioctl 将通过控制端点从设备请求输出报告。通常，这被用来检索设备输出报告的初始状态，在应用程序根据需要对其进行更新（通过 HIDIOCSOUTPUT 请求或常规设备写入接口）之前。与此报告一起发出的缓冲区格式与 HIDIOCGFEATURE 的格式相同。

示例
------
在 samples/ 目录中，可以找到 hid-example.c 文件，它展示了 read()、write() 和所有 hidraw ioctl 的使用示例。任何人都可以出于任何目的使用这些代码，并且它可以作为开发使用 hidraw 的应用程序的起点。

文档作者：

	Alan Ott <alan@signal11.us>，Signal 11 Software
