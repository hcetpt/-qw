SPDX 许可声明标识符: GPL-2.0

===========================
NCR53C8XX/SYM53C8XX 驱动程序
===========================

编写者：Gerard Roudier <groudier@free.fr>

21 Rue Carnot

95170 DEUIL LA BARRE - 法国

1999年5月29日

.. 目录：

   1. 引言
   2. 支持的芯片和 SCSI 特性
   3. 增强型 896 驱动程序的优势
      3.1 优化的 SCSI 脚本
      3.2 SYM53C896（64位 PCI 双 LVD SCSI 控制器）的新特性
   4. 内存映射 I/O 与普通 I/O
   5. 标记命令队列
   6. 奇偶校验检查
   7. 性能分析信息
   8. 控制命令
      8.1 设置最小同步周期
      8.2 设置宽大小
      8.3 设置并发标记命令的最大数量
      8.4 设置标记命令的顺序类型
      8.5 设置调试模式
      8.6 清除性能计数器
      8.7 设置标志（no_disc）
      8.8 设置详细级别
      8.9 重置目标的所有逻辑单元
      8.10 终止目标所有逻辑单元的所有任务
   9. 配置参数
   10. 启动设置命令
      10.1 语法
      10.2 可用参数
         10.2.1 主奇偶校验检查
         10.2.2 SCSI 奇偶校验检查
         10.2.3 SCSI 断开连接
         10.2.4 特殊功能
         10.2.5 Ultra SCSI 支持
         10.2.6 默认标记命令数量
         10.2.7 默认同步周期因子
         10.2.8 与所有设备协商同步
         10.2.9 详细级别
         10.2.10 调试模式
         10.2.11 最大突发
         10.2.12 LED 支持
         10.2.13 最大宽度
         10.2.14 差分模式
         10.2.15 IRQ 模式
         10.2.16 反向探测
         10.2.17 修复 PCI 配置空间
         10.2.18 串行 NVRAM
         10.2.19 检查 SCSI 总线
         10.2.20 排除某个主机被附加
         10.2.21 为主机建议默认的 SCSI ID
         10.2.22 启用使用 IMMEDIATE ARBITRATION
      10.3 建议的启动设置命令
      10.4 PCI 配置修复启动选项
      10.5 串行 NVRAM 支持启动选项
      10.6 SCSI 总线检查启动选项
      10.7 IMMEDIATE ARBITRATION 启动选项
   11. ncr53c8xx.h 头文件中的一些常量和标志
   12. 安装
   13. 架构相关特性
   14. 已知问题
      14.1 使用 Iomega Jaz 设备时的标记命令问题
      14.2 添加另一个控制器时设备名称发生变化
      14.3 在 WIDE SCSI 控制器上仅使用 8 位设备
      14.4 写入内存并失效期间可能的数据损坏
      14.5 IRQ 共享问题
   15. 解决 SCSI 问题
      15.1 问题跟踪
      15.2 理解硬件错误报告
   16. 同步传输协商表
      16.1 53C875 和 53C860 Ultra-SCSI 控制器的同步时间
      16.2 快速 SCSI-2 53C8XX 控制器的同步时间
   17. 串行 NVRAM 支持（由 Richard Waltham 编写）
      17.1 功能
      17.2 Symbios NVRAM 布局
      17.3 Tekram NVRAM 布局
   18. Big Endian 支持
      18.1 Big Endian CPU
      18.2 NCR 芯片在 Big Endian 模式下的操作

1. 引言
===============

最初的 Linux ncr53c8xx 驱动程序是在 1995 年 11 月由以下人员从 FreeBSD 的 ncr 驱动程序移植过来的：

    - Gerard Roudier <groudier@free.fr>

最初的驱动程序是由以下人员为 386bsd 和 FreeBSD 编写的：

    - Wolfgang Stanglmeier <wolf@cologne.de>
    - Stefan Esser <se@mi.Uni-Koeln.de>

现在，它作为两个驱动程序的捆绑包提供：

- ncr53c8xx 通用驱动程序支持整个 SYM53C8XX 家族，包括最早的 810 rev. 1、最新的 896（双通道 LVD SCSI 控制器）以及新的 895A（单通道 LVD SCSI 控制器）
- sym53c8xx 增强型驱动程序（也称为 896 驱动程序）放弃了对旧芯片的支持，以利用新特性，如自 810A 以来可用的 LOAD/STORE 指令和在 896 和 895A 中可用的硬件相位不匹配

关于 NCR 8xx 家族的技术信息可以在 Michael Will 编写的 PCI-HOWTO 和 Drew Eckhardt 编写的 SCSI-HOWTO 中找到。
有关新芯片的信息可以在 LSILOGIC 网站上找到：

          - http://www.lsilogic.com/

SCSI 标准文档可以在 SYMBIOS FTP 服务器上找到：

          - ftp://ftp.symbios.com/

Eric Youngdale 编写的有用的 SCSI 工具可以在 tsx-11 上找到：

          - ftp://tsx-11.mit.edu/pub/linux/ALPHA/scsi/scsiinfo-X.Y.tar.gz
          - ftp://tsx-11.mit.edu/pub/linux/ALPHA/scsi/scsidev-X.Y.tar.gz

这些工具不是 ALPHA 版本，但相当干净且工作良好。
拥有 'scsiinfo' 包是必不可少的。
这份简短的文档描述了通用和增强型驱动程序的功能、配置参数以及通过 proc SCSI 文件系统读写操作可用的控制命令。
该驱动程序已经在 linux/i386、Linux/Alpha 和 Linux/PPC 上测试通过。
最新版本的驱动程序和补丁可以在以下位置找到：

          - ftp://ftp.tux.org/pub/people/gerard-roudier

或

          - ftp://ftp.symbios.com/mirror/ftp.tux.org/pub/tux/roudier/drivers

我不是英语母语者，这个 README 文件中可能有很多错误。任何帮助都将受到欢迎。

2. 支持的芯片和 SCSI 特性
====================================

以下特性适用于所有芯片：

    - 同步协商
    - 断开连接
    - 标记命令队列
    - SCSI 奇偶校验检查
    - 主奇偶校验检查

“宽协商”对于允许它的芯片是支持的。
下表显示了 NCR 8xx 家族芯片的一些特性及其支持的驱动程序。
+--------+-----------+-----+-----------+------------+------------+------------+
|        |           |     |           |            |受通用驱动|受增强驱动|
|        |板载       |     |           |            |程序支持  |程序支持  |
|芯片    |SDMS BIOS  |宽  |SCSI标准   |最大同步速  |            |            |
+--------+-----------+-----+-----------+------------+------------+------------+
|810     |否         | 否  | FAST10    | 10 MB/s    | 是         | 否         |
+--------+-----------+-----+-----------+------------+------------+------------+
|810A    |否         | 否  | FAST10    | 10 MB/s    | 是         | 是         |
+--------+-----------+-----+-----------+------------+------------+------------+
|815     |是         | 否  | FAST10    | 10 MB/s    | 是         | 否         |
+--------+-----------+-----+-----------+------------+------------+------------+
|825     |是         | 是  | FAST10    | 20 MB/s    | 是         | 否         |
+--------+-----------+-----+-----------+------------+------------+------------+
|825A    |是         | 是  | FAST10    | 20 MB/s    | 是         | 是         |
+--------+-----------+-----+-----------+------------+------------+------------+
|860     |否         | 否  | FAST20    | 20 MB/s    | 是         | 是         |
+--------+-----------+-----+-----------+------------+------------+------------+
|875     |是         | 是  | FAST20    | 40 MB/s    | 是         | 是         |
+--------+-----------+-----+-----------+------------+------------+------------+
|876     |是         | 是  | FAST20    | 40 MB/s    | 是         | 是         |
+--------+-----------+-----+-----------+------------+------------+------------+
|895     |是         | 是  | FAST40    | 80 MB/s    | 是         | 是         |
+--------+-----------+-----+-----------+------------+------------+------------+
|895A    |是         | 是  | FAST40    | 80 MB/s    | 是         | 是         |
+--------+-----------+-----+-----------+------------+------------+------------+
|896     |是         | 是  | FAST40    | 80 MB/s    | 是         | 是         |
+--------+-----------+-----+-----------+------------+------------+------------+
|897     |是         | 是  | FAST40    | 80 MB/s    | 是         | 是         |
+--------+-----------+-----+-----------+------------+------------+------------+
|1510D   |是         | 是  | FAST40    | 80 MB/s    | 是         | 是         |
+--------+-----------+-----+-----------+------------+------------+------------+
|1010    |是         | 是  | FAST80    |160 MB/s    | 否         | 是         |
+--------+-----------+-----+-----------+------------+------------+------------+
|1010_66 |是         | 是  | FAST80    |160 MB/s    | 否         | 是         |
|[1]_    |           |     |           |            |            |            |
+--------+-----------+-----+-----------+------------+------------+------------+

.. [1] 芯片支持33MHz和66MHz PCI总线
其他支持功能的总结：

:模块：                  允许加载驱动
:内存映射I/O：           提升性能
:性能分析信息：          从proc SCSI文件系统读取操作
:控制命令：              对proc SCSI文件系统的写入操作
:调试信息：              写入syslog（仅限专家）
:串行NVRAM：             支持Symbios和Tekram格式

- 分散/集中
- 共享中断
- 引导设置命令

3. 增强型896驱动的优势
=======================

3.1 优化的SCSI脚本
-------------------

810A、825A、875、895、896和895A支持新的SCSI脚本指令LOAD和STORE，这些指令允许在IO寄存器与内存之间更快地移动最多一个DWORD的数据，比53c7xx和53c8xx系列支持的MOVE MEMORY指令要快得多。LOAD/STORE指令支持绝对和DSA相对寻址模式。SCSI脚本已完全重写，使用LOAD/STORE替代MOVE MEMORY指令。
3.2 SYM53C896（64位PCI双LVD SCSI控制器）的新特性
------------------------------------------------------

896和895A允许从脚本中处理相位不匹配上下文（避免了相位不匹配中断，该中断会停止SCSI处理器直到C代码保存传输上下文）。如果没有使用LOAD/STORE指令实现这一点将非常困难，并且我甚至不想尝试。896芯片支持64位PCI事务和寻址，而895A支持32位PCI事务和64位寻址。这些芯片的脚本处理器不是真正的64位，而是使用段寄存器来处理第32至63位。另一个有趣的功能是，针对芯片内部RAM（8K）的LOAD/STORE指令仍然保留在芯片内部。

由于使用了LOAD/STORE脚本指令，此驱动不支持以下芯片：
- SYM53C810版本<0x10（16）
- SYM53C815所有版本
- SYM53C825版本<0x10（16）

4. 内存映射I/O与普通I/O
=========================

内存映射I/O的延迟比普通I/O低。自Linux-1.3.x以来，使用内存映射I/O而非普通I/O。内存映射I/O在大多数硬件配置上似乎工作正常，但一些设计不佳的主板可能会破坏此功能。配置选项CONFIG_SCSI_NCR53C8XX_IOMAPPED强制驱动在所有情况下使用普通I/O。

5. 标记命令队列
=================

向设备同时排队超过一个命令可使其基于实际磁头位置和机械特性进行优化。此功能还可以减少平均命令延迟。
为了充分利用此功能，设备必须具有合理的缓存大小（对于缓存小于或等于128 KB的低端硬盘，不要期望有奇迹发生）。
一些已知的SCSI设备不正确支持带标签的命令排队功能。通常，修复这类问题的固件更新版本可以在各自厂商的网站上找到。
我可以说的是，在我的机器上使用的硬盘在启用带标签的命令排队功能时表现良好：

- IBM S12 0662
- Conner 1080S
- Quantum Atlas I
- Quantum Atlas II

如果你的控制器有NVRAM，你可以通过用户设置工具为每个目标配置此功能。Tekram 设置程序允许将排队命令的最大数量调整到32个。而Symbios 设置程序仅允许启用或禁用此功能。
当前默认设置的设备同时排队的带标签命令的最大数量为8个。这个值适用于大多数SCSI硬盘。对于大容量SCSI硬盘（≥2GB，缓存≥512KB，平均寻道时间≤10ms），使用更大的值可能会提高性能。
sym53c8xx驱动支持每设备最多255个命令，通用的ncr53c8xx驱动支持每设备最多64个命令，但超过32个命令一般没有太多意义，除非你使用的是非常大的硬盘或磁盘阵列。值得注意的是，大多数新硬盘似乎不能接受超过64个同时的命令。因此，使用超过64个排队命令可能只是浪费资源。
如果你的控制器没有NVRAM或者由SDMS BIOS/SETUP管理，你可以从启动命令行中配置带标签的排队功能和设备排队深度。例如：

```
ncr53c8xx=tags:4/t2t3q15-t4q7/t1u0q32
```

将设置带标签命令的排队深度如下：

- 控制器0上的目标2的所有LUN --> 15
- 控制器0上的目标3的所有LUN --> 15
- 控制器0上的目标4的所有LUN --> 7
- 控制器1上的目标1的LUN 0 --> 32
- 其他所有目标/LUN --> 4

在某些特殊条件下，一些SCSI硬盘的固件可能会返回一个队列满（QUEUE FULL）状态。这种行为由驱动程序通过以下启发式方法进行管理：

- 每次返回队列满状态时，带标签的排队深度会减少到实际断开连接的命令数
- 每完成1000个成功的SCSI命令后，如果当前限制允许，则增加可排队命令的最大数量
由于接收和处理队列满状态会消耗资源，默认情况下，驱动程序会通知用户这一问题，并显示实际使用的命令数及其状态以及对设备排队深度变化的决策。
驱动程序用于处理队列满的启发式方法确保了对性能的影响不会太严重。你可以通过将详细级别设置为零来消除这些消息，具体方法如下：

第一种方法：
使用`ncr53c8xx=verb:0`选项启动系统
第二种方法：
在系统启动后，对与您的控制器对应的 proc 文件系统条目应用 "setverbose 0" 控制命令。

6. 奇偶校验检查
=================

该驱动支持 SCSI 奇偶校验检查和 PCI 总线主控器的奇偶校验检查。这些功能必须启用以确保数据传输的安全性。然而，某些有缺陷的设备或主板可能会在奇偶校验方面出现问题。您可以通过在引导命令行中输入相应的选项来禁用 PCI 奇偶校验或 SCSI 奇偶校验检查（参见第 10 节：引导设置命令）。

7. 性能分析信息
========================

性能分析信息可通过 proc SCSI 文件系统获取。由于收集性能分析信息可能会影响性能，因此此功能默认是禁用的，并且需要在编译配置选项中将其设置为 Y。
与主机关联的设备具有以下路径名：

          /proc/scsi/ncr53c8xx/N     (N=0,1,2 ....)

通常，在硬件配置中只使用一块板卡，因此该设备的路径为：

          /proc/scsi/ncr53c8xx/0

但是，如果驱动程序作为模块加载，则每次加载驱动程序时主机的数量都会递增。
要显示性能分析信息，请输入：

         cat /proc/scsi/ncr53c8xx/0

您将看到如下所示的文本：

    一般信息：
    芯片 NCR53C810，设备ID 0x1，修订版ID 0x2
    I/O端口地址 0x6000，IRQ编号 10
    使用虚拟地址 0x282c000 的内存映射I/O
    同步传输周期 25，每个逻辑单元的最大命令数 4
    性能分析信息：
    num_trans    = 18014
    num_kbytes   = 671314
    num_disc     = 25763
    num_break    = 1673
    num_int      = 1685
    num_fly      = 18038
    ms_setup     = 4940
    ms_data      = 369940
    ms_disc      = 183090
    ms_post      = 1320

一般信息易于理解。设备ID和修订版ID用于识别SCSI芯片，如下表所示：

======= ============= ===========
芯片    设备ID        修订版ID
======= ============= ===========
810       0x1           < 0x10
810A      0x1           >= 0x10
815       0x4
825       0x3           < 0x10
860       0x6
825A      0x3           >= 0x10
875       0xf
895       0xc
======= ============= ==========

性能分析信息在完成 SCSI 命令时更新。当主机适配器连接时会分配一个数据结构并清零。因此，如果驱动程序是一个模块，则每次加载驱动程序时性能计数器都会被清除。“clearprof”命令允许您随时清除这些计数器。
以下计数器可供使用：

（“num”前缀表示“数量”，“ms”表示毫秒）

num_trans
	已完成命令的数量
	示例：18014 条已完成的命令

num_kbytes
	已传输的千字节数
	示例：671 MB 已传输

num_disc
	SCSI 断开连接的数量
	示例：25763 次 SCSI 断开连接

num_break
	脚本中断的数量（阶段不匹配）
	示例：1673 次脚本中断

num_int
	非“即时”的中断数量
	示例：1685 次非“即时”的中断

num_fly
	“即时”中断的数量
	示例：18038 次“即时”中断

ms_setup
	SCSI 命令设置所花费的时间
	示例：4.94 秒

ms_data
	数据传输所花费的时间
	示例：369.94 秒用于数据传输

ms_disc
	SCSI 断开连接所花费的时间
	示例：183.09 秒处于断开状态

ms_post
	命令后处理所花费的时间
	（从获取 SCSI 状态到完成命令调用的时间）
	示例：1.32 秒用于后处理

由于系统时钟每 1/100 秒的滴答，“ms_post”时间可能是错误的。
在上述示例中，我们得到了 18038 次“即时”中断，而只有 1673 次脚本中断，通常是由于在散列列表段内出现的断开连接。
8. 控制命令
===================

控制命令可以通过对 proc SCSI 文件系统的写操作发送给驱动程序。通用命令语法如下：

      echo "<verb> <parameters>" >/proc/scsi/ncr53c8xx/0
      （假设控制器编号为 0）

使用 "all" 作为 "<target>" 参数时，以下命令将应用于 SCSI 链中的所有目标（除控制器外）。

可用的命令有：

8.1 设置最小同步周期因子
-----------------------------------------

    setsync <target> <period factor>

    :target:   目标编号
    :period:   最小同步周期
最大速度 = 1000 / (4 * 周期因子)，特殊情况除外
指定一个 255 的周期，以强制异步传输模式
- 10 表示 25 纳秒同步周期
- 11 表示 30 纳秒同步周期
- 12 表示 50 纳秒同步周期

8.2 设置宽大小
-----------------

    setwide <target> <size>

    :target:   目标编号
    :size:     0=8 位, 1=16 位

8.3 设置并发标记命令的最大数量
----------------------------------------------------

    settags <target> <tags>

    :target:   目标编号
    :tags:     并发标记命令的数量
               不应大于 SCSI_NCR_MAX_TAGS（默认：8）

8.4 设置标记命令的顺序类型
-------------------------------------

    setorder <order>

    :order:    可能的值有三个：

               simple:
			对所有操作（读和写）使用 SIMPLE TAG

               ordered:
			对所有操作使用 ORDERED TAG

               default:
			使用默认的标记类型，
                        对读操作使用 SIMPLE TAG
                        对写操作使用 ORDERED TAG

8.5 设置调试模式
------------------

    setdebug <调试标志列表>

    可用的调试标志：

	======== ========================================================
        alloc    打印关于内存分配（ccb, lcb）的信息
        queue    打印关于命令启动队列插入的信息
        result   在 CHECK CONDITION 状态下打印 sense 数据
        scatter  打印关于 scatter 过程的信息
        scripts  打印关于脚本绑定过程的信息
	tiny     打印最少的调试信息
	timing   打印 NCR 芯片的定时信息
	nego     打印关于 SCSI 协商的信息
	phase    打印关于脚本中断的信息
	======== ========================================================

    使用 "setdebug" 且不带参数来重置调试标志

8.6 清除性能计数器
--------------------------

    clearprof

    当传输的数据量达到 1000 GB 时，性能计数器会自动清零，以避免溢出。
“clearprof” 命令允许您随时清除这些计数器。

8.7 设置标志（no_disc）
----------------------

    setflag <target> <flag>

    target:    目标编号

    目前只有一个可用的标志：

        no_disc:   不允许目标断开连接
不指定任何标志即可重置该标志。例如：

    setflag 4
      将重置目标 4 的 no_disc 标志，从而允许其断开连接
setflag all
      将允许 SCSI 总线上所有设备断开连接
8.8 设置详细级别
---------------------

    setverbose #level

    驱动程序默认的详细级别是 1。此命令允许在启动后更改驱动程序的详细级别。

8.9 重置目标的所有逻辑单元
---------------------------------------

    resetdev <target>

    :target:   目标编号

    驱动程序将尝试向目标发送 BUS DEVICE RESET 消息（仅由SYM53C8XX驱动支持，并提供用于测试目的）。

8.10 终止目标所有逻辑单元的所有任务
-----------------------------------------------------

    cleardev <target>

    :target:   目标编号

    驱动程序将尝试向目标的所有逻辑单元发送 ABORT 消息（仅由SYM53C8XX驱动支持，并提供用于测试目的）。

9. 配置参数
===========================

如果您的所有设备固件都足够完善，驱动程序支持的所有功能都可以在启动时启用。然而，如果任何一个设备在某些SCSI特性上存在缺陷，您可以在Linux启动时禁用驱动程序对该特性的支持，并且只在那些能够安全支持该特性的设备上，在启动后启用这些特性。
CONFIG_SCSI_NCR53C8XX_IOMAPPED       （默认答案：n）
    如果怀疑您的主板不允许内存映射I/O，请回答“y”。
    可能会稍微降低性能。此选项对于Linux/PPC是必需的，并且无论您在此处选择什么都会被使用。由于所有IO都是内存映射的，因此Linux/PPC在这种选项下不会遭受性能损失。
CONFIG_SCSI_NCR53C8XX_DEFAULT_TAGS    （默认答案：8）
    默认标记命令队列深度。
CONFIG_SCSI_NCR53C8XX_MAX_TAGS         （默认答案：8）
    此选项允许您指定可以排队到设备的最大标记命令数量。支持的最大值为 32。
CONFIG_SCSI_NCR53C8XX_SYNC            （默认答案：5）
    此选项允许您指定驱动程序在启动时用于同步数据传输协商的频率（单位：MHz）。
    此频率可以通过“setsync”控制命令稍后进行更改。
0 表示“异步数据传输”

CONFIG_SCSI_NCR53C8XX_FORCE_SYNC_NEGO（默认答案：n）
    强制所有 SCSI-2 设备进行同步协商
某些 SCSI-2 设备在查询响应的第 7 字节中没有报告此特性，但实际上支持它（例如 TAMARACK 扫描仪）

CONFIG_SCSI_NCR53C8XX_NO_DISCONNECT（默认且唯一合理答案：n）
    如果您怀疑某个设备不正确地支持断开连接，可以回答“y”。这样，所有 SCSI 设备在执行长时间 SCSI 操作时也不会断开总线

CONFIG_SCSI_NCR53C8XX_SYMBIOS_COMPAT
    真正的 SYMBIOS 板卡使用 GPIO0 作为输出来控制控制器 LED，并用 GPIO3 位作为标志来指示单端/差分接口
如果系统的所有板卡都是真正的 SYMBIOS 板卡或使用 SYMBIOS 的 BIOS 和驱动程序，则应启用此选项
如果系统中至少有一块基于 53C8XX 的 SCSI 板卡且具有供应商特定的 BIOS，则不得启用此选项
例如，Tekram DC-390/U、DC-390/W 和 DC-390/F SCSI 控制器使用供应商特定的 BIOS，并且已知它们不使用 SYMBIOS 兼容的 GPIO 布线。因此，如果系统安装了此类板卡，则不得启用此选项

CONFIG_SCSI_NCR53C8XX_NVRAM_DETECT
    启用对 Symbios 和一些 Symbios 兼容卡以及 Tekram DC390W/U/F 卡上的串行 NVRAM 数据读取的支持。对于拥有一个以上 Symbios 兼容控制器且至少有一个带有串行 NVRAM 的系统，或者拥有混合 Symbios 和 Tekram 卡的系统非常有用。可设置主机适配器的引导顺序为非默认顺序或“反向探测”顺序
此外，还允许区分 Symbios 和 Tekram 卡，从而可以在混合 Symbios 和 Tekram 卡的系统中设置 CONFIG_SCSI_NCR53C8XX_SYMBIOS_COMPAT，以便 Symbios 卡能够充分利用 Symbios 的全部功能（如差分模式、LED 引脚），而不会给 Tekram 卡带来问题
10. 启动设置命令
=======================

10.1 语法
-----------

设置命令可以在启动时传递给驱动程序，或者作为字符串变量使用 'insmod' 进行传递。
针对 ncr53c8xx (sym53c8xx) 驱动的启动设置命令以驱动名称 "ncr53c8xx="（或 "sym53c8xx="）开始。内核语法解析器随后期望一个可选的由逗号分隔的整数列表，后面跟着一个可选的由逗号分隔的字符串列表。例如，在 lilo 提示符下的启动设置命令如下所示：

    lilo: linux root=/dev/hda2 ncr53c8xx=tags:4,sync:10,debug:0x200

- 启用标记命令，最多排队 4 个标记命令
- 将同步协商速度设置为每秒 10 兆传输
- 设置 DEBUG_NEGO 标志
由于在使用 'insmod' 定义字符串变量时不允许使用逗号，因此驱动程序也接受 <空格> 作为选项分隔符。
以下命令将安装带有相同选项的驱动模块：

    insmod ncr53c8xx.o ncr53c8xx="tags:4 sync:10 debug:0x200"

目前，整数参数列表被驱动程序忽略。将来会使用这些参数来允许每个控制器的独立配置。
每个字符串参数必须指定为 "keyword:value"。只允许使用小写字母和数字。
在一个包含多个 53C8xx 适配器的系统中，insmod 会在每个适配器上安装指定的驱动。要排除某个芯片，请使用 'excl' 关键字。
以下命令序列：

    insmod sym53c8xx sym53c8xx=excl:0x1400
    insmod ncr53c8xx

将在所有适配器上安装 sym53c8xx 驱动，除了位于 I/O 端口地址 0x1400 的适配器，并在该适配器上安装 ncr53c8xx 驱动。
10.2 可用参数
------------------------

10.2.1 主校验和检查
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

	======     ========
        mpar:y     启用
        mpar:n     禁用
	======     ========

10.2.2 SCSI 校验和检查
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

	======     ========
        spar:y     启用
        spar:n     禁用
	======     ========

10.2.3 SCSI 断开连接
^^^^^^^^^^^^^^^^^^^^^^^^^^^

	======     ========
        disc:y     启用
        disc:n     禁用
	======     ========

10.2.4 特殊功能
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

仅适用于 810A、825A、860、875 和 895 控制器
对其他控制器无效
=======    =================================================
        specf:y    （或 1）启用
        specf:n    （或 0）禁用
        specf:3           启用，但不包括内存写入和失效
	=======    =================================================

默认驱动设置为 'specf:3'。因此，要在启动配置命令中启用内存写入和失效，需要指定选项 'specf:y'

10.2.5 Ultra SCSI 支持
^^^^^^^^^^^^^^^^^^^^^^^^^^

仅适用于 860、875、895、895a、896、1010 和 1010_66 控制器
对其他控制器无效
=======    ========================
        ultra:n    所有 Ultra 速度启用
        ultra:2    Ultra2 启用
        ultra:1    Ultra 启用
        ultra:0    Ultra 速度禁用
	=======    ========================

10.2.6 默认标记命令数量
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

	======================= ===============================
        tags:0     （或 tags:1 ）禁用标记命令队列
        tags:#tags (#tags > 1) 启用标记命令队列
	======================= ===============================

#tags 将被截断到最大排队命令配置参数
此选项还允许为每个支持标记命令队列的设备指定命令队列深度
示例::

      ncr53c8xx=tags:10/t2t3q16-t5q24/t1u2q32

将设置设备队列深度如下：

- 控制器 #0 目标 #2 和目标 #3                 -> 16 条命令，
- 控制器 #0 目标 #5                           -> 24 条命令，
- 控制器 #1 目标 #1 逻辑单元 #2               -> 32 条命令，
- 其他所有逻辑单元（所有目标，所有控制器）    -> 10 条命令

10.2.7 默认同步周期因子
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

============ ========================================================
sync:255     禁用（异步传输模式）
sync:#factor
	     ============     =======================================
	     #factor = 10     Ultra-2 SCSI 40 兆次传输/秒
	     #factor = 11     Ultra-2 SCSI 33 兆次传输/秒
	     #factor < 25     Ultra SCSI 20 兆次传输/秒
	     #factor < 50     快速 SCSI-2
	     ============     =======================================
============ ========================================================

在所有情况下，驱动程序将使用根据 NCR53C8XX 芯片类型由控制器支持的最小传输周期。

10.2.8 与所有设备协商同步
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
（强制同步协商）

        =====      =========
        fsn:y      启用
        fsn:n      禁用
        =====      ==========

10.2.9 详细级别
^^^^^^^^^^^^^^^^^^^^^^^

        ======     =========
        verb:0     最小
        verb:1     正常
        verb:2     过多
        ======     =========

10.2.10 调试模式
^^^^^^^^^^^^^^^^^^

========   ==================================================================
debug:0    清除调试标志
debug:#x   设置调试标志

	    #x 是一个整数值，结合以下 2 的幂值：

	    =============  ======
	    DEBUG_ALLOC       0x1
	    DEBUG_PHASE       0x2
	    DEBUG_POLL        0x4
	    DEBUG_QUEUE       0x8
	    DEBUG_RESULT     0x10
	    DEBUG_SCATTER    0x20
	    DEBUG_SCRIPT     0x40
	    DEBUG_TINY       0x80
	    DEBUG_TIMING    0x100
	    DEBUG_NEGO      0x200
	    DEBUG_TAGS      0x400
	    DEBUG_FREEZE    0x800
	    DEBUG_RESTART  0x1000
	    =============  ======
========   ==================================================================

您可以安全地使用 DEBUG_NEGO。但是，这些标志中的某些可能会生成大量的系统日志消息。
10.2.11 Burst 最大值
^^^^^^^^^^^^^^^^^

=========  ==================================================================
burst:0    禁用 burst
burst:255  从初始 IO 寄存器设置获取 burst 长度
burst:#x   启用 burst（最多进行 1<<#x 次 burst 传输）

       #x 是一个整数值，表示 burst 传输最大次数的以 2 为底的对数
NCR53C875 和 NCR53C825A 支持最多 128 次 burst 传输（#x = 7）
其他芯片仅支持最多 16 次（#x = 4）
这是一个最大值。驱动程序根据芯片和修订版本 ID 设置 burst 长度，默认使用芯片支持的最大值
=========  ==================================================================

10.2.12 LED 支持
^^^^^^^^^^^^^^^^^^^

        =====      ===================
        led:1      启用 LED 支持
        led:0      禁用 LED 支持
        =====      ===================

如果您的 SCSI 板卡不使用 SDMS BIOS，请不要启用 LED 支持（详见“配置参数”）

10.2.13 最大宽模式
^^^^^^^^^^^^^^^^

        ======     ===================
        wide:1      启用宽 SCSI
        wide:0      禁用宽 SCSI
        ======     ===================

一些 SCSI 板卡使用 875（超宽）并且只提供窄连接器。如果您已通过 50 针到 68 针电缆转换器连接了一个宽设备，则任何被接受的宽协商都会中断后续的数据传输。在这种情况下，在启动命令中使用 “wide:0” 将会有帮助。

10.2.14 差分模式
^^^^^^^^^^^^^^^^^^^^^^^^^

	======	=================================
        diff:0	永不设置差分模式
        diff:1	如果 BIOS 设置了则设置差分模式
        diff:2	始终设置差分模式
        diff:3	如果 GPIO3 未设置则设置差分模式
	======	=================================

10.2.15 中断模式
^^^^^^^^^^^^^^^^

	=========  ========================================================
        irqm:0     始终使用开漏模式
        irqm:1     使用初始设置（假定为 BIOS 设置）
        irqm:2     始终使用推挽模式
        irqm:0x10  在请求中断时，驱动程序不会使用 IRQF_SHARED 标志
	=========  ========================================================

（位 0x10 和 0x20 可以与硬件中断模式选项结合使用）

10.2.16 反向探测
^^^^^^^^^^^^^^^^^

	=========   ========================================================
        revprob:n   按以下顺序从 PCI 配置中探测芯片 ID：810, 815, 820, 860, 875, 885, 895, 896
        revprob:y   按相反顺序探测芯片 ID
	=========   ========================================================
=========   ========================================================

10.2.17 修复 PCI 配置空间
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        pcifix:<选项位>

    可用的选项位：

	===    ===============================================================
        0x0    不尝试修复 PCI 配置空间寄存器值
0x1    如果未设置，则设置 PCI 缓存行大小寄存器
0x2    在 PCI 命令寄存器中设置写入和无效位
0x4    根据突发最大值必要时增加 PCI 延迟计时器
===    ===============================================================

    使用 'pcifix:7' 以允许驱动程序修复所有 PCI 功能
10.2.18 串行 NVRAM
^^^^^^^^^^^^^^^^^^^^

	=======     =========================================
        nvram:n     不查找串行 NVRAM
        nvram:y     检测控制器上的串行 NVRAM
	=======     =========================================

        （二进制形式）
        mvram=<位选项>

        ====   =================================================================
        0x01   查找 NVRAM  (等同于 nvram=y)
        0x02   忽略所有设备的 NVRAM “同步协商” 参数
        0x04   忽略所有设备的 NVRAM “宽协商” 参数
        0x08   忽略所有设备的 NVRAM “启动时扫描” 参数
        0x80   同时附加在 NVRAM 中设置为关闭状态的控制器（仅适用于 sym53c8xx）
        ====   =================================================================

10.2.19 检查 SCSI 总线
^^^^^^^^^^^^^^^^^^^^^^

        buschk:<选项位>

    可用的选项位：

        ====   ================================================
        0x0:   不检查
0x1:   检查并在出现错误时不附加控制器
0x2:   检查并在出现错误时仅警告
0x4:   禁用 SCSI 总线完整性检查
====   ================================================

10.2.20 排除某个主机的附加
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

        excl=<io_address>

    防止给定 io 地址处的主机被附加
例如，`ncr53c8xx=excl:0xb400,excl:0xc000` 表示 ncr53c8xx 驱动程序不应在地址 0xb400 和 0xc000 上附加主机。

10.2.21 建议默认的 SCSI ID 用于主机
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

	==========	==========================================
        hostid:255	不建议使用任何 ID
hostid:#x	(0 < x < 7) 建议使用 x 作为主机的 SCSI ID
==========	==========================================

如果可以从 NVRAM 获取主机的 SCSI ID，驱动程序将忽略任何通过启动选项建议的值。否则，如果提供了不同于 255 的建议值，则会使用该值。否则，它将尝试推断硬件中先前设置的值，并在硬件值为零时使用 7。

10.2.22 启用立即仲裁功能
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

（仅由 sym53c8xx 驱动程序支持。详见 10.7）

=======   =================================================================
iarb:0    不使用此功能
iarb:#x   根据以下位字段使用此功能：

	  ========= =======================================================
	  bit 0 (1) 当发起者在仲裁 SCSI 总线时被重新选择时启用 IARB
(#x >> 4) 如果发起者赢得仲裁并有其他命令发送到设备时，连续设置 IARB 的最大次数
========= =======================================================
=======   =================================================================

启动安全模式
    safe:y   加载以下假设的安全初始配置

  ========================	======================	==========
  主校验			禁用		mpar:n
  SCSI 校验			启用		spar:y
  断开连接			不允许		disc:n
  特殊功能			禁用		specf:n
  Ultra SCSI			禁用		ultra:n
  强制同步协商			禁用		fsn:n
  反向探测			禁用		revprob:n
  PCI 修复			禁用		pcifix:0
  串行 NVRAM			启用		nvram:y
  详细级别			2			verb:2
  标记命令队列			禁用		tags:0
  同步协商			禁用		sync:255
  调试标志			无			debug:0
  爆发长度			来自 BIOS 设置	burst:255
  LED 支持			禁用		led:0
  宽带支持			禁用		wide:0
  稳定时间			10 秒		settle:10
  差分支持			来自 BIOS 设置	diff:1
  中断模式			来自 BIOS 设置	irqm:1
  SCSI 总线检查			错误时不附加	buschk:1
  立即仲裁			禁用		iarb:0
  ========================	======================	==========

10.3 推荐的启动配置命令
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

如果驱动程序使用默认选项进行配置，等效的启动配置如下所示：

   `ncr53c8xx=mpar:y,spar:y,disc:y,specf:3,fsn:n,ultra:2,fsn:n,revprob:n,verb:1\  
             tags:0,sync:50,debug:0,burst:7,led:0,wide:1,settle:2,diff:0,irqm:0`

对于安装磁盘或安全但不快速的系统，启动配置可以是：

    `ncr53c8xx=safe:y,mpar:y,disc:y`  
    `ncr53c8xx=safe:y,disc:y`  
    `ncr53c8xx=safe:y,mpar:y`  
    `ncr53c8xx=safe:y`

我的个人系统使用以下等效配置工作完美：

   `ncr53c8xx=mpar:y,spar:y,disc:y,specf:1,fsn:n,ultra:2,fsn:n,revprob:n,verb:1\  
             tags:32,sync:12,debug:0,burst:7,led:1,wide:1,settle:2,diff:0,irqm:0`

当详细级别为 2 时，驱动程序会打印其实际配置。你可以尝试 `ncr53c8xx=verb:2` 来获取驱动程序的“静态”配置，或者在启动配置命令中添加 `verb:2` 以检查驱动程序实际使用的配置。

10.4 PCI 配置修复启动选项
-----------------------------------------

`pcifix:<option bits>`

可用的选项位：

    ===      =====================================================
    0x1      如果未设置，则设置 PCI 缓存行大小寄存器
    0x2      在 PCI 命令寄存器中设置写入和无效位
使用 'pcifix:3' 以允许驱动程序修复两个 PCI 特性
这些选项仅适用于新的 SYMBIOS 芯片 810A、825A、860、875 和 895，并且仅支持 Pentium 和 486 级别的处理器
最近的 SYMBIOS 53C8XX SCSI 处理器能够使用 PCI 多读和 PCI 写入及无效命令。这些特性需要在芯片的 PCI 配置空间中正确设置缓存行大小寄存器。另一方面，只有当 PCI 命令寄存器中的相应位被设置为 1 时，芯片才会使用 PCI 写入及无效命令。
并非所有的 PCI BIOS 会设置 53C8XX 芯片的 PCI 缓存行寄存器和 PCI 写入及无效位
对于某些 PCI/内存控制器，优化的 PCI 访问可能会出现问题，或者与某些 PCI 板卡存在兼容性问题
在我的上一个系统（MB Triton HX / 53C875 / 53C810A）上，这个修复工作非常完美
如果您决定使用这些选项，您将自行承担风险
10.5 串行 NVRAM 支持引导选项
-------------------------------------
nvram:n     不查找串行 NVRAM
nvram:y     测试控制器上的板载串行 NVRAM
-------------------------------------

此选项也可以作为一个十六进制值输入，以便控制驱动程序从 NVRAM 中获取哪些信息以及忽略哪些信息
详细信息请参见“17. 串行 NVRAM 支持”
当启用此选项时，驱动程序会尝试检测所有使用串行 NVRAM 的板卡。这种内存用于保存用户设置参数
驱动程序能够从 NVRAM 中获取的参数取决于所使用的数据格式，如下所示：

+-------------------------------+------------------+--------------+
|                               | Tekram 格式      | Symbios 格式  |
+-------------------------------+------------------+--------------+
| 通用和主机参数                |                  |              |
+-------------------------------+------------------+--------------+
| * 启动顺序                    |        N         |       Y      |
+-------------------------------+------------------+--------------+
| * 主机 SCSI ID                |        Y         |       Y      |
+-------------------------------+------------------+--------------+
| * SCSI 奇偶校验检查            |        Y         |       Y      |
+-------------------------------+------------------+--------------+
| * 详细启动信息                |        N         |       Y      |
+-------------------------------+------------------+--------------+
| SCSI 设备参数                 |                  |              |
+-------------------------------+------------------+--------------+
| * 同步传输速度                |        Y         |       Y      |
+-------------------------------+------------------+--------------+
| * 宽 16 / 窄                  |        Y         |       Y      |
+-------------------------------+------------------+--------------+
| * 标记命令队列启用            |        Y         |       Y      |
+-------------------------------+------------------+--------------+
| * 断开连接启用                |        Y         |       Y      |
+-------------------------------+------------------+--------------+
| * 启动时扫描                  |        N         |       Y      |
+-------------------------------+------------------+--------------+

为了加快系统启动速度，对于每个未配置“启动时扫描”选项的设备，驱动程序会在接收到该设备的第一个 TEST UNIT READY 命令时强制错误。
某些 SDMS BIOS 版本似乎无法干净地启动非常快的硬盘。在这种情况下，您不能用优化的参数值配置 NVRAM。
“nvram”启动选项可以以十六进制形式输入，以便忽略 NVRAM 中配置的一些选项，如下所示：

mvram=<位选项>

      ====   =================================================================
      0x01   查找 NVRAM（等同于 nvram=y）
      0x02   忽略所有设备的 NVRAM “同步协商”参数
      0x04   忽略所有设备的 NVRAM “宽协商”参数
      0x08   忽略所有设备的 NVRAM “启动时扫描”参数
      0x80   还将附上 NVRAM 中设置为关闭的控制器（仅限 sym53c8xx）
      ====   =================================================================

选项 0x80 仅由 sym53c8xx 驱动程序支持，并且默认是禁用的。结果，默认情况下（未设置此选项），sym53c8xx 驱动程序不会附上 NVRAM 中设置为关闭的控制器。
ncr53c8xx 总是尝试附上所有的控制器。由于据报告会使长期使用此驱动程序的用户感到困惑，因此没有将选项 0x80 添加到 ncr53c8xx 驱动程序中。如果您希望某个控制器在 Linux 启动时不被 ncr53c8xx 驱动程序附上，必须使用 'excl' 驱动程序启动选项。
10.6 SCSI 总线检查启动选项
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

当此选项设置为非零值时，驱动程序会在断言 SCSI 重置线后的 100 微秒检查 SCSI 线的逻辑状态。
驱动程序只是读取 SCSI 线并检查除了 RESET 外的所有线都读为 FALSE。
由于 SCSI 设备应在 SCSI 重置信号断言后最多 800 纳秒释放总线，任何读为 TRUE 的信号可能表示存在 SCSI 总线问题。
不幸的是，以下常见的 SCSI 总线问题未能被检测到：

- 只安装了一个终止器
- 终止器位置错误
### 不良终结器
另一方面，不良的电缆、损坏的设备或不合规的设备……都可能导致驱动程序读取的 SCSI 信号出错。

#### 10.7 立即仲裁启动选项
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

此选项仅由 SYM53C8XX 驱动程序支持（而不是 NCR53C8XX）。
SYMBIOS 53C8XX 芯片能够在检测到预期的断开连接（总线自由阶段）时立即对 SCSI 总线进行仲裁。要开始这一过程，必须在芯片连接到 SCSI 总线时设置 SCNTL1 IO 寄存器的第 1 位。
如果在此连接中启用了此功能，那么只要竞争 SCSI 总线的设备优先级较低，该芯片就有很大机会赢得仲裁。特别地，当芯片使用 SCSI ID 7 时，它将肯定赢得下一次 SCSI 总线仲裁。
由于无法知道哪些设备正在尝试争夺总线，因此启用此功能可能会非常不公平。因此，建议不要启用它，或者最多在芯片输掉前一次仲裁的情况下启用它（启动选项 'iarb:1'）。
此功能有以下优点：

a) 允许 ID 7 的发起者在需要时赢得仲裁。
b) 至少重叠 4 微秒的仲裁时间与处理当前连接结束和启动下一个任务的脚本执行时间。

嗯……但是 (a) 可能会阻止其他设备重新选择发起者，并延迟数据传输或状态/完成，而 (b) 如果脚本执行时间超过 4 微秒，则可能浪费 SCSI 总线带宽。
IARB 的使用需要在编译时定义 SCSI_NCR_IARB_SUPPORT 选项，并且在启动时设置 'iarb' 启动选项为非零值。对于实际工作来说这不是很有用，但可以用于测试 SCSI 设备或某些可以从其获益的应用。顺便说一句，如果你在高 I/O 负载下使用 IARB 时遇到“意外断开”、“不良重新选择”等问题，你不应该感到惊讶，因为强行喂食并同时阻塞其后端是不能长久运行的。:-))

### 11. ncr53c8xx.h 头文件中的一些常量和标志
==================================

其中一些是从配置参数定义的。要更改其他“定义”，必须编辑头文件。只有在你知道自己在做什么时才这样做。
SCSI_NCR_SETUP_SPECIAL_FEATURES（默认：已定义）
如果定义了此选项，驱动程序将根据芯片和修订版本ID启用一些特殊功能。
对于810A、860、825A、875和895 SCSI芯片，此选项启用了在SCSI传输处理过程中减少PCI总线负载和内存访问的功能：突发操作码获取、读取多个、读取行、预取、缓存行、写入和无效化、突发128（仅限875）、大DMA FIFO（仅限875）、偏移16（仅限875）。
可以通过以下启动配置命令更改：

```
ncr53c8xx=specf:n
```

SCSI_NCR_IOMAPPED（默认：未定义）
如果定义了此选项，则强制使用正常I/O。

SCSI_NCR_SHARE_IRQ（默认：已定义）
如果定义了此选项，则请求共享IRQ。

SCSI_NCR_MAX_TAGS（默认：8）
向设备发送的同时标记命令的最大数量。
可以通过“settags <目标> <最大标签数>”更改。

SCSI_NCR_SETUP_DEFAULT_SYNC（默认：50）
驱动程序在启动时用于同步协商的传输周期因子。0表示异步。
可以通过“setsync <目标> <周期因子>”更改。

SCSI_NCR_SETUP_DEFAULT_TAGS（默认：8）
向设备发送的同时标记命令的默认数量。
小于1表示在启动时禁用标记命令队列。
SCSI_NCR_ALWAYS_SIMPLE_TAG（默认：已定义）
对于读取和写入命令使用SIMPLE TAG。
可以通过“setorder <有序|简单|默认>”更改。

SCSI_NCR_SETUP_DISCONNECTION（默认：已定义）
如果定义了此选项，则允许目标断开连接。
SCSI_NCR_SETUP_FORCE_SYNC_NEGO （默认：未定义）
如果定义了该选项，将尝试对所有 SCSI-2 设备进行同步协商。
可以通过 "setsync <target> <period>" 进行更改。

SCSI_NCR_SETUP_MASTER_PARITY （默认：已定义）
如果定义了该选项，则启用主校验位检查。

SCSI_NCR_SETUP_SCSI_PARITY （默认：已定义）
如果定义了该选项，则启用 SCSI 校验位检查。

SCSI_NCR_PROFILE_SUPPORT （默认：未定义）
如果定义了该选项，则收集配置文件信息。

SCSI_NCR_MAX_SCATTER （默认：128）
驱动程序 ccb 的分散列表大小。

SCSI_NCR_MAX_TARGET （默认：16）
每个主机的最大目标数。

SCSI_NCR_MAX_HOST （默认：2）
最大主机控制器数量。

SCSI_NCR_SETTLE_TIME （默认：2）
重置后驱动程序等待的秒数。

SCSI_NCR_TIMEOUT_ALERT （默认：3）
如果一个挂起的命令在指定秒数后超时，则下一个命令使用有序标签。
避免无序标签命令的超时。
### SCSI_NCR_CAN_QUEUE		(默认值: 7 * SCSI_NCR_MAX_TAGS)
主机上可以排队的最大命令数。

### SCSI_NCR_CMD_PER_LUN		(默认值: SCSI_NCR_MAX_TAGS)
针对一个设备，主机上可以排队的最大命令数。

### SCSI_NCR_SG_TABLESIZE		(默认值: SCSI_NCR_MAX_SCATTER - 1)
Linux 散聚列表的最大大小。

### SCSI_NCR_MAX_LUN	(默认值: 8)
每个目标上的最大 LUN 数。

### 12. 安装
=================

此驱动程序是 Linux 内核分发的一部分。
驱动程序文件位于内核源码树的子目录 `drivers/scsi` 中。
驱动程序文件如下：

- `README.ncr53c8xx`：此文件
- `ChangeLog.ncr53c8xx`：变更日志
- `ncr53c8xx.h`：定义
- `ncr53c8xx.c`：驱动程序代码

新版本的驱动程序会单独发布，以便在将其包含到 Linux 内核分发之前进行测试和验证新功能。以下 URL 提供了最新可用补丁的信息：

      `ftp://ftp.tux.org/pub/people/gerard-roudier/README`

### 13. 架构相关特性
===================

（尚未编写）

### 14. 已知问题
==================

#### 14.1 使用 Iomega Jaz 设备时的标记命令
-------------------------------------------

我没有尝试过这种设备，但有人报告说：这种设备支持标记命令排队。然而，在启动过程中，它会拒绝标记命令。这种行为符合 SCSI-2 规范的 6.8.2 节。在这种情况下，当前驱动程序的行为并不令人满意。因此，请不要为能够关闭电源的设备启用标记命令排队。另一个可能出现的问题是超时。避免超时的唯一方法似乎是编辑 `linux/drivers/scsi/sd.c` 并增加当前的超时值。

#### 14.2 添加新的控制器后设备名称发生变化
---------------------------------------------------------

当您向已经拥有一个或多个此类控制器的系统中添加一个新的基于 NCR53C8XX 芯片的控制器时，可能会发生由于驱动程序注册顺序导致的设备名称变化问题。
如果至少有一个控制器使用 NvRAM，则 SDMS BIOS 版本 4 允许您定义 BIOS 扫描 SCSI 板卡的顺序。如果设置了 NvRAM 检测选项，驱动程序将根据 BIOS 信息来附接控制器。
如果您的控制器没有 NvRAM，您可以：

- 在引导命令行中要求驱动程序反向探测芯片 ID：`ncr53c8xx=revprob:y`
- 对 `fstab` 文件进行适当的修改。
使用 Eric Youngdale 的 'scsidev' 工具

14.3 仅使用 8 位设备与 16 位宽 SCSI 控制器
---------------------------------------------------------

当仅连接了 8 位窄设备到 16 位宽的 SCSI 控制器时，你必须确保 SCSI 总线的宽部分的线路被上拉。
这可以通过启用 SCSI 控制卡上的宽终结器部分来实现。
TYAN 1365 文档修订版 1.2 关于此类设置的信息是不正确的（第 10 页，图 3.3）。

14.4 在内存写入和失效期间可能出现的数据损坏
----------------------------------------------------------

这个问题在 SYMBIOS DEL 397，部件编号 69-039241，项目 4 中有描述。
在某些复杂情况下，53C875 芯片版本 <= 3 可能在非缓存行对齐的 4 DWORD 边界处开始 PCI 写入和失效命令。
这种情况只有在缓存行大小为 8 DWORD 或更大时才可能发生。
Pentium 系统使用 8 DWORD 的缓存行大小，因此会受到此芯片缺陷的影响，而 i486 系统使用 4 DWORD 的缓存行大小，因此不受影响。
当这种情况发生时，芯片可能会在只填充了涉及传输的最后一段缓存行的一部分后就完成写入和失效命令，从而导致这部分缓存行其余部分的数据损坏。
不使用 Write And Invalidate 显然可以消除这个芯片缺陷，因此现在驱动程序的默认设置是不使用该功能。
然而，对于像我这样希望启用此功能的人，我已经添加了 SYMBIOS 建议的部分解决方案。这个解决方案在进入 DATA IN 阶段时重置地址逻辑，从而防止在阶段的第一个 SCSI MOVE 操作时触发该缺陷。根据以下情况，这个解决方案应该足够了：

唯一一个大于 8 DWORD 的内部数据结构，并且由 SCRIPTS 处理器移动的是包含 SCSI 转移上下文的“CCB 头”。这个数据结构以 8 DWORD 边界（即奔腾缓存行大小）对齐，因此至少在奔腾系统上，这个数据结构对该芯片缺陷免疫。
但是，在执行 SCSI 读取命令时，如果使用了一个 4 DWORD 但未按缓存行对齐的缓冲区，则可能会满足该缺陷的条件。
在使用 Linux 并且使用分散/聚集列表的情况下，这种情况不会发生，因为这些列表仅引用已正确对齐的系统缓冲区。因此，可能只需要在 Linux 中使用分散/聚集列表时才需要解决方法，并且在阶段错配后重新进入 SCSI 数据输入阶段时也是如此。

15. SCSI 问题排查
==================

15.1 问题追踪
--------------

大多数 SCSI 问题是由不符合标准的 SCSI 总线或有缺陷的设备引起的。如果你不幸遇到了 SCSI 问题，你可以检查以下事项：

- SCSI 总线电缆
- SCSI 链两端的终止器
- Linux 系统日志消息（某些消息可能有助于你解决问题）

如果你仍然找不到问题的来源，可以配置驱动程序，禁用所有特性：
- 只允许异步数据传输
- 禁用带标签的命令
- 不允许断开连接

现在，如果你的 SCSI 总线没有问题，你的系统很有可能在这种安全配置下工作，尽管性能不是最佳的。如果在这种情况下仍然失败，那么你可以将问题描述发送到适当的邮件列表或新闻组。请给我一份副本，以确保我能收到它。显然，驱动程序代码中可能存在错误。

我的电子邮件地址：Gerard Roudier <groudier@free.fr>

允许断开连接对于使用多个设备的 SCSI 总线非常重要，但通常会导致有缺陷设备的问题。
同步数据传输会增加快速设备（如硬盘）的吞吐量。具有大缓存的良好 SCSI 硬盘可以从带标签的命令队列中受益。
尝试一次启用一个特性，并通过控制命令进行测试。例如：

```
echo "setsync all 25" >/proc/scsi/ncr53c8xx/0
```

这将为所有目标启用快速同步数据传输协商。
```shell
echo "setflag 3" >/proc/scsi/ncr53c8xx/0
```

将会重置目标 3 的标志（no_disc），从而允许其断开 SCSI 总线的连接。

```shell
echo "settags 3 8" >/proc/scsi/ncr53c8xx/0
```

如果该设备支持，这将为目标 3 启用带有标签的命令排队。一旦你找到了导致问题的设备和特性，只需禁用该设备上的该特性即可。

15.2 理解硬件错误报告
-------------------------

当驱动程序检测到意外的错误条件时，可能会显示如下模式的消息：

```shell
sym53c876-0:1: ERROR (0:48) (1-21-65) (f/95) @ (script 7c0:19000000)
sym53c876-0: script cmd = 19000000
sym53c876-0: regdump: da 10 80 95 47 0f 01 07 75 01 81 21 80 01 09 00
```

消息中的某些字段可能有助于理解问题的原因，具体如下：

```shell
sym53c876-0:1: ERROR (0:48) (1-21-65) (f/95) @ (script 7c0:19000000)
............A.........B.C....D.E..F....G.H.......I.....J...K......
```

字段 A : 目标编号
控制器在错误发生时正在与其通信的设备的 SCSI ID。

字段 B : DSTAT I/O 寄存器（DMA 状态）
  ========   =============================================================
  位 0x40   MDPE 主数据奇偶校验错误
             在 PCI 总线上检测到的数据奇偶校验错误
```
位 0x20   BF   总线故障
             检测到 PCI 总线故障条件
  位 0x01   IID  检测到非法指令
             当芯片检测到某些条件下的非法指令格式时设置
位 0x80   DFE  DMA FIFO 空
             纯状态位，不表示错误
========   =============================================================
  
  如果报告的 DSTAT 值包含 MDPE (0x40) 和 BF (0x20) 的组合，则原因可能是 PCI 总线问题
字段 C : SIST I/O 寄存器（SCSI 中断状态）
  ========   ==================================================================
  位 0x08   SGE  SCSI 严重错误
             表示芯片检测到 SCSI 总线上的一种严重错误条件，导致 SCSI 协议无法正常工作
  位 0x04   UDC  意外断开连接
             表示设备在芯片未预期的情况下释放了 SCSI 总线。设备可能这样做是为了指示 SCSI 发起者发生了无法通过 SCSI 协议报告的错误条件
  位 0x02   RST  SCSI 总线复位
             通常情况下，SCSI 目标不会复位 SCSI 总线，尽管总线上的任何设备都可以随时复位它
  位 0x01   PAR  奇偶校验错误
             检测到 SCSI 奇偶校验错误
========   ==================================================================

  在故障的 SCSI 总线上，芯片可能会检测到 SGE (0x08)、UDC (0x04) 和 PAR (0x01) 中的任何一种错误条件。如果您的 SCSI 系统有时遇到这些错误条件，特别是 SCSI 严重错误，则 SCSI 总线问题很可能是这些错误的原因。
对于字段 D、E、F、G 和 H，您可以查阅 `sym53c8xx_defs.h` 文件，该文件中包含一些关于 I/O 寄存器位的基本注释。
字段 D : SOCL  SCSI 输出控制锁存器
          此寄存器反映了芯片希望驱动或与之比较的 SCSI 控制线的状态
字段 E：SBCL - SCSI 总线控制线
    SCSI 总线上控制线的实际值
字段 F：SBDL - SCSI 总线数据线
    SCSI 总线上数据线的实际值
字段 G：SXFER - SCSI 传输
    包含输出的同步周期设置和当前的同步偏移（偏移 0 表示异步）
字段 H：SCNTL3 - SCSI 控制寄存器 3
    包含异步和同步数据传输的定时值设置
理解字段 I、J、K 和转储需要具备良好的 SCSI 标准知识、芯片核心功能以及内部驱动数据结构的知识。
除非你希望帮助维护驱动代码，否则不需要解码和理解它们。

16. 同步传输协商表
==================

下面的表格是通过调用驱动程序用于同步协商定时计算和芯片设置的例程生成的。
第一个表格对应于使用 80 MHz 时钟和 5 个时钟分频器的 Ultra 芯片 53875 和 53C860。
第二个表格通过将 SCSI 时钟设置为 40 MHz 并使用 4 个时钟分频器计算得出，适用于所有以快速 SCSI-2 模式工作的 NCR53C8XX 芯片。
周期以纳秒为单位，速度以每秒百万次传输为单位。
