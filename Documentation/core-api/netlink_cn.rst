### SPDX 许可证标识符: BSD-3-Clause

### _kernel_netlink_

===================================
针对内核开发者的 Netlink 指南
===================================

### 一般指导
#### 属性枚举

较旧的家族经常定义值为 `0` 的 "空" 属性和命令，并命名为 `unspec`。虽然这被支持（`type: unused`），但在新的家族中应避免这样做。实际上 `unspec` 枚举值并未使用，因此只需将第一个属性的值设置为 `1`。

#### 消息枚举

对于请求和响应使用相同的命令ID。这样便于匹配它们，并且我们有足够的ID空间。
对于通知使用单独的命令ID。这样便于区分通知与响应（并通过不同于响应的API向用户应用程序展示）。

#### 响应请求

较旧的家族不会对所有的命令作出响应，特别是 NEW / ADD 命令。用户只能通过 ACK 获取操作是否成功的信息。尝试找到有用的数据返回。一旦命令被添加，无论它是否以完整的消息还是仅 ACK 形式响应都是 uAPI 并且不能更改。最好倾向于做出响应。
特别地，NEW 和 ADD 命令应该响应包含新创建对象的标识信息，例如分配的对象ID（无需依赖于 `NLM_F_ECHO`）。

#### NLM_F_ECHO

确保将请求信息传递给 `genl_notify()` 以便 `NLM_F_ECHO` 生效。这对于需要从内核获取精确反馈的程序非常有用（例如用于日志记录目的）。

#### 支持转储一致性

如果在转储过程中迭代对象可能会跳过某些对象或重复某些对象，请确保使用 `NLM_F_DUMP_INTR` 报告转储不一致性。
这通常是通过维护一个结构的代号并将其记录在 `struct netlink_callback` 的 `seq` 成员中来实现的。

### Netlink 规范
#### 文档说明
文档描述了仅与内核空间相关的 Netlink 规范部分。

#### 全局变量
##### 内核策略

定义了内核验证策略是“全局”的，即对于家族的所有操作相同；定义为每个操作单独——“逐个操作”；或者分别针对每个操作及其类型（执行 vs 转储）——“分离”。
新家族应当使用“每操作”（`per-op`，即默认设置）以便能够缩小特定命令所接受属性的范围。
检查
------

本节介绍属性规范中`checks`子部分的文档。

未终止-可接受
~~~~~~~~~~~~~~~

接受不以空字符终止的字符串（仅限于遗留家族）
该选项将策略类型从`NLA_NUL_STRING`切换到`NLA_STRING`。

最大长度
~~~~~~~

为二进制或字符串属性定义最大长度（对应于结构体`nla_policy`中的`len`成员）。对于字符串属性，终止的空字符不计入`最大长度`之内。
此字段可以是字面量整数值，也可以是一个已定义常量的名字。字符串类型可以通过减一来指定常量值（即`最大长度: 常量 - 1`），以预留出终止字符的空间，因此实现应识别这种模式。

最小长度
~~~~~~~

与`最大长度`类似，但定义的是最小长度。
