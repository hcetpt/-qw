DMA属性
==============

本文档描述了在`linux/dma-mapping.h`中定义的DMA属性的语义。

DMA_ATTR_WEAK_ORDERING
----------------------

`DMA_ATTR_WEAK_ORDERING`指定了对映射的读写操作可能具有弱排序性，也就是说读和写操作可能会相互交错。由于平台可以选择性地实现`DMA_ATTR_WEAK_ORDERING`，那些不支持它的平台将简单地忽略此属性，并表现出默认行为。

DMA_ATTR_WRITE_COMBINE
----------------------

`DMA_ATTR_WRITE_COMBINE`指定了对映射的写操作可以被缓冲以提高性能。由于平台可以选择性地实现`DMA_ATTR_WRITE_COMBINE`，那些不支持它的平台将简单地忽略此属性，并表现出默认行为。

DMA_ATTR_NO_KERNEL_MAPPING
--------------------------

`DMA_ATTR_NO_KERNEL_MAPPING`允许平台避免为分配的缓冲区创建内核虚拟映射。在某些架构上，创建此类映射是一项非平凡的任务，且会消耗非常有限的资源（如内核虚拟地址空间或DMA一致性地址空间）。使用此属性分配的缓冲区只能通过调用`dma_mmap_attrs()`传递给用户空间。通过使用此API，您保证不会引用由`dma_alloc_attr()`返回的指针。您可以将其视为一个必须传递给`dma_mmap_attrs()`和`dma_free_attrs()`的标识符。确保在这两个函数每次调用时都设置了此属性。

由于平台可以选择性地实现`DMA_ATTR_NO_KERNEL_MAPPING`，那些不支持它的平台将简单地忽略此属性，并表现出默认行为。

DMA_ATTR_SKIP_CPU_SYNC
----------------------

默认情况下，`dma_map_{single,page,sg}`函数家族会将给定的缓冲区从CPU域转移到设备域。一些高级用例可能需要多个设备共享一个缓冲区。这通常要求为每个设备单独创建映射，通常是通过多次调用`dma_map_{single,page,sg}`函数来完成，其中设备指针指向参与缓冲区共享的每个设备。首次调用会将缓冲区从“CPU”域转移到“设备”域，从而同步CPU缓存（通常意味着已刷新或使缓存无效，具体取决于DMA方向）。然而，对于其他设备的后续`dma_map_{single,page,sg}()`调用将会对CPU缓存执行完全相同的同步操作。CPU缓存同步可能是耗时的操作，尤其是当缓冲区很大时，因此强烈建议尽可能避免它。

`DMA_ATTR_SKIP_CPU_SYNC`允许平台代码跳过给定缓冲区的CPU缓存同步，假设该缓冲区已经转移到“设备”域。此属性也可以用于`dma_unmap_{single,page,sg}`函数家族，以强制缓冲区在释放其映射后仍保留在设备域中。请谨慎使用此属性！

DMA_ATTR_FORCE_CONTIGUOUS
-------------------------

默认情况下，DMA映射子系统允许从单个页面组装`dma_alloc_attrs()`函数分配的缓冲区，如果它可以作为连续块映射到设备DMA地址空间。通过指定此属性，所分配的缓冲区也被强制在物理内存中是连续的。
### DMA_ATTR_ALLOC_SINGLE_PAGES

这是对DMA映射子系统的提示，表明尝试以提高TLB效率的方式分配内存可能不值得花费时间（即不值得尝试使用更大的页面来构建映射）。如果您遇到以下情况，您可能需要指定此选项：

- 您知道访问这部分内存不会使TLB过载
您可能知道访问模式可能是连续的，或者虽然不连续但不太可能在可能位于不同物理页的多个地址之间频繁切换
- 您知道访问内存时TLB缺失的代价足够小以至于可以忽略。如果您正在执行像解密或解压缩这样的繁重操作，这可能是适用的情况
- 您知道DMA映射是临时性的。如果预计映射的生命周期较短，则优化分配（避免使用大页面）可能比获得较大页面带来的轻微性能提升更有价值

设置此提示并不能保证不会得到大页面，但它意味着我们不会特别努力地去获取它们。

> **注**：目前，DMA_ATTR_ALLOC_SINGLE_PAGES仅在ARM上实现，不过针对ARM64的补丁可能会很快发布。

### DMA_ATTR_NO_WARN

这告诉DMA映射子系统抑制分配失败报告（类似于__GFP_NOWARN）。
在某些架构上，分配失败会以错误消息的形式记录到系统日志中。尽管这有助于识别和调试问题，但如果驱动程序能够处理失败（例如稍后重试），则这些错误消息实际上并不会造成问题，并且根据重试机制的实现方式，还可能淹没系统日志。

因此，这为驱动程序提供了一种方法，在分配失败不是问题的情况下避免这些错误消息出现在日志中。

> **注**：目前DMA_ATTR_NO_WARN仅在PowerPC上实现。
翻译为中文：DMA_ATTR_PRIVILEGED

一些高级外设，如远程处理器和GPU，在特权“监督”模式和非特权“用户”模式下都会访问DMA缓冲区。此属性用于指示DMA映射子系统，该缓冲区在提升的特权级别下可完全访问（理想情况下，在较低特权级别下无法访问或至少只读）。
