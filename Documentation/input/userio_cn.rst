.. include:: <isonum.txt>

===================
用户 I/O 协议
===================

:版权: |copy| 2015 Stephen Chandler Paul <thatslyude@gmail.com>

由 Red Hat 赞助

简介
=============

此模块旨在使输入驱动程序开发人员的工作更加轻松，通过允许他们测试各种 serio 设备（主要是笔记本电脑上的各种触摸板）而无需实际设备在面前。用户 I/O 通过允许任何特权用户空间程序直接与内核的 serio 驱动程序交互并从那里控制一个虚拟 serio 端口来实现这一点。

使用概述
==============

为了与用户 I/O 内核模块进行交互，只需在应用程序中打开 `/dev/userio` 字符设备。通过向该设备写入命令来将命令发送到内核模块，并且从 serio 驱动程序接收到的所有数据都直接从 `/dev/userio` 设备读取。所有与设备交互所需的结构和宏都在 `<linux/userio.h>` 和 `<linux/serio.h>` 中定义。

命令结构
=================

用于向 `/dev/userio` 发送命令的结构如下所示：

```c
struct userio_cmd {
    __u8 type;
    __u8 data;
};
```

`type` 描述了正在发送的命令类型。这可以是 `<linux/userio.h>` 中定义的任何 USERIO_CMD 宏。`data` 是与命令相关的参数。如果命令没有参数，则可以忽略此字段，内核也会忽略它。
每个命令应通过直接向字符设备写入结构来发送。如果发送的命令无效，字符设备将返回错误，并且更详细的错误信息将打印到内核日志中。一次只能发送一条命令，首次命令后写入字符设备的任何额外数据将被忽略。
要关闭虚拟 serio 端口，只需关闭 `/dev/userio`。

命令
========

USERIO_CMD_REGISTER
~~~~~~~~~~~~~~~~~~~

将端口注册到 serio 驱动程序并开始双向传输数据。注册必须在使用 USERIO_CMD_SET_PORT_TYPE 设置端口类型后才能执行。此命令没有参数。

USERIO_CMD_SET_PORT_TYPE
~~~~~~~~~~~~~~~~~~~~~~~~

设置我们正在模拟的端口类型，其中 `data` 是要设置的端口类型。可以是 `<linux/serio.h>` 中的任何宏。例如：SERIO_8042 将端口类型设置为标准的 PS/2 端口。

USERIO_CMD_SEND_INTERRUPT
~~~~~~~~~~~~~~~~~~~~~~~~~

通过虚拟 serio 端口向 serio 驱动程序发送中断，其中 `data` 是要发送的中断数据。

用户空间工具
===============

用户 I/O 用户空间工具能够使用来自 i8042 的一些调试信息记录 PS/2 设备，并在 `/dev/userio` 上回放这些设备。这些工具的最新版本可以在以下位置找到：

    https://github.com/Lyude/ps2emu
