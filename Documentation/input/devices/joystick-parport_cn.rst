```rst
.. include:: <isonum.txt>

.. _joystick-parport:

==============================
并行端口游戏杆驱动程序
==============================

:版权: |copy| 1998-2000 Vojtech Pavlik <vojtech@ucw.cz>
:版权: |copy| 1998 Andree Borrmann <a.borrmann@tu-bs.de>

赞助商：SuSE

免责声明
==========

本文件中的任何信息均按原样提供，没有任何保证其真实性。因此，请自行承担风险使用。可能发生的损害包括烧毁您的并行端口、游戏杆等，甚至更多。就像当闪电击中你时，这不是我们的问题。

介绍
============

并行端口游戏杆驱动程序用于那些最初并非为PC和其他运行Linux的计算机设计的游戏杆和游戏手柄。由于这个原因，PC通常缺乏连接这些设备所需的正确端口。由于并行端口能够随意改变单个位，并且提供了输出和输入位，因此它是PC上最适合连接此类设备的端口。

支持的设备
=================

许多控制台和8位计算机的游戏手柄和游戏杆都得到了支持。以下各节讨论了每种设备的使用方法。

NES 和 SNES
------------

任天堂娱乐系统（NES）和超级任天堂娱乐系统（SNES）的游戏手柄广泛可用，并且容易获取。此外，它们很容易连接到PC上，并且不需要太多的处理速度（NES需要108微秒，SNES需要165微秒，而PC游戏手柄需要约1000微秒）来进行通信。

所有NES和SNES都使用相同的同步串行协议，由计算机侧进行时钟同步（因此时间不敏感）。为了允许最多同时连接5个NES和/或SNES游戏手柄和/或SNES鼠标到并行端口，使用并行端口的输出线共享，而每个游戏手柄分配一个可用的输入线。

此协议由gamecon.c驱动程序处理，因此您将使用它来处理NES、SNES游戏手柄和SNES鼠标。

PC并行端口的主要问题是它们没有在任何引脚上提供+5V电源。因此，如果您需要一个可靠的手柄电源，可以使用键盘或游戏杆端口，并制作一个直通电缆。您也可以直接从电源（红色电线是+5V）获取电源。

如果您只想使用并行端口，可以从某个数据引脚获取电源。对于大多数游戏手柄和并行端口实现，只需要一个引脚，我建议使用第9引脚，即最高的数据位。另一方面，如果您不打算在端口上使用除了NES/SNES之外的任何东西，任何介于第4引脚和第9引脚之间的引脚都可以工作：

    (第9引脚) -----> 电源

不幸的是，有些手柄需要更多的电源，而某些并行端口不能通过数据引脚提供太多电流。如果这是您的情况，您需要使用二极管（以防止破坏您的并行端口），并将两个或多个数据位的电流合并在一起：

	      二极管
    (第9引脚) ----|>|-------+------> 电源
			|
    (第8引脚) ----|>|-------+
			|
    (第7引脚) ----|>|-------+
			|
    <依此类推>         :
			|
    (第4引脚) ----|>|-------+

地线相当简单。在PC的并行端口上，地线位于第18引脚到第25引脚中的任何一个。因此，您可以使用这些引脚中的任何一个作为地线：

    (第18引脚) -----> 地线

NES和SNES手柄有两个输入位，Clock和Latch，它们驱动串行传输。这些分别连接到并行端口的第2引脚和第3引脚：

    (第2引脚) -----> Clock
    (第3引脚) -----> Latch

最后一件事是NES/SNES的数据线。这只是不共享的，每个手柄需要自己的数据引脚。并行端口的引脚如下：

    (第10引脚) -----> 手柄1数据
    (第11引脚) -----> 手柄2数据
    (第12引脚) -----> 手柄3数据
    (第13引脚) -----> 手柄4数据
    (第15引脚) -----> 手柄5数据

请注意，第14引脚未使用，因为它不是并行端口上的输入引脚。

这是您在连接PC一侧所需的一切，现在让我们来看看游戏手柄这一侧。NES和SNES有不同的连接器。此外，有很多NES克隆机，因为任天堂使用专有的连接器，克隆者不能使用并且使用标准D-Cannon连接器。无论如何，如果您有一个游戏手柄，并且它有A、B、Turbo A、Turbo B、Select和Start按钮，并且通过5根线连接，那么它要么是NES或NES克隆，并且将与这种连接一起工作。SNES游戏手柄也使用5根线，但有更多的按钮。当然，它们也会工作：

  NES游戏手柄的接线图                 SNES游戏手柄和鼠标的接线图

             +----> 电源                   +-----------------------\
             |                            7 | o  o  o  o |  x  x  o  | 1
   5 +---------+  7                         +-----------------------/
     | x  x  o   \                            |  |  |  |          |
     | o  o  o  o |                           |  |  |  |          +-> 地线
   4 +------------+ 1                         |  |  |  +------------> 数据
       |  |  |  |                             |  |  +---------------> Latch
       |  |  |  +-> 地线                      |  +------------------> Clock
       |  |  +----> Clock                     +---------------------> 电源
       |  +-------> Latch
       +----------> 数据

  NES克隆（db9）游戏手柄的接线图     NES克隆（db15）游戏手柄的接线图

        +---------> Clock                    +-----------------> 数据
        | +-------> Latch                    |             +---> 地线
        | | +-----> 数据                     |             |
        | | |                              ___________________
    _____________                        8 \ o x x x x x x o / 1
  5 \ x o o o x / 1                         \ o x x o x x o /
     \ x o x o /                          15 `~~~~~~~~~~~~~' 9
    9 `~~~~~~~' 6                             |     |     |
         |   |                                |     |     +----> Clock
         |   +----> 电源                     |     +----------> Latch
         +--------> 地线                    +----------------> 电源

多系统游戏杆
---------------------

在8位机器时代，有一种事实上的游戏杆端口标准。它们都是数字的，并且都使用D-Cannon 9针连接器（db9）。正因为如此，一个游戏杆可以在Atari（130、800XE、800XL、2600、7200）、Amiga、Commodore C64、Amstrad CPC、Sinclair ZX Spectrum等许多机器上无障碍使用。这就是为什么这些游戏杆被称为“多系统”。

现在它们的接线图：

        +---------> 右
        | +-------> 左
        | | +-----> 下
        | | | +---> 上
        | | | |
    _____________
  5 \ x o o o o / 1
     \ x o x o /
    9 `~~~~~~~' 6
         |   |
         |   +----> 按钮
         +--------> 地线

然而，随着时间的推移，对此标准进行了扩展，而这些扩展并不相互兼容：

          Atari 130、800/XL/XE                   MSX

                                           +-----------> 电源
        +---------> 右                  | +---------> 右
        | +-------> 左                   | | +-------> 左
        | | +-----> 下                   | | | +-----> 下
        | | | +---> 上                     | | | | +---> 上
        | | | |                            | | | | |
    _____________                        _____________
  5 \ x o o o o / 1                    5 \ o o o o o / 1
     \ x o o o /                          \ o o o o /
    9 `~~~~~~~' 6                        9 `~~~~~~~' 6
         | | |                              | | | |
         | | +----> 按钮                  | | | +----> 按钮1
         | +------> 电源                   | | +------> 按钮2
         +--------> 地线                  | +--------> 输出3
                                            +----------> 地线

          Amstrad CPC                           Commodore C64

                                           +-----------> 模拟Y
        +---------> 右                  | +---------> 右
        | +-------> 左                   | | +-------> 左
        | | +-----> 下                   | | | +-----> 下
        | | | +---> 上                     | | | | +---> 上
        | | | |                            | | | | |
    _____________                        _____________
  5 \ x o o o o / 1                    5 \ o o o o o / 1
     \ x o o o /                          \ o o o o /
    9 `~~~~~~~' 6                        9 `~~~~~~~' 6
         | | |                              | | | |
         | | +----> 按钮1                | | | +----> 按钮
         | +------> 按钮2                | | +------> 电源
         +--------> 地线                  | +--------> 地线
                                            +----------> 模拟X

          Sinclair Spectrum +2A/+3           Amiga 1200

      +-----------> 上                     +-----------> 按钮3
      | +---------> 点火                   | +---------> 右
      | |                                  | | +-------> 左
      | |   +-----> 地线                 | | | +-----> 下
      | |   |                              | | | | +---> 上
      | |   |                              | | | | |
    _____________                        _____________
  5 \ o o x o x / 1                    5 \ o o o o o / 1
     \ o o o o /                          \ o o o o /
    9 `~~~~~~~' 6                        9 `~~~~~~~' 6
       | | | |                              | | | |
       | | | +----> 右                   | | | +----> 按钮1
       | | +------> 左                    | | +------> 电源
       | +--------> 地线                  | +--------> 地线
       +----------> 下                    +----------> 按钮2

  还有很多其他类型的
```
多系统手柄使用 db9.c
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

对于多系统手柄及其衍生产品，编写了db9.c驱动程序。它只允许每个并行端口连接一个手柄/游戏杆，但接口易于构建且几乎适用于任何设备。对于基本的单按钮多系统手柄，您可以这样将电线连接到并行端口：

    (引脚 1) -----> 电源
    (引脚 18) -----> 地线

    (引脚 2) -----> 上
    (引脚 3) -----> 下
    (引脚 4) -----> 左
    (引脚 5) -----> 右
    (引脚 6) -----> 按钮 1

然而，如果手柄是基于开关的（例如，移动时会发出咔哒声），则根据您的并行端口，您可能需要在方向和按钮信号上使用10千欧姆的上拉电阻，如下所示：

    (引脚 2) ------------+------> 上
              电阻器  |
    (引脚 1) --[10kOhm]--+

尝试不使用它们，如果不起作用，则添加它们。对于TTL手柄/游戏杆，不需要上拉电阻。对于有两个按钮的手柄，将第二个按钮连接到并行端口的引脚7上：

    (引脚 7) -----> 按钮 2

就这样完成了。

顺便说一句，如果您已经为数字手柄驱动程序0.8.0.2构建了不同的适配器，db9.c驱动程序也支持这种设备类型8。（参见第3.2节）

多系统手柄使用 gamecon.c
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

对于某些人来说，并行端口上只有一个手柄是不够的，或者他们想与NES/SNES/PSX手柄一起使用。使用gamecon.c可以实现这一点。它最多支持上述类型的五个设备，包括单按钮和双按钮多系统手柄。
然而，没有免费的东西。为了允许多个手柄同时使用，您需要手柄完全基于开关（即非TTL）并且不需要电源。只需要一个简单的六个开关在里面。如果您的手柄具有更多功能（例如快速射击），则必须首先完全禁用这些功能才能使用gamecon.c。

此外，连接稍微复杂一些。您需要一堆二极管和一个上拉电阻。首先，像db9一样连接方向和按钮，但在中间加入二极管：

                二极管
    (引脚 2) -----|<|----> 上
    (引脚 3) -----|<|----> 下
    (引脚 4) -----|<|----> 左
    (引脚 5) -----|<|----> 右
    (引脚 6) -----|<|----> 按钮 1

对于双按钮手柄，您还需要连接另一个按钮：

    (引脚 7) -----|<|----> 按钮 2

最后，像下图所示将手柄的地线连接到并行端口上的电源和数据：

    数据    ------------+-----> 地线
              电阻器  |
    电源   --[10kOhm]--+

就这样完成了！

多系统手柄使用 turbografx.c
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

TurboGraFX接口由

    Steffen Schwenke <schwenke@burg-halle.de>

设计，允许多达七个多系统手柄连接到并行端口。在Steffen的版本中，每个手柄最多支持五个按钮。然而，由于这在所有并行端口上都不能可靠工作，turbografx.c驱动程序仅支持每个手柄一个按钮。有关如何构建该接口的更多信息，请参阅：

    http://www2.burg-halle.de/~schwenke/parport.html

索尼Playstation
----------------

PSX控制器由gamecon.c支持。PSX控制器（兼容DirectPadPro）的引脚定义如下：

    +---------+---------+---------+
  9 | o  o  o | o  o  o | o  o  o | 1               并行端口引脚
     \________|_________|________/
      |  |      |  |  |   |
      |  |      |  |  |   +--------> 时钟    ---  (4)
      |  |      |  |  +------------> 选择   ---  (3)
      |  |      |  +---------------> 电源    ---  (5-9)
      |  |      +------------------> 地线   ---  (18-25)
      |  +-------------------------> 命令  ---  (2)
      +----------------------------> 数据     ---  (10,11,12,13,15)

该驱动程序支持以下控制器：

 * 标准PSX手柄
 * NegCon PSX手柄
 * 模拟PSX手柄（红色模式）
 * 模拟PSX手柄（绿色模式）
 * PSX震动手柄
 * PSX DDR手柄

世嘉
----

所有的世嘉控制器或多或少都是基于标准的双按钮多系统手柄。然而，由于它们不使用开关而是使用TTL逻辑，因此唯一能与之配合使用的驱动程序是db9.c驱动程序。

世嘉Master System
~~~~~~~~~~~~~~~~~~

SMS游戏手柄几乎与普通的双按钮多系统手柄相同。将驱动程序设置为Multi2模式，使用相应的并行端口引脚，以及以下电路图：

      +-----------> 电源
      | +---------> 右
      | | +-------> 左
      | | | +-----> 下
      | | | | +---> 上
      | | | | |
    _____________
  5 \ o o o o o / 1
     \ o o x o /
    9 `~~~~~~~' 6
       | |   |
       | |   +----> 按钮 1
       | +--------> 地线
       +----------> 按钮 2

世嘉Genesis（MegaDrive）
~~~~~~~~~~~~~~~~~~~~~~~~~~

世嘉Genesis（在欧洲称为MegaDrive）手柄是对世嘉Master System手柄的扩展。它们使用更多的按钮（3+1，5+1，6+1）。使用以下电路图：

        +-----------> 电源
        | +---------> 右
        | | +-------> 左
        | | | +-----> 下
        | | | | +---> 上
        | | | | |
      _____________
    5 \ o o o o o / 1
       \ o o o o /
      9 `~~~~~~~' 6
        | | | |
        | | | +----> 按钮 1
        | | +------> 选择
        | +--------> 地线
        +----------> 按钮 2

选择引脚连接到并行端口的引脚14：

    (引脚 14) -----> 选择

其余部分与使用db9.c的Multi2手柄相同。

世嘉Saturn
~~~~~~~~~~~

世嘉Saturn有八个按钮，为了传输这些信息，而不像Genesis 6手柄那样使用黑客技术，它需要一个额外的选择引脚。尽管如此，它仍然由db9.c驱动程序处理。其引脚定义与其他任何东西都不同。使用以下电路图：

      +-----------> 选择 1
      | +---------> 电源
      | | +-------> 上
      | | | +-----> 下
      | | | | +---> 地线
      | | | | |
    _____________
  5 \ o o o o o / 1
     \ o o o o /
    9 `~~~~~~~' 6
       | | | |
       | | | +----> 选择 2
       | | +------> 右
       | +--------> 左
       +----------> 电源

选择1是并行端口的引脚14，选择2是并行端口的引脚16：

    (引脚 14) -----> 选择 1
    (引脚 16) -----> 选择 2

其他引脚（上、下、右、左、电源、地线）与使用db9.c的多系统手柄相同。

Amiga CD32
----------

Amiga CD32游戏手柄使用以下引脚定义：

        +-----------> 按钮 3
        | +---------> 右
        | | +-------> 左
        | | | +-----> 下
        | | | | +---> 上
        | | | | |
      _____________
    5 \ o o o o o / 1
       \ o o o o /
      9 `~~~~~~~' 6
        | | | |
        | | | +----> 按钮 1
        | | +------> 电源
        | +--------> 地线
        +----------> 按钮 2

它可以连接到并行端口并由db9.c驱动程序控制。它需要以下连线：

	============    =============
	CD32手柄        并行端口
	============    =============
	1（上）           2（D0）
	2（下）           3（D1）
	3（左）           4（D2）
	4（右）           5（D3）
	5（按钮 3）    14（AUTOFD）
	6（按钮 1）    17（SELIN）
	7（+5V）          1（STROBE）
	8（Gnd）         18（Gnd）
	9（按钮 2）     7（D5）
	============    =============

驱动程序
===========

有三个用于并行端口接口的驱动程序。如上所述，每个驱动程序允许连接不同组的手柄和手柄。以下是它们的命令行参数：

gamecon.c
---------

使用gamecon.c，您可以将多达五个设备连接到一个并行端口。它使用以下内核/模块命令行：

    gamecon.map=端口,手柄1,手柄2,手柄3,手柄4,手柄5

其中“端口”是并行端口接口的编号（例如，0表示parport0），而“手柄1”到“手柄5”是连接到不同数据输入引脚（10,11,12,13,15）的手柄类型，如本文件第2.1节所述。类型如下：

	===== =============================
	类型  手柄/手柄
	===== =============================
	  0   无
	  1   SNES手柄
	  2   NES手柄
	  4   多系统单按钮手柄
	  5   多系统双按钮手柄
	  6   N64手柄
	  7   索尼PSX控制器
	  8   索尼PSX DDR控制器
	  9   SNES鼠标
	===== =============================

PSX控制器类型在使用时会自动探测，因此热插拔应该可行（但不建议）。
如果你想同时使用多个并行端口，你可以使用 `gamecon.map2` 和 `gamecon.map3` 作为附加的命令行参数来支持另外两个并行端口。
PSX 驱动部分有两个特定的选项。`gamecon.psx_delay` 设置与控制器通信时的命令延迟。默认值为 25，应该可以正常工作，但你可以尝试降低它以获得更好的性能。如果手柄没有响应，请尝试增加该值直到它们开始工作。将类型设置为 8 可以使驱动程序用于《舞动革命》或类似的游戏。方向键会被注册为按键而不是 X 和 Y 轴。

`db9.c`
-------

除了制作接口外，使用 `db9.c` 驱动程序没有什么困难。它使用以下内核/模块命令行：

```
db9.dev=port,type
```

其中 `port` 是并行接口的编号（例如，0 表示 parport0）。
注意：此驱动程序仅在双向并行端口上工作。如果你的并行端口足够新，你应该不会遇到任何问题。旧的并行端口可能不具备此功能。

`Type` 是连接的摇杆或手柄的类型：

| Type | 摇杆/手柄 |
|------|------------------|
|  0   | 无       |
|  1   | 多系统单按钮摇杆 |
|  2   | 多系统双按钮摇杆 |
|  3   | Genesis 手柄（3+1 按钮） |
|  5   | Genesis 手柄（5+1 按钮） |
|  6   | Genesis 手柄（6+2 按钮） |
|  7   | Saturn 手柄（8 按钮）   |
|  8   | 多系统单按钮摇杆（v0.8.0.2 接线方式） |
|  9   | 两个多系统单按钮摇杆（v0.8.0.2 接线方式） |
| 10   | Amiga CD32 手柄     |

如果你想同时使用多个这些摇杆或手柄，你可以使用 `db9.dev2` 和 `db9.dev3` 作为附加的命令行参数来支持另外两个摇杆或手柄。

`turbografx.c`
--------------

`turbografx.c` 驱动程序使用一个非常简单的内核/模块命令行：

```
turbografx.map=port,js1,js2,js3,js4,js5,js6,js7
```

其中 `port` 是并行接口的编号（例如，0 表示 parport0）。
`jsX` 是连接到接口端口 1-7 的多系统摇杆的按钮数。对于标准的多系统摇杆，这个值是 1。
如果你想同时使用多个这些接口，你可以使用 `turbografx.map2` 和 `turbografx.map3` 作为附加的命令行参数来支持另外两个接口。

PC 并行端口接线图
==================

```
.----------------------------------------
```
在个人电脑端：
```
\ 13 12 11 10  9  8  7  6  5  4  3  2  1 /
 \  25 24 23 22 21 20 19 18 17 16 15 14 /
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
```

=====  =======  =============
   引脚  名称     描述
=====  =======  =============
   1    /STROBE  脉冲信号
 2-9   D0-D7    数据位0-7
  10   /ACK     确认信号
  11   BUSY     忙碌
  12   PE       纸张结束
  13   SELIN    选择输入
  14   /AUTOFD  自动进纸
  15   /ERROR   错误
  16   /INIT    初始化
  17   /SEL     选择
18-25  GND      信号地
=====  =======  =============

以上就是全部内容！祝您玩得开心！
