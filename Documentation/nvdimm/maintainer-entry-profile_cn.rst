### LIBNVDIMM 维护者条目简介

#### 概览
libnvdimm 子系统管理多种架构下的持久内存。邮件列表由 patchwork 追踪，地址如下：
https://patchwork.kernel.org/project/linux-nvdimm/list/
...并且该实例配置为在补丁被接受和合并到上游时向提交者提供反馈。补丁会被合并到 'libnvdimm-fixes' 或 'libnvdimm-for-next' 分支。这些分支可在此处获取：
https://git.kernel.org/pub/scm/linux/kernel/git/nvdimm/nvdimm.git/

通常情况下，补丁可以针对最新的 -rc 版本提交；但是，如果即将提交的代码变更依赖于其他待处理的变更，则应基于 libnvdimm-for-next 分支提交。然而，由于持久内存位于存储和内存的交界处，有些补丁更适合通过文件系统或内存管理树进行合并。如果有疑问，请抄送 nvdimm 邮件列表，维护者会帮助路由。提交的内容将暴露给 kbuild 机器人进行编译回归测试。在提交前最好能从该基础设施获得成功通知，但这不是必须的。

#### 提交检查清单补充
子系统有通过 ndctl 工具进行的单元测试：
https://github.com/pmem/ndctl
在补丁向上游提交之前需要通过这些测试，但首次发布时不一定要通过。如果需要帮助设置测试环境，请联系邮件列表。

##### ACPI 设备特定方法 (_DSM)
在考虑启用新的 _DSM 家族的补丁之前，必须从 ACPI 规范工作组的 NVDIMM 子团队获得格式接口代码。通常情况下，子系统的立场是反对 NVDIMM 命令集的泛滥，因此强烈建议实现对现有命令集的支持。请参阅 drivers/acpi/nfit/nfit.h 获取支持的命令集列表。

#### 关键周期日期
新提交可以在任何时候发送，但如果希望它们能在下一个合并窗口中被合并，则应在 -rc4 之前发送，并且理想情况下应在 -rc6 之前在 libnvdimm-for-next 分支上稳定下来。当然，如果一个补丁集需要超过两周的审查时间，那么 -rc4 已经太晚了，某些补丁可能需要多个开发周期才能完成审查。

#### 审查节奏
通常情况下，请等待最多一周后再请求反馈。建议使用私人邮件提醒。或者，也可以要求其他带有 Reviewed-by 标签的 libnvdimm 变更开发者进行查看并提供意见。
